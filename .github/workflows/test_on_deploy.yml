name: Test on Deploy

on:
  workflow_call:
    inputs:
      git-sha:
        required: false
        type: string
        default: ""
      deploy-env:
        required: true
        type: string
    secrets:
      OPENAI_API_KEY:
        required: true
  workflow_dispatch:

defaults:
  run:
    shell: bash

concurrency:
  group: test-${{ inputs.deploy-env }}
  cancel-in-progress: true

jobs:

  # Run our integration tests
  test:
    environment:
      name: ${{ inputs.deploy-env }}
      url: ${{ vars.ENV_URL }}
    name: Run integration tests
    runs-on: mdb-dev
    if: github.ref_type == 'branch'
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.git-sha }}
    # We have to install UV because (for now) these run in GH's runners
    - name: Setup uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ vars.CI_PYTHON_VERSION || '3.10' }}
        enable-cache: true
        prune-cache: false
    - name: Install dependencies
      run: |
        uv pip install -r requirements/requirements-test.txt

    # These are commented out but left here because they still need updating to use the new test system
    # - name: Run integration api and flow tests
    #   run: |

          # echo -e "\n===============MySQL Handler===============\n"
          # pytest -svx mindsdb/integrations/handlers/mysql_handler/

          # Currently requires a DB to be running. New testing system is being set up
          # echo -e "\n===============PostgreSQL Handler===============\n"
          # pytest -svx mindsdb/integrations/handlers/postgres_handler/

          # echo -e "\n===============MariaDB Handler===============\n"
          # pytest -svx tests/handler_tests/test_mariadb_handler.py

          # echo -e "\n===============File Handler===============\n"
          # pytest -svx mindsdb/integrations/handlers/file_handler/
    #   env:
    #     PROMETHEUS_MULTIPROC_DIR: ./prometheus_metrics
    #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    - name: Run Integration Tests
      run: |
          # Run tests in parallel and distribute a whole file to each worker
          pytest -n 8 --dist loadfile -vx tests/integration/tutorials tests/integration/flows -k "not test_auth"
          # Run this test separately because it alters the auth requirements, which breaks other tests
          pytest -vx tests/integration/flows/test_http.py -k test_auth
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        INTERNAL_URL: ${{ vars.INTERNAL_URL }}
    