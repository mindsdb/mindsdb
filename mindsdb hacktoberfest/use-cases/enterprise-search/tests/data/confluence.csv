id,status,title,spaceId,parentId,parentType,position,authorId,ownerId,lastOwnerId,createdAt,version_createdAt,version_message,version_number,version_minorEdit,version_authorId,body_storage_representation,body_storage_value,_links_webui,_links_editui,_links_tinyui
"295157","current","Overview","294915","[NULL]","[NULL]","177","712020:9cdf9595-1750-4458-a803-a418992f202c","712020:9cdf9595-1750-4458-a803-a418992f202c","[NULL]","2025-10-23T15:37:31.910Z","2025-10-23T15:37:31.910Z","","1","false","712020:9cdf9595-1750-4458-a803-a418992f202c","storage","<ac:layout><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">Say hello to your colleagues who want to know your name, pronouns, role, team and location (or if you're remote).</span></p>
        </ac:layout-cell><ac:layout-cell>

            <p />
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üìÑ Recent content that I've worked on</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <ac:structured-macro ac:name=""recently-updated"" ac:schema-version=""1"" ac:macro-id=""f9d6b4ce776b6df2ba84df23c64944e6""><ac:parameter ac:name=""max"">5</ac:parameter></ac:structured-macro>
        </ac:layout-cell><ac:layout-cell>

            <ac:structured-macro ac:name=""blog-posts"" ac:schema-version=""1"" ac:macro-id=""45110fb0-b1a0-433b-a707-39944dddecb0""><ac:parameter ac:name=""max"">5</ac:parameter><ac:parameter ac:name=""content"">titles</ac:parameter></ac:structured-macro>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üñê Get in touch</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p>‚úâÔ∏è <ac:placeholder>Insert your email here</ac:placeholder></p>
            <p>üíº <ac:placeholder>Insert your LinkedIn URL here</ac:placeholder></p>
        </ac:layout-cell><ac:layout-cell>

            <p>üîó <ac:placeholder>Insert your Twitter handle here</ac:placeholder></p>
            <p>üë§ <ac:placeholder>Insert your Medium profile here</ac:placeholder></p>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">End with a bang! Some options are: </span>&quot;I am so grateful to be here at <span style=""color: rgb(0,184,217);"">&lt;Insert company name&gt;</span> and very excited to get started!&quot; or &quot;Looking forward to meeting all of you!&quot; or &quot;Can't wait to get to know all of you!&quot;</p>
        </ac:layout-cell></ac:layout-section></ac:layout>","/spaces/~7120209cdf959517504458a803a418992f202c/overview","/pages/resumedraft.action?draftId=295157","/x/9YAE"
"491782","current","Standard Operating Procedures","491527","[NULL]","[NULL]","976","712020:9cdf9595-1750-4458-a803-a418992f202c","712020:9cdf9595-1750-4458-a803-a418992f202c","[NULL]","2025-10-23T16:10:32.319Z","2025-10-23T16:10:32.484Z","","1","false","712020:9cdf9595-1750-4458-a803-a418992f202c","storage","<h2>Description</h2><ac:structured-macro ac:name=""panel"" ac:schema-version=""1"" ac:macro-id=""0213aa84-5598-4a20-9b80-5673c0b002a7""><ac:parameter ac:name=""bgColor"">#F4F5F7</ac:parameter><ac:rich-text-body><p>In a sentence or two, describe the purpose of this space.</p></ac:rich-text-body></ac:structured-macro><h2>Search this Space</h2><p><ac:structured-macro ac:name=""livesearch"" ac:schema-version=""1"" ac:local-id=""e72dc22f-8448-4c46-9126-0f5027bbf994"" ac:macro-id=""1b95c6e7619bfe759b8aaadeb5178f9f""><ac:parameter ac:name=""spaceKey""><ri:space ri:space-key=""currentSpace()"" /></ac:parameter></ac:structured-macro></p><h2>Filter by Label</h2><ac:structured-macro ac:name=""info"" ac:schema-version=""1"" ac:macro-id=""a3d8737c-25d1-4861-a538-80773cb7fde8""><ac:rich-text-body><p>These are all the labels in use in this space. Select a label to see a list of content the label has been applied to.</p></ac:rich-text-body></ac:structured-macro><ac:structured-macro ac:name=""listlabels"" ac:schema-version=""1"" data-layout=""default"" ac:local-id=""8a2fdfbf-a690-4657-a257-e87109a1d1da"" ac:macro-id=""851322ba5ee38a64dddfee0d9529c725"" /><h2>Recently updated content</h2><ac:structured-macro ac:name=""info"" ac:schema-version=""1"" ac:macro-id=""cc618d87-0f97-4697-b056-69b4e6840b40""><ac:rich-text-body><p>This list below will automatically update each time somebody in your space creates or updates content.</p></ac:rich-text-body></ac:structured-macro><ac:structured-macro ac:name=""recently-updated"" ac:schema-version=""1"" data-layout=""default"" ac:local-id=""c3e6e4fd-4b85-4e59-8dcd-57d4e0d217c8"" ac:macro-id=""723adb2b644b9f38809318cd0a11d868""><ac:parameter ac:name=""types"">page,whiteboard,database,blog</ac:parameter><ac:parameter ac:name=""max"">10</ac:parameter><ac:parameter ac:name=""theme"">concise</ac:parameter><ac:parameter ac:name=""hideHeading"">true</ac:parameter></ac:structured-macro>","/spaces/SOP/overview","/pages/resumedraft.action?draftId=491782","/x/BoEH"
"491798","current","Template - How-to guide","491527","491782","page","608","712020:9cdf9595-1750-4458-a803-a418992f202c","712020:9cdf9595-1750-4458-a803-a418992f202c","[NULL]","2025-10-23T16:10:32.386Z","2025-10-23T16:10:32.386Z","","1","false","712020:9cdf9595-1750-4458-a803-a418992f202c","storage","<p><ac:placeholder>Explain what this how-to article is for. For example, you might write an article to teach people at your company how to set up a corporate email account or file an expense report.</ac:placeholder></p><h2><ac:emoticon ac:name=""blue-star"" ac:emoji-shortname="":blue_book:"" ac:emoji-id=""1f4d8"" ac:emoji-fallback=""\uD83D\uDCD8"" />&nbsp;Instructions</h2><p><ac:placeholder>Create a step-by-step guide:</ac:placeholder></p><ol><li><p><ac:placeholder>Add steps that are simple and self-contained</ac:placeholder></p></li><li><p><ac:placeholder>Add illustrations to instructions by typing /image</ac:placeholder></p></li><li><p><ac:placeholder>Stick to 3-5 steps per task to avoid overloading readers</ac:placeholder></p></li></ol><ac:structured-macro ac:name=""info"" ac:schema-version=""1""><ac:rich-text-body><p>Highlight important information in a panel like this one. To edit this panel's color or style, select one of the options in the menu.</p></ac:rich-text-body></ac:structured-macro><h2><ac:emoticon ac:name=""blue-star"" ac:emoji-shortname="":clipboard:"" ac:emoji-id=""1f4cb"" ac:emoji-fallback=""\uD83D\uDCCB"" />&nbsp;Related articles</h2><p><ac:placeholder>The content by label feature automatically displays related articles based on labels you choose. To edit options for this feature, select the placeholder and tap the pencil icon.</ac:placeholder></p>","/spaces/SOP/pages/491798/Template+-+How-to+guide","/pages/resumedraft.action?draftId=491798","/x/FoEH"
"491810","current","Template - Troubleshooting article","491527","491782","page","1505","712020:9cdf9595-1750-4458-a803-a418992f202c","712020:9cdf9595-1750-4458-a803-a418992f202c","[NULL]","2025-10-23T16:10:32.425Z","2025-10-23T16:10:32.425Z","","1","false","712020:9cdf9595-1750-4458-a803-a418992f202c","storage","<h2><ac:emoticon ac:name=""blue-star"" ac:emoji-shortname="":thinking:"" ac:emoji-id=""1f914"" ac:emoji-fallback=""\uD83E\uDD14"" />&nbsp;Problem</h2><p><ac:placeholder>Add a short description of the problem.</ac:placeholder></p><h2><ac:emoticon ac:name=""blue-star"" ac:emoji-shortname="":seedling:"" ac:emoji-id=""1f331"" ac:emoji-fallback=""\uD83C\uDF31"" />&nbsp;Solution</h2><p><ac:placeholder>Describe how someone would solve the problem in a short, step-by-step guide:</ac:placeholder></p><ol><li><p><ac:placeholder>Add steps that are simple and self-contained</ac:placeholder></p></li><li><p><ac:placeholder>Add illustrations to instructions by typing /image</ac:placeholder></p></li><li><p><ac:placeholder>Stick to 3-5 steps per task to avoid overloading readers</ac:placeholder></p></li></ol><p /><ac:structured-macro ac:name=""info"" ac:schema-version=""1"" ac:macro-id=""abfb01cb-cb28-411a-99b5-788e0e8d5fec""><ac:rich-text-body><p>Highlight important information in a panel like this one. To edit this panel's color or style, select one of the options in the menu.</p></ac:rich-text-body></ac:structured-macro><h2><ac:emoticon ac:name=""blue-star"" ac:emoji-shortname="":paperclip:"" ac:emoji-id=""1f4ce"" ac:emoji-fallback=""\uD83D\uDCCE"" />&nbsp;Related articles</h2><p><ac:placeholder>The content by label feature automatically displays related articles based on labels you choose. To edit options for this feature, select the placeholder and tap the pencil icon.</ac:placeholder></p>","/spaces/SOP/pages/491810/Template+-+Troubleshooting+article","/pages/resumedraft.action?draftId=491810","/x/IoEH"
"590069","current","Overview","589826","[NULL]","[NULL]","761","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-23T15:38:15.608Z","2025-10-23T15:38:15.608Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<ac:layout><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">Say hello to your colleagues who want to know your name, pronouns, role, team and location (or if you're remote).</span></p>
        </ac:layout-cell><ac:layout-cell>

            <p />
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üìÑ Recent content that I've worked on</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <ac:structured-macro ac:name=""recently-updated"" ac:schema-version=""1"" ac:macro-id=""f9d6b4ce776b6df2ba84df23c64944e6""><ac:parameter ac:name=""max"">5</ac:parameter></ac:structured-macro>
        </ac:layout-cell><ac:layout-cell>

            <ac:structured-macro ac:name=""blog-posts"" ac:schema-version=""1"" ac:macro-id=""45110fb0-b1a0-433b-a707-39944dddecb0""><ac:parameter ac:name=""max"">5</ac:parameter><ac:parameter ac:name=""content"">titles</ac:parameter></ac:structured-macro>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üñê Get in touch</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p>‚úâÔ∏è <ac:placeholder>Insert your email here</ac:placeholder></p>
            <p>üíº <ac:placeholder>Insert your LinkedIn URL here</ac:placeholder></p>
        </ac:layout-cell><ac:layout-cell>

            <p>üîó <ac:placeholder>Insert your Twitter handle here</ac:placeholder></p>
            <p>üë§ <ac:placeholder>Insert your Medium profile here</ac:placeholder></p>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">End with a bang! Some options are: </span>&quot;I am so grateful to be here at <span style=""color: rgb(0,184,217);"">&lt;Insert company name&gt;</span> and very excited to get started!&quot; or &quot;Looking forward to meeting all of you!&quot; or &quot;Can't wait to get to know all of you!&quot;</p>
        </ac:layout-cell></ac:layout-section></ac:layout>","/spaces/~7120203330dc8aef824275824d60b669928fc2/overview","/pages/resumedraft.action?draftId=590069","/x/9QAJ"
"590070","current","Getting started with Confluence & Jira","589826","590069","page","691","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-23T15:38:15.843Z","2025-10-23T15:38:15.843Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<ac:layout><ac:layout-section ac:type=""fixed-width"" ac:breakout-mode=""default""><ac:layout-cell><p /><h1 style=""text-align: center;""><ac:emoticon ac:name=""rocket"" ac:emoji-shortname="":rocket:"" ac:emoji-id=""1f680"" ac:emoji-fallback=""üíª"" /> Explore 3 simple ways to work faster and better with Confluence &amp; Jira</h1><p /><p style=""text-align: center;"">You're leading the way - teams using Jira and Confluence ship 76% faster!</p><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""one_circle_purple"" ac:emoji-shortname="":one_circle_purple:"" ac:emoji-id=""atlassian-1_one_circle_purple"" ac:emoji-fallback=""üîµ1"" /> Keep your work up-to-date with embedded Jira links</h2><p>Embed real-time Jira roadmaps, boards, and more in Confluence, eliminating manual status updates and stale reports. <a href=""https://www.atlassian.com/software/confluence/resources/guides/extend-functionality/confluence-jira#reporting-on-jira-data-in-confluence"">--&gt;See detailed steps</a></p><ac:image ac:align=""center"" ac:layout=""center"" ac:original-height=""1080"" ac:original-width=""1836"" ac:custom-width=""true"" ac:width=""760"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/vi1hwa885q6mp0k0ih74f0rrvg3551xd.gif"" ac:alt=""links.gif""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/vi1hwa885q6mp0k0ih74f0rrvg3551xd.gif"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image><ac:structured-macro ac:name=""panel"" ac:schema-version=""1"" ac:macro-id=""2b2f5915-a4ca-4250-befa-8b018d415ce5""><ac:parameter ac:name=""panelIcon"">:magic_wand:</ac:parameter><ac:parameter ac:name=""panelIconId"">1fa84</ac:parameter><ac:parameter ac:name=""bgColor"">#EAE6FF</ac:parameter><ac:rich-text-body><h3><strong><span style=""color: rgb(64,50,148);"">Try it out!</span></strong></h3><p><strong>Type</strong><code>/link</code> and select the 'Jira' tab to paste a recently viewed link from Jira&mdash;it'll instantly embed as a rich, interactive view!</p></ac:rich-text-body></ac:structured-macro></ac:layout-cell><ac:layout-cell><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""two_circle_purple"" ac:emoji-shortname="":two_circle_purple:"" ac:emoji-id=""atlassian-2_two_circle_purple"" ac:emoji-fallback=""üîµ2"" /> Access Confluence content, right from Jira</h2><p>Quickly access specs, designs, and decisions right from Jira&mdash;eliminating context-switching and keeping your team aligned with all the information in one place.<a href=""https://www.atlassian.com/software/confluence/resources/guides/extend-functionality/confluence-jira#add-confluence-pages-and-whiteboards"">--&gt;See detailed steps</a></p><ac:image ac:align=""center"" ac:layout=""center"" ac:original-height=""1080"" ac:original-width=""1836"" ac:custom-width=""true"" ac:width=""760"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/7p2ombum6gd6u262238616dpx86ato57.gif"" ac:alt=""confluence-in-jira.gif""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/7p2ombum6gd6u262238616dpx86ato57.gif"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image><ac:structured-macro ac:name=""panel"" ac:schema-version=""1"" ac:macro-id=""2b2f5915-a4ca-4250-befa-8b018d415ce5""><ac:parameter ac:name=""panelIcon"">:magic_wand:</ac:parameter><ac:parameter ac:name=""panelIconId"">1fa84</ac:parameter><ac:parameter ac:name=""bgColor"">#EAE6FF</ac:parameter><ac:rich-text-body><h3><strong><span style=""color: rgb(64,50,148);"">Try it out!</span></strong></h3><p><strong>Copy</strong> a link from Confluence into one of your Jira tasks and see the content show up directly within Jira!</p></ac:rich-text-body><p /></ac:structured-macro><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""three_circle_purple"" ac:emoji-shortname="":three_circle_purple:"" ac:emoji-id=""atlassian-3_three_circle_purple"" ac:emoji-fallback=""üîµ3"" /> Transform content into Jira work items</h2><p>Create Jira tasks from Confluence content-avoid copy-pasting, retyping, and losing your place between tabs when converting brainstorms and plans into tracked work. <a href=""https://www.atlassian.com/blog/confluence/moving-from-idea-to-action-with-confluence-and-jira"">--&gt;See detailed steps</a></p><ac:image ac:align=""center"" ac:layout=""center"" ac:original-height=""1080"" ac:original-width=""1836"" ac:custom-width=""true"" ac:width=""760"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/hgm2podqtrw261ws8ul1yd527n75nr7e.gif"" ac:alt=""transform.gif""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/hgm2podqtrw261ws8ul1yd527n75nr7e.gif"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image><ac:structured-macro ac:name=""panel"" ac:schema-version=""1"" ac:macro-id=""2b2f5915-a4ca-4250-befa-8b018d415ce5""><ac:parameter ac:name=""panelIcon"">:magic_wand:</ac:parameter><ac:parameter ac:name=""panelIconId"">1fa84</ac:parameter><ac:parameter ac:name=""bgColor"">#EAE6FF</ac:parameter><ac:rich-text-body><h3><strong><span style=""color: rgb(64,50,148);"">Try it out!</span></strong></h3><p><strong>Highlight</strong> the text below and <strong>select </strong><code>+ Jira work item</code>.</p><p style=""font-style: italic;""><em>Build Social Media integration: Allow users to sign up using their social media accounts.</em></p></ac:rich-text-body></ac:structured-macro><p /><h4 style=""text-align: center;""><ac:emoticon ac:name=""projector"" ac:emoji-shortname="":projector:"" ac:emoji-id=""1f4fd"" /> More of a visual learner? Watch a video instead:</h4><p><a href=""https://youtu.be/EyPiFfiBVdg"" data-layout=""center"" data-card-appearance=""block"">https://youtu.be/EyPiFfiBVdg</a></p></ac:layout-cell><p /><hr /></ac:layout-section><ac:layout-section ac:type=""fixed-width"" ac:breakout-mode=""default""><h1 style=""text-align: center;""><ac:emoticon ac:name=""books"" ac:emoji-shortname="":books:"" ac:emoji-id=""1f4da"" ac:emoji-fallback=""üìö"" /> Learn more about Confluence with these quick tips</h1><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""one_circle_purple"" ac:emoji-shortname="":one_circle_purple:"" ac:emoji-id=""atlassian-1_one_circle_purple"" ac:emoji-fallback=""üîµ1"" /> Find (or create) your <span style=""color: rgb(64,50,148);"">team space</span></h2><p>Confluence is made up of <strong>team spaces</strong>. Spaces are where teams organize their ideas, projects, and documentation. Spaces can be organized with folders, and you can drag-and-drop, or nest content to re-order it too.</p><p>Find the space your team is working in - if it doesn't exist, you can always <a href=""https://support.atlassian.com/confluence-cloud/docs/create-a-space/""><strong>create a new one</strong></a>.</p><ac:image ac:align=""center"" ac:layout=""center"" ac:width=""100%"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/1odms20dmrt4wlf4gr31f1x616sp335k.jpg"" ac:alt=""spaces.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/1odms20dmrt4wlf4gr31f1x616sp335k.jpg"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""two_circle_purple"" ac:emoji-shortname="":two_circle_purple:"" ac:emoji-id=""atlassian-2_two_circle_purple"" ac:emoji-fallback=""üîµ2"" /> Express your thinking through different <span style=""color: rgb(64,50,148);"">content types</span></h2></ac:layout-section><ac:layout-section ac:type=""three_equal"" ac:breakout-mode=""wide"" ac:breakout-width=""1241""><ac:layout-cell><div style=""text-align: left;margin-bottom: 20.0px;""><h4 style=""margin-top: 0;text-align: center;""><span style=""background-color: rgb(211,241,167);""><strong>Pages</strong></span></h4><p style=""font-size: 14.0px;"">Pages start as drafts that can be published into source-of-truth knowledge for your team &mdash; ideal for sharing policies, guides, and playbooks.</p><ac:image ac:original-height=""851"" ac:original-width=""1571"" ac:custom-width=""true"" ac:width=""360"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/uw4jduikg4hl4787g53n06r50emy5h56.png"" ac:alt=""pages.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/uw4jduikg4hl4787g53n06r50emy5h56.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></div></ac:layout-cell><ac:layout-cell><div style=""text-align: left;margin-bottom: 20.0px;""><h4 style=""margin-top: 0;text-align: center;""><span style=""background-color: rgb(198,237,251);""><strong>Live Docs</strong></span></h4><p style=""font-size: 14.0px;"">Live Docs let you collaborate in realtime with your team for better ideas, faster decisions, and unified edits &ndash; all without needing to publish.</p><ac:image ac:original-height=""851"" ac:original-width=""1571"" ac:custom-width=""true"" ac:width=""360"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/5c2vvl22ed17ef668oy2s3x0270wgc1i.png"" ac:alt=""live_docs.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/5c2vvl22ed17ef668oy2s3x0270wgc1i.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></div></ac:layout-cell><ac:layout-cell><div style=""text-align: left;margin-bottom: 20.0px;""><h4 style=""margin-top: 0;text-align: center;""><span style=""background-color: rgb(254,222,200);""><strong>Whiteboards</strong></span></h4><p style=""font-size: 14.0px;"">Whiteboards are a place to brainstorm, build connections, and make ideas come to life.<br /></p><ac:image ac:original-height=""851"" ac:original-width=""1571"" ac:custom-width=""true"" ac:width=""360"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/1rp31264sb51vtlgkwld05ohv002d784.png"" ac:alt=""whiteboards.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/1rp31264sb51vtlgkwld05ohv002d784.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></div></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""three_equal"" ac:breakout-mode=""wide"" ac:breakout-width=""1241""><ac:layout-cell><div style=""text-align: left;margin-bottom: 20.0px;""><h4 style=""margin-top: 0;text-align: center;""><span style=""background-color: rgb(223,216,253);""><strong>Databases</strong></span></h4><p style=""font-size: 14.0px;"">Databases enable teams to build a library of information, track deliverables, and aggregate tools, links, and information from within and outside Confluence into a customizable view.</p><ac:image ac:original-height=""851"" ac:original-width=""1571"" ac:custom-width=""true"" ac:width=""360"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/tq0q60vj414p8t600wxr4mroe46c5i7q.png"" ac:alt=""databases.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/tq0q60vj414p8t600wxr4mroe46c5i7q.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></div></ac:layout-cell><ac:layout-cell><ac:adf-extension><ac:adf-node type=""panel""><ac:adf-attribute key=""panel-type"">note</ac:adf-attribute><ac:adf-content><strong><span>Wondering how to format content into multiple columns?</span></strong><p>Type <code>/layout</code> to choose from 2-column to 5-column layout options.</p><ac:image ac:align=""center"" ac:original-height=""204"" ac:original-width=""224"" ac:custom-width=""true"" ac:src=""https://hello.atlassian.net/wiki/download/thumbnails/5434237456/Screenshot%202025-06-17%20at%201.37.20%E2%80%AFPM.png?version=1&amp;modificationDate=1751319548958&amp;cacheVersion=1&amp;api=v2&amp;width=224&amp;height=204"" ac:alt=""layout.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/r3d41838wf8vpcg272o63qhe25v1r235.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></ac:adf-content></ac:adf-node><ac:adf-fallback><div style=""background-color: rgb(255,255,204);border-color: rgb(255,204,0);border-width: 1.0px;"" class=""panel conf-macro output-block""><div style=""background-color: rgb(255,255,204);"" class=""panelContent""><strong><span>Wondering how to format content into multiple columns?</span></strong><p>Type <code>/layout</code> to choose from 2-column to 5-column layout options.</p><span class=""confluence-embedded-file-wrapper image-center-wrapper confluence-embedded-manual-size""><ac:image ac:align=""center"" ac:width=""224""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/r3d41838wf8vpcg272o63qhe25v1r235.png?version=1&amp;width=224&amp;height=204"" /></ac:image></span></div></div></ac:adf-fallback></ac:adf-extension></ac:layout-cell><ac:layout-cell><div style=""text-align: left;margin-bottom: 20.0px;""><h4 style=""margin-top: 0;text-align: center;""><span style=""background-color: rgb(253,208,236);"">Smart Links</span></h4><p style=""font-size: 14.0px;"">Smart links allow users to integrate and display content from other tools and platforms directly within Confluence, centralizing information in one accessible location.</p><ac:image ac:original-height=""851"" ac:original-width=""1571"" ac:custom-width=""true"" ac:width=""360"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/aors06lw5416up061v151n4wwc5lq4f7.png"" ac:alt=""smart_links.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/aors06lw5416up061v151n4wwc5lq4f7.png"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></div></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width"" ac:breakout-mode=""default""><ac:layout-cell><p /><h2 style=""text-align: center;""><ac:emoticon ac:name=""three_circle_purple"" ac:emoji-shortname="":three_circle_purple:"" ac:emoji-id=""atlassian-3_three_circle_purple"" ac:emoji-fallback=""üîµ3"" /> Make your content more engaging with <span style=""color: rgb(64,50,148);"">elements</span></h2><p><strong>Elements</strong> are the building blocks that help you organize and present information in the way you want. Elements include dates, status lozenges, panels, Confluence macros, Marketplace macros, and more. <strong>Type </strong><code>/</code> to see a list of elements.</p><ac:image ac:align=""center"" ac:layout=""center"" ac:width=""100%"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/kwx6p0lgq6634wk804le47s336py61h4.jpg"" ac:alt=""elements.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/kwx6p0lgq6634wk804le47s336py61h4.jpg"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image><h2 style=""text-align: center;""><ac:emoticon ac:name=""four_circle_purple"" ac:emoji-shortname="":four_circle_purple:"" ac:emoji-id=""atlassian-4_four_circle_purple"" ac:emoji-fallback=""üîµ4"" /> Collaborate with your teammates using <span style=""color: rgb(64,50,148);"">comments and reactions</span></h2><p><strong>Comments</strong> initiate conversations, enabling you to add information, ask questions, and foster collaboration. <strong>Highlight</strong> text and <strong>select</strong><code>Comment</code> in the pop-up menu for inline comments.</p><p>If someone creates good content on Confluence, leave a <strong>reaction</strong> to acknowledge it.</p><ac:image ac:align=""center"" ac:layout=""center"" ac:width=""100%"" ac:src=""https://dam-cdn.atl.orangelogic.com/AssetLink/o2rv3cfx6pc5158gaaq6hwxh4pjp5537.jpg"" ac:alt=""elements.png""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/o2rv3cfx6pc5158gaaq6hwxh4pjp5537.jpg"" /><ac:adf-mark key=""border"" size=""1"" color=""#091e4224"" /></ac:image></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width"" ac:breakout-mode=""default""><ac:layout-cell><p /><h4 style=""text-align: center;""><ac:emoticon ac:name=""projector"" ac:emoji-shortname="":projector:"" ac:emoji-id=""1f4fd"" /> Rather watch a video? Learn via Loom:</h4><a href=""https://www.loom.com/share/5149671332234032989863f520d133ed"" data-card-appearance=""block"">https://www.loom.com/share/5149671332234032989863f520d133ed</a></ac:layout-cell></ac:layout-section><p /></ac:layout>","/spaces/~7120203330dc8aef824275824d60b669928fc2/pages/590070/Getting+started+with+Confluence+Jira","/pages/resumedraft.action?draftId=590070","/x/9gAJ"
"590115","current","Getting started in Confluence","589826","590069","page","886","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-23T15:38:16.955Z","2025-10-23T15:38:16.955Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<ac:layout><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:structured-macro ac:name=""panel"" ac:schema-version=""1"" ac:macro-id=""2b2f5915-a4ca-4250-befa-8b018d415ce5""><ac:parameter ac:name=""panelIconId"">0b885b7f-2b42-41b1-8a5e-f0dc5e91cb27</ac:parameter><ac:parameter ac:name=""panelIcon"">:Growth_purple:</ac:parameter><ac:parameter ac:name=""bgColor"">#EAE6FF</ac:parameter><ac:parameter ac:name=""panelIconText"">üå±</ac:parameter><ac:rich-text-body><h2><strong><span style=""color: rgb(64,50,148);"">Welcome to Confluence!</span></strong></h2><p>You can use Confluence to create a rich knowledge base or to collaborate with others using words, videos, images, graphics, charts, and graphs.</p><p>This page walks you through some Confluence basics like spaces, pages, and elements that allow you to create and manage impactful content for your teams.</p></ac:rich-text-body></ac:structured-macro><h2><strong><span style=""color: rgb(101,84,192);"">Confluence 101</span></strong></h2><a href=""https://www.loom.com/share/5149671332234032989863f520d133ed"" data-layout=""center"" data-original-height=""480.00"" data-width=""100.00"" data-original-width=""853.34"" data-card-appearance=""embed"">https://www.loom.com/share/5149671332234032989863f520d133ed</a><p /><h3>üóÉÔ∏è Spaces</h3></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<p><ac:inline-comment-marker ac:ref=""62d8be89-edf2-42b1-8bff-cca0f7434bfe"">Spaces are where teams organize ideas, projects, and documentation. Spaces can be customized and integrated with both Atlassian tools and others.</ac:inline-comment-marker></p><p>Spaces can be organized with <a href=""https://support.atlassian.com/confluence-cloud/docs/use-folders-to-organize-your-work/"">folders</a>, and you can drag and drop to reorder or nest content so you can more effectively share your work with others.</p><p><a href=""https://www.atlassian.com/software/confluence/guides/get-started/set-up"">More about spaces</a></p></ac:layout-cell><ac:layout-cell>
<ac:image ac:align=""center"" ac:alt=""spaces.png"" ac:height=""362"" ac:width=""587""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/5mjuo77m8cmok83b386225unkp26bq52.png"" /></ac:image><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>16</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Select</span></strong><code>+ Create</code><strong><span style=""color: rgb(101,84,192);""> at the top and choose </span></strong><code>Space</code><strong><span style=""color: rgb(101,84,192);""> to create a new space.</span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /><h3>üìÑ Content types</h3></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<p><strong><span style=""background-color: rgb(198,237,251);"">Live docs</span></strong> let you collaborate in realtime with your team for better ideas, faster decisions, and unified edits &ndash; all without needing to publish.</p><ac:image ac:align=""center"" ac:alt=""Live docs.png"" ac:width=""760""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/30g818t48b44236y46bn8v4q83y5k8lp.png"" /></ac:image></ac:layout-cell><ac:layout-cell>
<p><strong><span style=""background-color: rgb(211,241,167);"">Pages</span></strong> start as drafts that can be published into source-of-truth knowledge for your team &mdash; ideal for sharing policies, guides, and playbooks.</p><ac:image ac:align=""center"" ac:alt=""Page.png"" ac:width=""760""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/226c8t518oryg3xs7p104471sqij4rom.png"" /></ac:image></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<p><strong><span style=""background-color: rgb(254,222,200);"">Whiteboards</span></strong> are your team&rsquo;s place to brainstorm, build connections, and make ideas come to life.<br /></p><ac:image ac:align=""center"" ac:width=""760""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/b320f7h8b78e201887sie4250f4xp6jc.png"" /></ac:image></ac:layout-cell><ac:layout-cell>
<p><strong><span style=""background-color: rgb(223,216,253);"">Databases</span></strong> enable teams to build a library of information, track deliverables, and aggregate tools, links, and information from within and outside Confluence into a customizable view.</p><ac:image ac:align=""center"" ac:width=""760""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/g5syk5s0uij517gm6q7s11f6lrs56yw4.png"" /></ac:image></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<p><strong><span style=""background-color: rgb(253,208,236);"">Smart links</span></strong> allow users to integrate and display content from other tools and platforms directly within Confluence, enhancing productivity by centralizing information in one accessible location.</p><ac:image ac:align=""center"" ac:alt=""Smart link.png"" ac:width=""760""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/105214h77vqw1k1c3nk13d12njtm41hr.png"" /></ac:image></ac:layout-cell><ac:layout-cell>
<p><a href=""https://support.atlassian.com/confluence-cloud/docs/create-and-collaborate-in-real-time-with-live-docs/"">More about live docs</a> | <a href=""https://www.atlassian.com/software/confluence/guides/get-started/create-content"">More about pages</a> | <a href=""https://hello.atlassian.net/wiki/spaces/~766660823/whiteboard/3078363456?atlOrigin=eyJpIjoiNGJkN2VmODk5NzMzNDZmYWE2N2RmN2ViYzBiZjgzZjciLCJwIjoiY29uZmx1ZW5jZS1jaGF0cy1pbnQifQ"">More about whiteboards</a> | <a href=""https://support.atlassian.com/confluence-cloud/docs/create-and-edit-databases/"">More about databases</a> | <a href=""https://support.atlassian.com/confluence-cloud/docs/bring-all-your-work-into-confluence/"">More about smart links</a></p></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>17</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Select </span></strong><code>+ Create</code><strong><span style=""color: rgb(101,84,192);""> button </span></strong><strong><span style=""color: rgb(101,84,192);"">in the top navigation and choose content type to start creating content at any time.</span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /><hr /><h2><strong><span style=""color: rgb(101,84,192);"">Creating purposeful content</span></strong></h2><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3>‚úèÔ∏è Real&mdash;time editing</h3><p>You and up to 30 teammates can edit a page together - live - in real time. Changes save and sync automatically so that everyone editing sees the same thing.</p><p><a href=""https://support.atlassian.com/confluence-cloud/docs/create-and-collaborate-with-live-editing-in-confluence/"">More about live editing</a></p><p /><p /></ac:layout-cell><ac:layout-cell>
<table data-table-width=""760"" data-layout=""default"" ac:local-id=""18d35489-aa97-4361-8a77-18ab13e92bc9""><tbody><tr><td data-highlight-colour=""#fffae6""><ac:image ac:align=""center"" ac:height=""360"" ac:width=""640""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/0f8e03276w37y32m60l6w18jv46o6ck7.gif"" /></ac:image></td></tr></tbody></table></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3>üß∞ Elements</h3><p>Elements are tools like info panels, action items, and layouts, designed to help you make your pages more powerful.</p><p><a href=""https://support.atlassian.com/confluence-cloud/docs/insert-elements-into-a-page/"">More about elements</a></p></ac:layout-cell><ac:layout-cell>
<table data-table-width=""760"" data-layout=""default"" ac:local-id=""9156be79-cd4c-4559-bfd6-a96b7611d447""><tbody><tr><td data-highlight-colour=""#e3fcef""><ac:image ac:align=""center"" ac:height=""360"" ac:width=""640""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/x34n581540xg63228ira3fe685p5yd78.gif"" /></ac:image></td></tr></tbody></table></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>2283</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Type</span></strong><code>/</code><strong><span style=""color: rgb(101,84,192);""> to see a list of elements. </span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3> üìè Tables</h3><p>Tables allow you to organize important information on a page to discuss it with your team.</p><p>Present the information the way it makes sense to you&mdash;resize columns, color cells, rows and columns, and sort the table by clicking the column headers.</p><p><a href=""https://confluence.atlassian.com/conf73/tables-991927743.html"">More about tables</a></p></ac:layout-cell><ac:layout-cell>
<table data-table-width=""760"" data-layout=""default"" ac:local-id=""c3252298-64b5-4065-ad25-c4dbfd652df2""><tbody><tr><td data-highlight-colour=""#e6fcff""><ac:image ac:align=""center"" ac:height=""360"" ac:width=""640""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/86ew43p7y3840517tnl46835raj4d03j.gif"" /></ac:image></td></tr></tbody></table></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>2284</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Type</span></strong><code>/table</code><strong><span style=""color: rgb(101,84,192);""> to add a table at any time.</span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3>üì∏ Header images and emojis</h3><p>Make your pages more visually impactful with header images and emojis.</p><p>üçï Emojis aren&rsquo;t just a fun way to spice up your page&mdash;they also show up in search, so using them strategically makes it easier to find pages later on.</p><p><a href=""https://support.atlassian.com/confluence-cloud/docs/make-your-page-and-its-title-more-memorable/"">More about page header images</a></p></ac:layout-cell><ac:layout-cell>
<table data-table-width=""760"" data-layout=""default"" ac:local-id=""ad5be2af-60f8-4462-9bdc-ceb962f268ba""><tbody><tr><td data-highlight-colour=""#eae6ff""><ac:image ac:align=""center"" ac:height=""360"" ac:width=""640""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/lsn614406i0r3dm687108ceb8o2e310n.gif"" /></ac:image></td></tr></tbody></table></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>2285</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Hover over your page title and select </span></strong><code>Add header image</code><strong><span style=""color: rgb(101,84,192);"">to customize your page.</span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3><strong><span style=""color: rgb(0,184,217);"">üí¨</span></strong>Comments and mentions</h3><p>Comments are a great way to start a conversation about a page or blog post. They allow you to remark on content, add important information, ask questions, and generally drive collaboration and teamwork.</p><p>@mention a teammate to bring them into the conversation, and they can reply to and/or like comments.</p><p><a href=""https://support.atlassian.com/confluence-cloud/docs/comment-on-pages-and-blog-posts/"">More about comments</a> | <a href=""https://support.atlassian.com/confluence-cloud/docs/mention-a-person-or-team/"">More about mentions</a></p></ac:layout-cell><ac:layout-cell>
<table data-table-width=""620"" data-layout=""center"" ac:local-id=""4fc4332a-417b-403a-87e1-5c5b62392a52""><colgroup><col style=""width: 361.0px;"" /></colgroup><tbody><tr><td data-highlight-colour=""#f4f5f7""><ac:image ac:align=""center"" ac:height=""360"" ac:width=""640""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/e282bcfs21750ry0uxmh07n0mnl6u4a5.gif"" /></ac:image></td></tr></tbody></table></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<ac:task-list>
<ac:task>
<ac:task-id>25</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><strong><span style=""color: rgb(101,84,192);"">Highlight text and select </span></strong><code>Comment</code><strong><span style=""color: rgb(101,84,192);""> in the pop up menu to leave an inline comment.</span></strong></span></ac:task-body>
</ac:task>
</ac:task-list><p /><hr /><h2><strong><span style=""color: rgb(101,84,192);"">What&rsquo;s next?</span></strong></h2></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<p>These are the top three actions we think will help you get the most from Confluence.</p><ac:task-list>
<ac:task>
<ac:task-id>32</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks"">Explore a <code>Space</code></span></ac:task-body>
</ac:task>
<ac:task>
<ac:task-id>33</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><code>Create</code> a page</span></ac:task-body>
</ac:task>
<ac:task>
<ac:task-id>34</ac:task-id>
<ac:task-status>incomplete</ac:task-status>
<ac:task-body><span class=""placeholder-inline-tasks""><code>Invite</code> a teammate</span></ac:task-body>
</ac:task>
</ac:task-list></ac:layout-cell><ac:layout-cell>
<ac:image ac:align=""center"" ac:alt=""Onboarding.png"" ac:width=""360""><ri:url ri:value=""https://dam-cdn.atl.orangelogic.com/AssetLink/57bb01ljg1764455oa877tv2vlld3t5j.png"" /></ac:image><p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<p /></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>
<h3>Jira ‚ù§Ô∏è Confluence</h3><p>Discover the integrations that help teams harness the combined powers of Jira and Confluence to ship projects faster.</p></ac:layout-cell><ac:layout-cell>
<a href=""https://www.youtube.com/watch?v=ohtDFXNAUns"" data-layout=""center"" data-original-height=""480.00"" data-width=""100.00"" data-original-width=""853.34"" data-card-appearance=""embed"" title=""Confluence and Jira Software are Better Together"">https://www.youtube.com/watch?v=ohtDFXNAUns</a></ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>
<p style=""text-align: right;""><a href=""#On-this-page"">Back to top ‚§¥</a></p></ac:layout-cell></ac:layout-section></ac:layout>","/spaces/~7120203330dc8aef824275824d60b669928fc2/pages/590115/Getting+started+in+Confluence","/pages/resumedraft.action?draftId=590115","/x/IwEJ"
"1245246","current","Create a View - MindsDB","491527","491782","page","7422","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:19.887Z","2025-10-24T14:09:54.862Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_view()</code> and <code>create_view()</code> functions let you save either an existing view or a newly created view into a variable.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>get_view()</code> method to get an existing view:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_view </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.get_view(</span><span style=""color: rgb(10,48,105);"">'my_view'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Or, the <code>create_view()</code> method to create a view:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_view </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.create_view(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'view_name'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    mysql_demo_db.query(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM my_table LIMIT 100'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245246/Create+a+View+-+MindsDB","/pages/resumedraft.action?draftId=1245246","/x/PgAT"
"1245265","current","Data Catalog for Integrations - MindsDB","491527","491782","page","14010","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:34.639Z","2025-10-24T13:59:34.639Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>As of now, the Data Catalog is available for the following integrations:</span>
<ul>
<li><a class=""link"" href=""/integrations/data-integrations/snowflake"">Snowflake</a></li>
<li><a class=""link"" href=""/integrations/app-integrations/salesforce"">Salesforce</a></li>
<li><a class=""link"" href=""/integrations/data-integrations/google-bigquery"">BigQuery</a></li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#enabling-the-data-catalog"">‚Äã</a></div><span class=""cursor-pointer"">Enabling the Data Catalog</span></h3>
<span>To enable the Data Catalog feature in MindsDB, update your <code>config.json</code> file by setting the <code>data_catalog</code> flag to <code>true</code>:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;data_catalog&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">        &quot;enabled&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>Follow this doc page to learn how to <a class=""link"" href=""/setup/custom-config"">start MindsDB with custom configuration</a>.</span>
<div><div><span>Note that the data catalog is generated for a data source only after this data source is connected to an agent.</span><span>Here is an example:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> snowflake_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'snowflake'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;account&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;abc123-xyz987&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;username&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;database_name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;schema_name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;warehouse&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;warehouse_name&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT my_agent</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    include_tables</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['snowflake_data.table_name', ...];</span></span>
</code></pre></div></div></div><span>Now you can <a class=""link"" href=""/data_catalog/integrations/query"">query the data catalog</a> generated for the <code>snowflake_data</code> integration.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-it-works"">‚Äã</a></div><span class=""cursor-pointer"">How It Works</span></h3>
<span>When you create an <a class=""link"" href=""/mindsdb_sql/agents/agent"">agent</a> in MindsDB that connects to one of the supported integrations, the Data Catalog automatically:</span>
<ol>
<li>Inspects the data source.</li>
<li>Extracts metadata for all accessible tables and columns.</li>
<li>Stores this information in a dedicated catalog schema (<code>DATA_CATALOG</code>).</li>
<li>Makes this metadata available to agents and users via both SQL queries and internal reasoning.</li>
</ol>
<div><div><span><strong>Current Limitations</strong></span><span>This feature is still evolving and has some known limitations:</span><ul>
<li><strong>One-Time Snapshot</strong>: Metadata is generated only once&mdash;at the time the agent is created. If the data schema changes (e.g., new columns, renamed tables), the Data Catalog will not automatically update. A refresh mechanism is planned in a future release.</li>
<li><strong>No Manual Feedback</strong>: If any metadata appears to be incorrect (e.g., wrong row counts or data types), there is currently no way for users to flag or correct it. A feedback system will be introduced soon.</li>
</ul></div></div></div>","/spaces/SOP/pages/1245265/Data+Catalog+for+Integrations+-+MindsDB","/pages/resumedraft.action?draftId=1245265","/x/UQAT"
"1245284","current","Microsoft Teams - MindsDB","491527","491782","page","24829","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:32.805Z","2025-10-24T14:00:32.805Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.microsoft.com/en-us/microsoft-teams/group-chat-software"">Microsoft Teams</a>, the ultimate messaging app for your organization.
The integration allows MindsDB to access data from Microsoft Teams and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Microsoft Teams to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Microsoft Teams from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/ms_teams_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> teams_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'teams'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;12345678-90ab-cdef-1234-567890abcdef&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;client_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;tenant_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;abcdef12-3456-7890-abcd-ef1234567890&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>client_id</code>: The client ID of the registered Microsoft Entra ID application.</li>
<li><code>client_secret</code>: The client secret of the registered Microsoft Entra ID application.</li>
<li><code>tenant_id</code>: The tenant ID of the Microsoft Entra ID directory.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>permission_mode</code>: The type of permissions used to access data in Microsoft Teams. Can be either <code>delegated</code> (default) or <code>application</code>.</li>
</ul>
<div><div><span>The <code>delegated</code> permission mode requires user sign-in and allows the app to access data on behalf of the signed-in user. The <code>application</code> permission mode does not require user sign-in and allows the app to access data without a user context. You can learn more about permission types in the <a class=""link"" href=""https://learn.microsoft.com/en-us/graph/auth/auth-concepts#delegated-and-application-permissions"">Microsoft Graph permissions documentation</a>.
Note that application permissions generally require higher privileges and admin consent compared to delegated permissions, as they allow broader access to organizational data without user context.</span></div></div>
<div><div><span>Microsoft Entra ID was previously known as Azure Active Directory (Azure AD).</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-set-up-the-microsoft-entra-id-app-registration"">‚Äã</a></div><span class=""cursor-pointer"">How to set up the Microsoft Entra ID app registration</span></h3>
<span>Follow the instructions below to set up the Microsoft Teams app that will be used to connect with MindsDB.</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Register an application in the Azure portal</p><div><ul>
<li>Navigate to Microsoft Entra ID in the Azure portal, click on <em>Add</em> and then on <em>App registration</em>.</li>
<li>Click on <em>New registration</em> and fill out the <em>Name</em> and select the <code>Accounts in any organizational directory (Any Azure AD directory - Multitenant)</code> option under <em>Supported account types</em>.</li>
<li>If you chose the <code>application</code> permission mode you may skip this step, but if you are using <code>delegated</code> permissions, select <code>Web</code> as the platform and enter URL where MindsDB has been deployed followed by /verify-auth under <em>Redirect URI</em>. For example, if you are running MindsDB locally (on <a class=""link"" href=""https://localhost:47334"">https://localhost:47334</a>), enter <a class=""link"" href=""https://localhost:47334/verify-auth"">https://localhost:47334/verify-auth</a> in the Redirect URIs field.</li>
<li>Click on <em>Register</em>. <strong>Save the <em>Application (client) ID</em> and <em>Directory (tenant) ID</em> for later use.</strong></li>
<li>Click on <em>API Permissions</em> and then click on <em>Add a permission</em>.</li>
<li>Select <em>Microsoft Graph</em> and then click on either <em>Delegated permissions</em> or <em>Application permissions</em> based on the permission mode you have chosen.</li>
<li>Search for the following permissions and select them:
<ul>
<li><code>delegated</code> permission mode:
<ul>
<li>Team.ReadBasic.All</li>
<li>Channel.ReadBasic.All</li>
<li>ChannelMessage.Read.All</li>
<li>Chat.Read</li>
</ul>
</li>
<li><code>application</code> permission mode:
<ul>
<li>Group.Read.All</li>
<li>ChannelMessage.Read.All</li>
<li>Chat.Read.All</li>
</ul>
</li>
</ul>
</li>
<li>Click on <strong>Add permissions</strong>.</li>
<li>Request an administrator to grant consent for the above permissions. If you are the administrator, click on <strong>Grant admin consent for [your organization]</strong> and then click on <strong>Yes</strong>.</li>
<li>Click on <em>Certificates &amp; secrets</em> under <em>Manage</em>.</li>
<li>Click on <em>New client secret</em> and fill out the <em>Description</em> and select an appropriate <em>Expires</em> period, and click on <em>Add</em>.</li>
<li>Copy and <strong>save the client secret in a secure location.</strong></li>
</ul><div><div><span>If you already have an existing app registration, you can use it instead of creating a new one and skip the above steps.</span></div></div></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Configure a MS Teams data souce in the MindsDB Editor</p><div><ul>
<li>Open the MindsDB editor and create a connection to Microsoft Teams using the client ID, client secret and tenant ID obtained in the previous steps. Use the <code>CREATE DATABASE</code> statement as shown above.</li>
</ul></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);"">  teams_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The above example utilize <code>teams_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables</span></h2>
<ul>
<li><code>teams</code>: The table containing information about the teams in Microsoft Teams.</li>
<li><code>channels</code>: The table containing information about the channels in Microsoft Teams.</li>
<li><code>channel_messages</code>: The table containing information about messages from channels in Microsoft Teams.</li>
<li><code>chats</code>: The table containing information about the chats in Microsoft Teams.</li>
<li><code>chat_messages</code>: The table containing information about messages from chats in Microsoft Teams.</li>
</ul></div>","/spaces/SOP/pages/1245284/Microsoft+Teams+-+MindsDB","/pages/resumedraft.action?draftId=1245284","/x/ZAAT"
"1245311","current","Apache Druid - MindsDB","491527","491782","page","36862","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:11.782Z","2025-10-24T14:01:11.782Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Druid data handler for MindsDB.</span>
<span><a class=""link"" href=""https://druid.apache.org/docs/latest/design"">Apache Druid</a> is a real-time analytics database designed for fast slice-and-dice analytics (<em>OLAP</em> queries) on large data sets. Most often, Druid powers use cases where real-time ingestion, fast query performance, and high uptime are important.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Druid to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Druid.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented using the <code>pydruid</code> library, the Python API for Apache Druid.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the Apache Druid database.</li>
<li><code>port</code> is the port that Apache Druid is running on.</li>
<li><code>path</code> is the query path.</li>
<li><code>scheme</code> is the URI schema. This parameter is optional and defaults to <code>http</code>.</li>
<li><code>user</code> is the username used to authenticate with Apache Druid. This parameter is optional.</li>
<li><code>password</code> is the password used to authenticate with Apache Druid. This parameter is optional.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to Apache Druid in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> druid_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'druid'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">8888</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/druid/v2/sql/&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;scheme&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;http&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> druid_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245311/Apache+Druid+-+MindsDB","/pages/resumedraft.action?draftId=1245311","/x/fwAT"
"1245332","current","D0lt - MindsDB","491527","491782","page","41926","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:32.001Z","2025-10-24T14:01:32.001Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the D0lt data handler for MindsDB.</span>
<span><a class=""link"" href=""https://docs.dolthub.com/introduction/what-is-dolt"">D0lt</a> is a single-node and embedded DBMS that incorporates Git-style versioning as a first-class entity. D0lt behaves like Git - it is a content-addressable local database where the main objects are tables instead of files. In D0lt, a user creates a database locally. The database contains tables that can be read and updated using SQL. Similar to Git, writes are staged until the user issues a commit. Upon commit, the writes are appended to permanent storage.</span>
<span>Branch and merge semantics are supported allowing for the tables to evolve at a different pace for multiple users. This allows for loose collaboration on data as well as multiple views on the same core data. Merge conflicts are detected for schema and data conflicts. Data conflicts are cell-based, not line-based. Remote repositories allow for cooperation among repository instances. Clone, push, and pull semantics are all available.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect D0lt to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to D0lt.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>mysql-connector</code>, a Python library that allows you to use Python code to run SQL commands on the D0lt database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the hostname or IP address of the server.</li>
<li><code>port</code> is the port through which a TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the D0lt database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> d0lt_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'd0lt'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;information_schema&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> D0lt_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">TEST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245332/D0lt+-+MindsDB","/pages/resumedraft.action?draftId=1245332","/x/lAAT"
"1245353","current","Microsoft Access - MindsDB","491527","491782","page","50006","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:01.011Z","2025-10-24T14:02:01.011Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Microsoft Access data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.microsoft.com/en-us/microsoft-365/access"">Microsoft Access</a> is a pseudo-relational database engine from Microsoft. It is part of the Microsoft Office suite of applications that also includes Word, Outlook, and Excel, among others. Access is also available for purchase as a stand-alone product. It uses the Jet Database Engine for data storage.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Microsoft Access to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Microsoft Access.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>pyodbc</code>, the Python ODBC bridge.</span>
<span>The only required argument to establish a connection is <code>db_file</code> that points to a database file to be queried.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Access database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> access_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'access'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;db_file&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;C:\\Users\\minurap\\Documents\\example_db.accdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> access_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245353/Microsoft+Access+-+MindsDB","/pages/resumedraft.action?draftId=1245353","/x/qQAT"
"1245374","current","MonetDB - MindsDB","491527","491782","page","51777","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:04.618Z","2025-10-24T14:02:04.618Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the MonetDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.monetdb.org/"">MonetDB</a> is an open-source column-oriented relational database management system originally developed at the Centrum Wiskunde &amp; Informatica in the Netherlands. It is designed to provide high performance on complex queries against large databases, such as combining tables with hundreds of columns and millions of rows.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect MonetDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to MonetDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>pymonetdb</code>, a Python library that allows you to use Python code to run SQL commands on the MonetDB database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the host name or IP address.</li>
<li><code>port</code> is the port through which TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
<li><code>schema_name</code> is the schema name to get tables. It is optional and defaults to the current schema if not provided.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the MonetDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> monetdb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'monetdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;monetdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;monetdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">50000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sys&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> monetdb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245374/MonetDB+-+MindsDB","/pages/resumedraft.action?draftId=1245374","/x/vgAT"
"1245399","current","Pinecone - MindsDB","491527","491782","page","69098","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:11.582Z","2025-10-24T14:03:11.582Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Pinecone for MindsDB.</span>
<span>Pinecone is a vector database which is fully-managed, developer-friendly, and easily scalable.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Pinecone to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Pinecone.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler uses <code>pinecone-client</code> python library connect to a pinecone environment.</span>
<span>The required arguments to establish a connection are:</span>
<ul>
<li><code>api_key</code>: the API key that can be found in your pinecone account</li>
</ul>
<span>These optional arguments are used with <code>CREATE TABLE</code> statements:</span>
<ul>
<li><code>dimension</code>: dimensions of the vectors to be stored in the index (default=8)</li>
<li><code>metric</code>: distance metric to be used for similarity search (default=&lsquo;cosine&rsquo;)</li>
<li><code>spec</code>: the spec of the index to be created. This is a dictionary that can contain the following keys:
<ul>
<li><code>cloud</code>: the cloud provider to use (default=&lsquo;aws&rsquo;)</li>
<li><code>region</code>: the region to use (default=&lsquo;us-east-1&rsquo;)</li>
</ul>
</li>
</ul>
<div><div><span>Only the creation of serverless indexes is supported at the moment when running <code>CREATE TABLE</code> statements.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#limitations"">‚Äã</a></div><span class=""cursor-pointer"">Limitations</span></h2>
<ul class=""contains-task-list"">
<li class=""task-list-item""> <code>DROP TABLE</code> support</li>
<li class=""task-list-item""> Support for <a class=""link"" href=""https://docs.pinecone.io/docs/namespaces"">namespaces</a></li>
<li class=""task-list-item""> Display score/distance</li>
<li class=""task-list-item""> Support for creating/reading sparse values</li>
<li class=""task-list-item""> <code>content</code> column is not supported since it does not exist in Pinecone</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to an environment, use the following syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> pinecone_dev</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;pinecone&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>You can query pinecone indexes (<code>temp</code> in the following examples) based on <code>id</code> or <code>search_vector</code>, but not both:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> from</span><span style=""color: rgb(5,80,174);""> pinecone_dev</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">temp</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;abc&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 1</span></span>
</code></pre></div></div></div>

<span>If you are using subqueries, make sure that the result is only a single row since the use of multiple search vectors is not allowed</span>

<span>Optionally, you can filter based on metadata too:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> from</span><span style=""color: rgb(5,80,174);""> pinecone_dev</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">temp</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;abc&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(5,80,174);""> metadata</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">hello</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(5,80,174);""> 100</span></span>
</code></pre></div></div></div>
<span>You can delete records using <code>id</code> or <code>metadata</code> like so:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> pinecone_dev</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">temp</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;abc&quot;</span></span>
</code></pre></div></div></div>
<span>Note that deletion through metadata is not supported in starter tier</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> pinecone_dev</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">temp</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(5,80,174);""> metadata</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tbd</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> true</span></span>
</code></pre></div></div></div>
<span>You can insert data into a new collection like so:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> pinecone_dev</span><span style=""color: rgb(31,35,40);"">.temp (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">temp</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>To update records, you can use insert statement. When there is a conflicting ID in pinecone index, the record is updated with new values. It might take a bit to see it reflected.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> pinecone_test</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">testtable</span><span style=""color: rgb(31,35,40);""> (id,content,metadata,embeddings)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'id1'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'this is a test'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'{&quot;test&quot;: &quot;test&quot;}'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'[1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0]'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245399/Pinecone+-+MindsDB","/pages/resumedraft.action?draftId=1245399","/x/1wAT"
"1245418","current","The CASE WHEN Statement - MindsDB","491527","491782","page","99389","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:55.867Z","2025-10-24T14:05:55.867Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB supports standard SQL syntax, including the <code>CASE WHEN</code> statement.</span>
<span>The <code>CASE WHEN</code> statement is used for conditional logic within queries. It evaluates conditions and returns specific values based on whether each condition is true or false, allowing for conditional output within <code>SELECT</code>, <code>WHERE</code>, and other clauses.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        CASE</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WHEN</span><span style=""color: rgb(31,35,40);""> a</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);""> THEN</span><span style=""color: rgb(31,35,40);""> a</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(31,35,40);"">b</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WHEN</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">b</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);""> THEN</span><span style=""color: rgb(5,80,174);""> 0</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WHEN</span><span style=""color: rgb(31,35,40);""> (a</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(31,35,40);"">b</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);""> or</span><span style=""color: rgb(31,35,40);""> b</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(31,35,40);"">c</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> a</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">b </span><span style=""color: rgb(207,34,46);"">THEN</span><span style=""color: rgb(31,35,40);""> b</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            ELSE</span><span style=""color: rgb(31,35,40);""> c</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        END</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> table_name;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1245418/The+CASE+WHEN+Statement+-+MindsDB","/pages/resumedraft.action?draftId=1245418","/x/6gAT"
"1245437","current","Update Agent - MindsDB","491527","491782","page","105774","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:27.136Z","2025-10-24T14:06:27.136Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> PUT</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents/my_agent</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;agent&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;model&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;: &quot;openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;: &quot;gpt-4.1&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;: &quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span>

</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1245437/Update+Agent+-+MindsDB","/pages/resumedraft.action?draftId=1245437","/x/-QAT"
"1376282","current","Apache Impala - MindsDB","491527","491782","page","37746","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:17.207Z","2025-10-24T14:01:17.207Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Impala data handler for MindsDB.</span>
<span><a class=""link"" href=""https://impala.apache.org/"">Apache Impala</a> is an MPP (Massive Parallel Processing) SQL query engine for processing huge volumes of data that is stored in the Apache Hadoop cluster. It is an open source software written in C++ and Java. It provides high performance and low latency compared to other SQL engines for Hadoop. In other words, Impala is the highest performing SQL engine (giving RDBMS-like experience) that provides the fastest way to access data stored in Hadoop Distributed File System.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Impala to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Impala.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>impyla</code>, a Python library that allows you to use Python code to run SQL commands on Impala.</span>
<span>The required arguments to establish a connection are:</span>
<ul>
<li><code>user</code> is the username associated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the server IP address or hostname.</li>
<li><code>port</code> is the port through which TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Impala database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> impala_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'impala'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;p@55w0rd&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">21050</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Db_NamE&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> impala_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">TEST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1376282/Apache+Impala+-+MindsDB","/pages/resumedraft.action?draftId=1376282","/x/GgAV"
"1376303","current","Databend - MindsDB","491527","491782","page","42491","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:33.612Z","2025-10-24T14:01:33.612Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Databend data handler for MindsDB.</span>
<span><a class=""link"" href=""https://databend.rs/"">Databend</a> is a modern cloud data warehouse that empowers your object storage for real-time analytics.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Databend to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Databend.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the ClickHouse handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>protocol</code> is the protocol to query Databend. Supported values include <code>native</code>, <code>http</code>, <code>https</code>. It defaults to <code>native</code> if not provided.</li>
<li><code>host</code> is the host name or IP address of the Databend warehouse.</li>
<li><code>port</code> is the TCP/IP port of the Databend warehouse.</li>
<li><code>user</code> is the username used to authenticate with the Databend warehouse.</li>
<li><code>password</code> is the password to authenticate the user with the Databend warehouse.</li>
<li><code>database</code> is the database name to use when connecting with the Databend warehouse.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Databend database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> databend_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'databend'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;protocol&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">443</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;some-url.aws-us-east-2.default.databend.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> databend_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1376303/Databend+-+MindsDB","/pages/resumedraft.action?draftId=1376303","/x/LwAV"
"1376324","current","TimescaleDB - MindsDB","491527","491782","page","62911","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:39.601Z","2025-10-24T14:02:39.601Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://docs.timescale.com"">TimescaleDB</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect TimescaleDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to TimescaleDB from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/timescaledb_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> timescaledb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'timescaledb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;examplehost.timescaledb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;my_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;tsdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>user</code>: The username for the TimescaleDB database.</li>
<li><code>password</code>: The password for the TimescaleDB database.</li>
<li><code>host</code>: The hostname, IP address, or URL of the TimescaleDB server.</li>
<li><code>port</code>: The port number for connecting to the TimescaleDB server.</li>
<li><code>database</code>: The name of the TimescaleDB database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>schema</code>: The database schema to use. Default is public.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Before attempting to connect to a TimescaleDB server using MindsDB, ensure that it accepts incoming connections using <a class=""link"" href=""https://docs.timescale.com/latest/getting-started/setup/remote-connections/"">this guide</a>.</span>
<span>The following usage examples utilize the connection to TimescaleDB made via the <code>CREATE DATABASE</code> statement and named <code>timescaledb_datasource</code>.</span>
<span>Retrieve data from a specified table by providing the integration and table name.</span>
<span>You can use this established connection to query your table as follows,</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> timescaledb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">sensor</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run PostgreSQL-native queries directly on the connected TimescaleDB database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> timescaledb_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">     SELECT</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        model, </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        COUNT</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">OVER</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">PARTITION</span><span style=""color: rgb(207,34,46);""> BY</span><span style=""color: rgb(31,35,40);""> model, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> units_to_sell, </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        ROUND</span><span style=""color: rgb(31,35,40);"">((</span><span style=""color: rgb(5,80,174);"">CAST</span><span style=""color: rgb(31,35,40);"">(tax </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> decimal</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">/</span><span style=""color: rgb(31,35,40);""> price), </span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> tax_div_price</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> used_car_price</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the TimescaleDB database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the TimescaleDB server is active.</li>
<li>Confirm that host, port, user, schema, and password are correct. Try a direct TimescaleDB connection.</li>
<li>Ensure a stable network between MindsDB and TimescaleDB.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1376324/TimescaleDB+-+MindsDB","/pages/resumedraft.action?draftId=1376324","/x/RAAV"
"1376347","current","Upload PDF files to MindsDB - MindsDB","491527","491782","page","67652","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:59.143Z","2025-10-24T14:02:59.143Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can upload PDF files of any size to MindsDB that runs locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/contribute/install"">pip</a>.</span>
<span>Note that MindsDB supports only searchable PDFs, as opposed to scanned PDFs. These are stored in the form of a table inside MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload files</span></h2>
<span>Follow the steps below to upload a file:</span>
<ol>
<li>Click on the <code>Add</code> dropdown and choose <code>Upload file</code>.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""666"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0a25773f735c4f147425651de94caca4"" style="""" width=""1042"" /></span></span></p>
<ol start=""2"">
<li>Upload a file and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""834"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_computer.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=bd588de4dd6fa52b36eec2761e3242b3"" style="""" width=""868"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-files"">‚Äã</a></div><span class=""cursor-pointer"">Query files</span></h2>
<span>Here is how to query data within MindsDB.</span>
<span>Query for the content of the file uploaded under the name <code>my_file</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1376347/Upload+PDF+files+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1376347","/x/WwAV"
"1376364","current","Upload TXT files to MindsDB - MindsDB","491527","491782","page","67656","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:00.725Z","2025-10-24T14:03:00.725Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can upload TXT files of any size to MindsDB that runs locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/contribute/install"">pip</a>.</span>
<span>TXT files are divided into chunks and stored in multiple table cells. MindsDB uses the <a class=""link"" href=""https://api.python.langchain.com/en/latest/document_loaders/langchain_community.document_loaders.text.TextLoader.html"">TextLoader from LangChain</a> to load TXT files.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload files</span></h2>
<span>Follow the steps below to upload a file:</span>
<ol>
<li>Click on the <code>Add</code> dropdown and choose <code>Upload file</code>.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""666"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0a25773f735c4f147425651de94caca4"" style="""" width=""1042"" /></span></span></p>
<ol start=""2"">
<li>Upload a file and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""834"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_computer.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=bd588de4dd6fa52b36eec2761e3242b3"" style="""" width=""868"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-files"">‚Äã</a></div><span class=""cursor-pointer"">Query files</span></h2>
<span>Here is how to query data within MindsDB.</span>
<span>Query for the content of the file uploaded under the name <code>my_file</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1376364/Upload+TXT+files+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1376364","/x/bAAV"
"1376383","current","How to Query Knowledge Bases - MindsDB","491527","491782","page","84435","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:30.380Z","2025-10-24T14:10:56.501Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Knowledge Bases support two primary querying approaches: semantic search and metadata filtering, each of which offers different filtering capabilities, including filtering by the relevance score to ensure only data most relevant to the query is returned.</span>
<ul>
<li>
<span><strong>Semantic Search</strong></span>
<span>Semantic search enables users to query Knowledge Bases using natural language. When searching semantically, you reference the content column in your SQL statement. MindsDB will interpret the input as a semantic query and use vector-based similarity to find relevant results.</span>
</li>
<li>
<span><strong>Metadata Filtering</strong></span>
<span>It allows users to query Knowledge Bases based on the available metadata fields. These fields can be used in the <code>WHERE</code> clause of a SQL statement.</span>
</li>
<li>
<span><strong>Relevance Filtering</strong></span>
<span>Every semantic search result is assigned a relevance score, which indicates how closely a given entry matches your query. You can filter results by this score to ensure only the most relevant entries are returned.</span>
</li>
<li>
<span><strong>Hybrid Search</strong></span>
<span>Hybrid search combines the flexibility of semantic search and exact keyword matching. <a class=""link"" href=""/mindsdb_sql/knowledge_bases/hybrid_search"">Learn more here</a>.</span>
</li>
</ul>
<div><div><span>Learn more about features of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases available via SQL API</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#find-function"">‚Äã</a></div><span class=""cursor-pointer""><code>find()</code> Function</span></h2>
<span>Knowledge bases provide an abstraction that enables users to see the stored data.</span>
<span>Note that here a sample knowledge base created and inserted into in the previous <strong>Example</strong> sections is searched.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the sample output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content           | metadata                                                                                                                                                                                            | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black    | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}        | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5093188026135379</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P | Q7P_notes:1of1:0to22 | Prefer aluminum finish  | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">22</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Aluminum Laptop Stand&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">7744703514692067</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2502580835880018</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ | 3XZ_notes:1of1:0to19 | Gift wrap requested     | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Bluetooth Speaker&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}     | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">8010851611432231</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2500003885558766</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#data-stored-in-knowledge-base"">‚Äã</a></div><span class=""cursor-pointer"">Data Stored in Knowledge Base</span></h3>
<span>The following columns are stored in the knowledge base.</span>
<span><code>id</code>
It stores values from the column defined in the <code>id_column</code> parameter when creating the knowledge base. These are the source data IDs.</span>
<span><code>chunk_id</code>
Knowledge bases chunk the inserted data in order to fit the defined chunk size. If the chunking is performed, the following chunk ID format is used: <code>&lt;id&gt;:&lt;chunk_number&gt;of&lt;total_chunks&gt;:&lt;start_char_number&gt;to&lt;end_char_number&gt;</code>.</span>
<span><code>chunk_content</code>
It stores values from the column(s) defined in the <code>content_columns</code> parameter when creating the knowledge base.</span>
<span><code>metadata</code>
It stores the general metadata and the metadata defined in the <code>metadata_columns</code> parameter when creating the knowledge base.</span>
<span><code>distance</code>
It stores the calculated distance between the chunk&rsquo;s content and the search phrase.</span>
<span><code>relevance</code>
It stores the calculated relevance of the chunk as compared to the search phrase. Its values are between 0 and 1.</span>
<div><div><span>Note that the calculation method of <code>relevance</code> differs as follows:</span><ul>
<li>When the ranking model is provided, the default <code>relevance</code> is equal or greater than 0, unless defined otherwise in the <code>WHERE</code> clause.</li>
<li>When the reranking model is not provided and the <code>relevance</code> is not defined in the query, then no relevance filtering is applied and the output includes all rows matched based on the similarity and metadata search.</li>
<li>When the reranking model is not provided but the <code>relevance</code> is defined in the query, then the relevance is calculated based on the <code>distance</code> column (<code>1/(1+ distance)</code>) and the <code>relevance</code> value is compared with this relevance value to filter the output.</li>
</ul></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#semantic-search"">‚Äã</a></div><span class=""cursor-pointer"">Semantic Search</span></h3>
<span>Users can query a knowledge base using semantic search by providing the search phrase (called <code>content</code>) to be searched for.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> my_kb.find(</span><span style=""color: rgb(10,48,105);"">'color'</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content           | metadata                                                                                                                                                                                            | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black    | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}        | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5093188026135379</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P | Q7P_notes:1of1:0to22 | Prefer aluminum finish  | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">22</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Aluminum Laptop Stand&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">7744703514692067</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2502580835880018</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ | 3XZ_notes:1of1:0to19 | Gift wrap requested     | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Bluetooth Speaker&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}     | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">8010851611432231</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2500003885558766</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div>
<div><div><span>When querying a knowledge base, the default values include the following:</span><ul>
<li>
<span><code>relevance</code> <br />
If not provided, its default value is equal to or greater than 0, ensuring there is no filtering of rows based on their relevance.</span>
</li>
<li>
<span><code>LIMIT</code> <br />
If not provided, its default value is 10, returning a maximum of 10 rows.</span>
</li>
</ul></div></div>
<div><div><span>Note that when specifying both <code>relevance</code> and <code>LIMIT</code> as follows:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND relevance &gt;= 0.5</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    LIMIT 20;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div><span>The query extracts 20 rows (as defined in the <code>LIMIT</code> clause) that match the defined <code>content</code>. Next, these set of rows is filtered out to match the defined <code>relevance</code>.</span></div></div>
<span>Users can limit the <code>relevance</code> in order to get only the most relevant results.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND relevance &gt;= 0.5;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content          | metadata                                                                                                                                                                                     | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black   | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5103766499957533</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div>
<span>By providing the <code>relevance</code> filter, the output is limited to only data with relevance score of the provided value. The available values of <code>relevance</code> are between 0 and 1, and its default value covers all available relevance values ensuring no filtering based on the relevance score.</span>
<span>Users can limit the number of rows returned.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    LIMIT 2;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content           | metadata                                                                                                                                                                                            | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black    | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}        | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5093188026135379</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P | Q7P_notes:1of1:0to22 | Prefer aluminum finish  | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">22</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Aluminum Laptop Stand&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">7744703514692067</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2502580835880018</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#metadata-filtering"">‚Äã</a></div><span class=""cursor-pointer"">Metadata Filtering</span></h3>
<span>Besides semantic search features, knowledge bases enable users to filter the result set by the defined metadata.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE product = 'Wireless Mouse';</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content          | metadata                                                                                                                                                                                     | relevance | distance |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black   | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | [NULL]    | [NULL]   |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+-----------+----------+</span></span>
</code></pre></div></div></div>
<span>Note that when searching by metadata alone, the <code>relevance</code> column values are not calculated.</span>
<span>Users can do both, filter by metadata and search by content.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE product = 'Wireless Mouse'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND relevance &gt;= 0.5;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content          | metadata                                                                                                                                                                                     | distance           | relevance         |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black   | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">504396172197583</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1376383/How+to+Query+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=1376383","/x/fwAV"
"1441822","current","Disposable Email Domains and OpenAI - MindsDB","491527","491782","page","15754","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:43.393Z","2025-10-24T13:59:43.393Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Disposable email domains can&rsquo;t make use of OpenAI, therefore users will encounter errors with using MindsDB&rsquo;s integration with OpenAI.</span>
<span>To check if your email domain is disposable, you can verify it on <a class=""link"" href=""https://quickemailverification.com/tools/disposable-email-address-detector"">QuickEmailVerification</a> or <a class=""link"" href=""https://verifymail.io/domain/ipnuc.com"">VerifyEmail.IO</a>.</span></div>","/spaces/SOP/pages/1441822/Disposable+Email+Domains+and+OpenAI+-+MindsDB","/pages/resumedraft.action?draftId=1441822","/x/HgAW"
"1441845","current","PyPI - MindsDB","491527","491782","page","26715","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:40.528Z","2025-10-24T14:00:40.528Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect PyPI to MindsDB.</span>
<span><a class=""link"" href=""https://pypi.org"">PyPI</a> is a host for maintaining and storing Python packages. It&rsquo;s a good place for publishing your Python packages in different versions and releases.</span>
<span>Data from PyPI can be utilized within MindsDB to train models and make predictions about your Python packages.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the standard Python <code>requests</code> library. It is used to connect to the RESTful service that <a class=""link"" href=""https://pypistats.org"">pypistats.org</a> is serving.</span>
<span>There are no connection arguments required to initialize the handler.</span>
<span>To connect to PyPI using MindsDB, the following CREATE DATABASE statement can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> pypi_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'pypi'</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can use the following queries to view the statistics for Python packages (MindsDB, for example):</span>
<span>Overall downloads, including mirrors:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pypi_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">overall</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> package</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> mirrors</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">true;</span></span>
</code></pre></div></div></div>
<span>Overall downloads on CPython==2.7:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pypi_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">python_minor</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> package</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(207,34,46);""> version</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;2.7&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Recent downloads:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pypi_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">recent</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> package</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Recent downloads in the last day:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pypi_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">recent</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> package</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(207,34,46);""> period</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;day&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>All downloads on Linux-based distributions:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> date</span><span style=""color: rgb(31,35,40);"">, downloads</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pypi_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">system</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> package</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> os</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;Linux&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Each table takes a required <code>package</code> argument in the WHERE clause, which is the name of the package you want to query.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables</span></h2>
<span>The following tables are supported by the PyPI handler:</span>
<ul>
<li><code>overall</code>: daily download quantities for packages.</li>
<li><code>recent</code>: recent download quantities for packages.</li>
<li><code>python_major</code>: daily download quantities for packages, grouped by Python major version.</li>
<li><code>python_minor</code>: daily download quantities for packages, grouped by Python minor version.</li>
<li><code>system</code>: daily download quantities for packages, grouped by operating system.</li>
</ul></div>","/spaces/SOP/pages/1441845/PyPI+-+MindsDB","/pages/resumedraft.action?draftId=1441845","/x/NQAW"
"1441868","current","Google Sheets - MindsDB","491527","491782","page","46743","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:48.174Z","2025-10-24T14:01:48.174Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Google Sheets data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.google.com/sheets/about/"">Google Sheets</a> is a spreadsheet program included as a part of the free, web-based Google Docs Editors suite offered by Google.</span>
<div><div><span>Please note that the integration of MindsDB with Google Sheets works for public sheets only.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Google Sheets to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Google Sheets.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>duckdb</code>, a library that allows SQL queries to be executed on <code>pandas</code> DataFrames.</span>
<span>In essence, when querying a particular sheet, the entire sheet is first pulled into a <code>pandas</code> DataFrame using the <a class=""link"" href=""https://developers.google.com/chart/interactive/docs/reference"">Google Visualization API</a>. Once this is done, SQL queries can be run on the DataFrame using <code>duckdb</code>.</span>
<div><div><span>Since the entire sheet needs to be pulled into memory first (DataFrame), it is recommended to be somewhat careful when querying large datasets so as not to overload your machine.</span></div></div>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>spreadsheet_id</code> is the unique ID of the Google Sheet.</li>
<li><code>sheet_name</code> is the name of the sheet within the Google Sheet.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to a Google Sheet in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sheets_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'sheets'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;spreadsheet_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;12wgS-1KJ9ymUM-6VYzQ0nJYGitONxay7cMKLnEE2_d0&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;sheet_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;iris&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sheets_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>The name of the table will be the name of the relevant sheet, provided as an input to the <code>sheet_name</code> parameter.</span>
<div><div><span>At the moment, only the <code>SELECT</code> statemet is allowed to be executed through <code>duckdb</code>. This, however, has no restriction on running machine learning algorithms against your data in Google Sheets using the <code>CREATE MODEL</code> statement.</span></div></div></div>","/spaces/SOP/pages/1441868/Google+Sheets+-+MindsDB","/pages/resumedraft.action?draftId=1441868","/x/TAAW"
"1441891","current","PostgreSQL - MindsDB","491527","491782","page","55993","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:15.997Z","2025-10-24T14:02:15.997Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.postgresql.org/"">PostgreSQL</a>, a powerful, open-source, object-relational database system.
The integration allows MindsDB to access data stored in the PostgreSQL database and enhance PostgreSQL with AI capabilities.</span>
<div><div><span>This data source integration is thread-safe, utilizing a connection pool where each thread is assigned its own connection. When handling requests in parallel, threads retrieve connections from the pool as needed.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h3>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect PostgreSQL to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your PostgreSQL database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> postgresql_conn</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'postgres'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;data&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>user</code>: The username for the PostgreSQL database.</li>
<li><code>password</code>: The password for the PostgreSQL database.</li>
<li><code>host</code>: The hostname, IP address, or URL of the PostgreSQL server.</li>
<li><code>port</code>: The port number for connecting to the PostgreSQL server.</li>
<li><code>database</code>: The name of the PostgreSQL database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>schema</code>: The database schema to use. Default is public.</li>
<li><code>sslmode</code>: The SSL mode for the connection.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The following usage examples utilize the connection to PostgreSQL made via the <code>CREATE DATABASE</code> statement and named <code>postgresql_conn</code>.</span>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> postgresql_conn</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run PostgreSQL-native queries directly on the connected PostgreSQL database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> postgresql_conn (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">     SELECT</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        model, </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        COUNT</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">OVER</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">PARTITION</span><span style=""color: rgb(207,34,46);""> BY</span><span style=""color: rgb(31,35,40);""> model, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> units_to_sell, </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        ROUND</span><span style=""color: rgb(31,35,40);"">((</span><span style=""color: rgb(5,80,174);"">CAST</span><span style=""color: rgb(31,35,40);"">(tax </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> decimal</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">/</span><span style=""color: rgb(31,35,40);""> price), </span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> tax_div_price</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> used_car_price</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span><strong>Next Steps</strong></span><span>Follow <a class=""link"" href=""https://docs.mindsdb.com/use-cases/predictive_analytics/house-sales-forecasting"">this tutorial</a> to see more use case examples.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the PostgreSQL database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the PostgreSQL server is active.</li>
<li>Confirm that host, port, user, schema, and password are correct. Try a direct PostgreSQL connection.</li>
<li>Ensure a stable network between MindsDB and PostgreSQL.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1441891/PostgreSQL+-+MindsDB","/pages/resumedraft.action?draftId=1441891","/x/YwAW"
"1441918","current","Vertica - MindsDB","491527","491782","page","64133","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:42.894Z","2025-10-24T14:02:42.894Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Vertica data handler for MindsDB.</span>
<span>The column-oriented <a class=""link"" href=""https://www.vertica.com/overview/"">Vertica Analytics Platform</a> was designed to manage large, fast-growing volumes of data and with fast query performance for data warehouses and other query-intensive applications. The product claims to greatly improve query performance over traditional relational database systems, and to provide high availability and exabyte scalability on commodity enterprise servers. Vertica runs on multiple cloud computing systems as well as on Hadoop nodes. Vertica&rsquo;s Eon Mode separates compute from storage, using S3 object storage and dynamic allocation of compute notes.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Vertica to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Vertica.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>vertica-python</code>, a Python library that allows you to use Python code to run SQL commands on the Vertica database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username asscociated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the host name or IP address of the server.</li>
<li><code>port</code> is the port through which TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
<li><code>schema</code> is the schema name to get tables from.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Vertica database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> vertica_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'vertica'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;dbadmin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;public&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;VMart&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> vertica_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">TEST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1441918/Vertica+-+MindsDB","/pages/resumedraft.action?draftId=1441918","/x/fgAW"
"1441943","current","MindsDB and SQL Alchemy - MindsDB","491527","491782","page","76316","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:53.206Z","2025-10-24T14:03:53.206Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>SQL Alchemy is a Python SQL toolkit, that provides object-relational mapping features for the Python programming language.</span>
<span>SQL Alchemy facilitates working with databases and Python. You can download it <a class=""link"" href=""https://www.sqlalchemy.org/"">here</a> or run a <code>pip install sqlalchemy</code>.</span>
<div><div><span>You can consider an option to interact with MindsDB directly from <a class=""link"" href=""/connect/mysql-client"">MySQL CLI</a> or <a class=""link"" href=""/connect/postgres-client"">Postgres CLI</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<span>Please follow the instructions below to connect your MindsDB to SQL Alchemy.</span>
<div class=""tabs tabs tab-container""><ul><li class=""cursor-pointer""><div> Local MindsDB</div></li></ul><div><span>You can use the Python code below to connect your MindsDB database to SQL Alchemy.</span><span>Make sure you have the <em>pymysql</em> module installed before executing the Python code. To install it, run the <code>pip install pymysql</code> command.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> sqlalchemy </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> create_engine</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">user </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mindsdb'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">password </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> ''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">host </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '127.0.0.1'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">port </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 47335</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">database </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> ''</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> get_connection</span><span style=""color: rgb(31,35,40);"">():</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    return</span><span style=""color: rgb(31,35,40);""> create_engine(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        url</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mysql+pymysql://</span><span style=""color: rgb(207,34,46);"">{0}</span><span style=""color: rgb(10,48,105);"">:</span><span style=""color: rgb(207,34,46);"">{1}</span><span style=""color: rgb(10,48,105);"">@</span><span style=""color: rgb(207,34,46);"">{2}</span><span style=""color: rgb(10,48,105);"">:</span><span style=""color: rgb(207,34,46);"">{3}</span><span style=""color: rgb(10,48,105);"">/</span><span style=""color: rgb(207,34,46);"">{4}</span><span style=""color: rgb(10,48,105);"">&quot;</span><span style=""color: rgb(31,35,40);"">.format(user, password, host, port, database)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    )</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">if</span><span style=""color: rgb(5,80,174);""> __name__</span><span style=""color: rgb(207,34,46);""> ==</span><span style=""color: rgb(10,48,105);""> '__main__'</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    try</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> get_connection()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        engine.connect()</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        print</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">f</span><span style=""color: rgb(10,48,105);"">&quot;Connection to the </span><span style=""color: rgb(207,34,46);"">{</span><span style=""color: rgb(31,35,40);"">host</span><span style=""color: rgb(207,34,46);"">}</span><span style=""color: rgb(10,48,105);""> for user </span><span style=""color: rgb(207,34,46);"">{</span><span style=""color: rgb(31,35,40);"">user</span><span style=""color: rgb(207,34,46);"">}</span><span style=""color: rgb(10,48,105);""> created successfully.&quot;</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    except</span><span style=""color: rgb(5,80,174);""> Exception</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> ex:</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        print</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">&quot;Connection could not be made due to the following error: </span><span style=""color: rgb(207,34,46);"">\n</span><span style=""color: rgb(10,48,105);"">&quot;</span><span style=""color: rgb(31,35,40);"">, ex)</span></span>
</code></pre></div></div></div><span>Please note that we use the following connection details:</span><ul>
<li>Username is <code>mindsdb</code></li>
<li>Password is left empty</li>
<li>Host is <code>127.0.0.1</code></li>
<li>Port is <code>47335</code></li>
<li>Database name is left empty</li>
</ul><span>To create a database connection, execute the code above. On success, the following output is expected:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">Connection</span><span style=""color: rgb(10,48,105);""> to</span><span style=""color: rgb(10,48,105);""> the</span><span style=""color: rgb(5,80,174);""> 127.0.0.1</span><span style=""color: rgb(10,48,105);""> for</span><span style=""color: rgb(10,48,105);""> user</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(10,48,105);""> created</span><span style=""color: rgb(10,48,105);""> successfully.</span></span>
</code></pre></div></div></div></div></div>
<br />
<div><div><span>The Sqlachemy <code>create_engine</code> is lazy. This implies any human error when
entering the connection details would be undetectable until an action becomes
necessary, such as when calling the <code>execute</code> method to execute SQL commands.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1441943/MindsDB+and+SQL+Alchemy+-+MindsDB","/pages/resumedraft.action?draftId=1441943","/x/lwAW"
"1441962","current","How to Use Knowledge Bases - MindsDB","491527","491782","page","82123","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:20.430Z","2025-10-24T14:04:20.430Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This section contains examples of usage of knowledge bases.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#sales-data"">‚Äã</a></div><span class=""cursor-pointer"">Sales Data</span></h3>
<span>Here is the data that will be inserted into the knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product           | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse    | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Laptop Stand      | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
</code></pre></div></div></div>
<span>You can access this sample data as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sample_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'postgres'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_data&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> sample_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to create a knowledge base specifically for the data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    embedding_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;text-embedding-3-large&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    reranking_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    metadata_columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['product'],</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    content_columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['notes'],</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    id_column </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'order_id'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to insert the data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> order_id, product, notes</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sample_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to query the knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> product </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Wireless Mouse'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'color'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> relevance </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> 0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#financial-data"">‚Äã</a></div><span class=""cursor-pointer"">Financial Data</span></h3>
<span>You can access the sample data as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sample_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'postgres'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_data&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> sample_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">financial_headlines</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to create a knowledge base specifically for the data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    embedding_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;text-embedding-3-large&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    reranking_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    metadata_columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['sentiment_labelled'],</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    content_columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['headline'];</span></span>
</code></pre></div></div></div>
<span>Here is how to insert the data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sample_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">financial_headlines</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    batch_size </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 500</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    threads </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to query the knowledge base.</span>
<ul>
<li>Query without defined <code>LIMIT</code></li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'investors'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This query returns 10 rows, as the default <code>LIMIT</code> is set to 10.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""779"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/kb_retrieval_example1.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=bd67ed9ebff5125ffa23b6570cf89ad9"" style="""" width=""1600"" /></span></span></p>
<ul>
<li>Query with defined <code>LIMIT</code></li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'investors'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This query returns 20 rows, as the user-defined <code>LIMIT</code> is set to 20.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""813"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/kb_retrieval_example2.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=0f0cff93b9fef5ec4b1379c668c1305b"" style="""" width=""1600"" /></span></span></p>
<ul>
<li>Query with defined <code>LIMIT</code> and <code>relevance</code></li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'investors'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> relevance </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(5,80,174);""> 0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">8</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This query may return 20 or less rows, depending on whether the relevance scores of the rows match the user-defined condition.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""843"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/kb_retrieval_example3.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=900085ad0403c605adc70f4d8a0c8745"" style="""" width=""1600"" /></span></span></p></div>","/spaces/SOP/pages/1441962/How+to+Use+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=1441962","/x/qgAW"
"1441979","current","Update a Table - MindsDB","491527","491782","page","88911","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:57.721Z","2025-10-24T14:11:43.701Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>update()</code> function is executed on a table from a data source connected to MindsDB. It updates a table on specified columns.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">update</span><span style=""color: rgb(31,35,40);"">(table_used_to_update, </span><span style=""color: rgb(207,34,46);"">on</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">['column1', 'column2', ...])</span></span>
</code></pre></div></div></div>
<div><div><span>Check out the <a class=""link"" href=""/sql/api/update"">SQL syntax</a> to better understand how the <code>update()</code> function works.</span></div></div></div>","/spaces/SOP/pages/1441979/Update+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=1441979","/x/uwAW"
"1441998","current","Query Jobs - MindsDB","491527","491782","page","98275","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:46.651Z","2025-10-24T14:05:46.651Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying-jobs"">‚Äã</a></div><span class=""cursor-pointer"">Querying Jobs</span></h2>
<span>Here is how we can view all jobs in a project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW JOBS </span><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'project-name'</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> project</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">jobs</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">NAME</span><span style=""color: rgb(31,35,40);"">                               | PROJECT | RUN_START                  | RUN_END                    | NEXT_RUN_AT                | SCHEDULE_STR  | QUERY                                                                                                                                                                                                                                   |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| drop_model                         | mindsdb | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">04</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">01</span><span style=""color: rgb(5,80,174);""> 00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">000000</span><span style=""color: rgb(31,35,40);""> | [NULL]                     | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">04</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">01</span><span style=""color: rgb(5,80,174);""> 00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">000000</span><span style=""color: rgb(31,35,40);""> | [NULL]        | </span><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(31,35,40);"">                                                                                                                                                                                                   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| retrain_model_and_save_predictions | mindsdb | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">43</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">210122</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">04</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">01</span><span style=""color: rgb(5,80,174);""> 00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">000000</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">43</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">210122</span><span style=""color: rgb(31,35,40);""> | every </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);""> days</span><span style=""color: rgb(31,35,40);"">  | RETRAIN </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> USING</span><span style=""color: rgb(31,35,40);""> join_learn_process </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> true; </span><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_integration</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rentals</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m </span><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d) |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| save_predictions                   | mindsdb | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">48</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">545580</span><span style=""color: rgb(31,35,40);""> | [NULL]                     | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">48</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">545580</span><span style=""color: rgb(31,35,40);""> | every </span><span style=""color: rgb(207,34,46);"">hour</span><span style=""color: rgb(31,35,40);"">    | </span><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(31,35,40);""> my_integration.</span><span style=""color: rgb(10,48,105);"">`result_{{START_DATETIME}}`</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m </span><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d)                                                |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
</code></pre></div></div></div>
<span>Or from all projects at once:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW JOBS;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> information_schema</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">jobs</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying-jobs-history"">‚Äã</a></div><span class=""cursor-pointer"">Querying Jobs History</span></h2>
<span>You can query the history of jobs similar to querying for jobs. Here you can find information about an error if the job didn&rsquo;t execute successfully.</span>
<span>Here is how we can view all jobs history in the current project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> log</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">jobs_history</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mindsdb'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">NAME</span><span style=""color: rgb(31,35,40);"">                               | PROJECT | RUN_START                  | RUN_END                    | NEXT_RUN_AT                | ERROR  | QUERY                                                                                                                                                                                                                                   |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| retrain_model_and_save_predictions | mindsdb | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">43</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">210122</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">04</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">01</span><span style=""color: rgb(5,80,174);""> 00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">00</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">000000</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">43</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">210122</span><span style=""color: rgb(31,35,40);""> | [NULL] | RETRAIN </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> USING</span><span style=""color: rgb(31,35,40);""> join_learn_process </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> true; </span><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_integration</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rentals</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m </span><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d) |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| save_predictions                   | mindsdb | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">48</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">545580</span><span style=""color: rgb(31,35,40);""> | [NULL]                     | </span><span style=""color: rgb(5,80,174);"">2023</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">02</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">15</span><span style=""color: rgb(5,80,174);""> 19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">48</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">545580</span><span style=""color: rgb(31,35,40);""> | [NULL] | </span><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(31,35,40);""> my_integration.</span><span style=""color: rgb(10,48,105);"">`result_{{START_DATETIME}}`</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m </span><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d)                                                |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------+---------+----------------------------+----------------------------+----------------------------+--------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
</code></pre></div></div></div>
<span>Please note that the <code>drop_model</code> job is not in the <code>jobs_history</code> table because it didn&rsquo;t start yet.</span></div>","/spaces/SOP/pages/1441998/Query+Jobs+-+MindsDB","/pages/resumedraft.action?draftId=1441998","/x/zgAW"
"1442017","current","Query Agents - MindsDB","491527","491782","page","104948","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:25.103Z","2025-10-24T14:06:25.103Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents/my_agent/completions/stream</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;messages&quot;: [</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;question&quot;: &quot;What is MindsDB?&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;answer&quot;: &quot;&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  ]</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1442017/Query+Agents+-+MindsDB","/pages/resumedraft.action?draftId=1442017","/x/4QAW"
"1474591","current","Data Integrations - MindsDB","491527","491782","page","2019","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:47:40.065Z","2025-10-24T13:53:04.778Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB integrates with numerous data sources, including databases, vector stores, and applications, making data available to AI models by connecting data sources to MindsDB.</span>
<div><div><span><strong>MindsDB supports Model Context Protocol (MCP)</strong></span><span>MindsDB is an MCP server that enables your MCP applications to answer questions over large-scale federated data. <a class=""link"" href=""/mcp/overview"">Learn more here</a>.</span></div></div>
<div><div><span>This section contains instructions on how to connect data sources to MindsDB.</span><span>Note that MindsDB doesn&rsquo;t store or copy your data. Instead, it fetches data directly from your connected sources each time you make a query, ensuring that any changes to the data are instantly reflected. This means your data remains in its original location, and MindsDB always works with the most up-to-date information.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#applications"">‚Äã</a></div><span class=""cursor-pointer"">Applications</span></h3>
<div><a href=""/integrations/app-integrations/binance""><div class=""px-6 py-5 relative""><div><h2>Binance</h2></div></div></a><a href=""/integrations/app-integrations/confluence""><div class=""px-6 py-5 relative""><div><h2>Confluence</h2></div></div></a><a href=""/integrations/app-integrations/dockerhub""><div class=""px-6 py-5 relative""><div><h2>Docker Hub</h2></div></div></a><a href=""/integrations/app-integrations/email""><div class=""px-6 py-5 relative""><div><h2>Email</h2></div></div></a><a href=""/integrations/app-integrations/github""><div class=""px-6 py-5 relative""><div><h2>GitHub</h2></div></div></a><a href=""/integrations/app-integrations/gitlab""><div class=""px-6 py-5 relative""><div><h2>GitLab</h2></div></div></a><a href=""/integrations/app-integrations/gmail""><div class=""px-6 py-5 relative""><div><h2>Gmail</h2></div></div></a><a href=""/integrations/app-integrations/google-calendar""><div class=""px-6 py-5 relative""><div><h2>Google Calendar</h2></div></div></a><a href=""/integrations/app-integrations/google-analytics""><div class=""px-6 py-5 relative""><div><h2>Google Analytics</h2></div></div></a><a href=""/integrations/app-integrations/hackernews""><div class=""px-6 py-5 relative""><div><h2>Hacker News</h2></div></div></a><a href=""/integrations/app-integrations/instatus""><div class=""px-6 py-5 relative""><div><h2>Instatus</h2></div></div></a><a href=""/integrations/app-integrations/jira""><div class=""px-6 py-5 relative""><div><h2>Jira</h2></div></div></a><a href=""/integrations/app-integrations/intercom""><div class=""px-6 py-5 relative""><div><h2>Intercom</h2></div></div></a><a href=""/integrations/app-integrations/mediawiki""><div class=""px-6 py-5 relative""><div><h2>MediaWiki</h2></div></div></a><a href=""/app-integrations/microsoft-onedrive""><div class=""px-6 py-5 relative""><div><h2>Microsoft OneDrive</h2></div></div></a><a href=""/app-integrations/microsoft-teams""><div class=""px-6 py-5 relative""><div><h2>Microsoft Teams</h2></div></div></a><a href=""/app-integrations/newsapi""><div class=""px-6 py-5 relative""><div><h2>News API</h2></div></div></a><a href=""/integrations/app-integrations/paypal""><div class=""px-6 py-5 relative""><div><h2>PayPal</h2></div></div></a><a href=""/integrations/app-integrations/plaid""><div class=""px-6 py-5 relative""><div><h2>Plaid</h2></div></div></a><a href=""/integrations/app-integrations/pypi""><div class=""px-6 py-5 relative""><div><h2>PyPI</h2></div></div></a><a href=""/integrations/app-integrations/reddit""><div class=""px-6 py-5 relative""><div><h2>Reddit</h2></div></div></a><a href=""/integrations/app-integrations/salesforce""><div class=""px-6 py-5 relative""><div><h2>Salesforce</h2></div></div></a><a href=""/integrations/app-integrations/sendinblue""><div class=""px-6 py-5 relative""><div><h2>Sendinblue</h2></div></div></a><a href=""/integrations/app-integrations/shopify""><div class=""px-6 py-5 relative""><div><h2>Shopify</h2></div></div></a><a href=""/integrations/app-integrations/slack""><div class=""px-6 py-5 relative""><div><h2>Slack</h2></div></div></a><a href=""/integrations/app-integrations/strapi""><div class=""px-6 py-5 relative""><div><h2>Strapi</h2></div></div></a><a href=""/integrations/app-integrations/stripe""><div class=""px-6 py-5 relative""><div><h2>Stripe</h2></div></div></a><a href=""/integrations/app-integrations/symbl""><div class=""px-6 py-5 relative""><div><h2>Symbl</h2></div></div></a><a href=""/integrations/app-integrations/twitter""><div class=""px-6 py-5 relative""><div><h2>Twitter</h2></div></div></a><a href=""/integrations/app-integrations/web-crawler""><div class=""px-6 py-5 relative""><div><h2>Web Crawler</h2></div></div></a><a href=""/integrations/app-integrations/youtube""><div class=""px-6 py-5 relative""><div><h2>YouTube</h2></div></div></a></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#databases"">‚Äã</a></div><span class=""cursor-pointer"">Databases</span></h3>
<div><a href=""/integrations/data-integrations/airtable""><div class=""px-6 py-5 relative""><div><h2>Airtable</h2></div></div></a><a href=""/integrations/data-integrations/amazon-aurora""><div class=""px-6 py-5 relative""><div><h2>Amazon Aurora</h2></div></div></a><a href=""/integrations/data-integrations/amazon-dynamodb""><div class=""px-6 py-5 relative""><div><h2>Amazon DynamoDB</h2></div></div></a><a href=""/integrations/data-integrations/amazon-redshift""><div class=""px-6 py-5 relative""><div><h2>Amazon Redshift</h2></div></div></a><a href=""/integrations/data-integrations/amazon-s3""><div class=""px-6 py-5 relative""><div><h2>Amazon S3</h2></div></div></a><a href=""/integrations/data-integrations/apache-cassandra""><div class=""px-6 py-5 relative""><div><h2>Apache Cassandra</h2></div></div></a><a href=""/integrations/data-integrations/apache-druid""><div class=""px-6 py-5 relative""><div><h2>Apache Druid</h2></div></div></a><a href=""/integrations/data-integrations/apache-hive""><div class=""px-6 py-5 relative""><div><h2>Apache Hive</h2></div></div></a><a href=""/integrations/data-integrations/apache-ignite""><div class=""px-6 py-5 relative""><div><h2>Apache Ignite</h2></div></div></a><a href=""/integrations/data-integrations/apache-impala""><div class=""px-6 py-5 relative""><div><h2>Apache Impala</h2></div></div></a><a href=""/integrations/data-integrations/apache-pinot""><div class=""px-6 py-5 relative""><div><h2>Apache Pinot</h2></div></div></a><a href=""/integrations/data-integrations/apache-solr""><div class=""px-6 py-5 relative""><div><h2>Apache Solr</h2></div></div></a><a href=""/integrations/data-integrations/ckan""><div class=""px-6 py-5 relative""><div><h2>Ckan</h2></div></div></a><a href=""/integrations/data-integrations/clickhouse""><div class=""px-6 py-5 relative""><div><h2>ClickHouse</h2></div></div></a><a href=""/integrations/data-integrations/cloud-spanner""><div class=""px-6 py-5 relative""><div><h2>Cloud Spanner</h2></div></div></a><a href=""/integrations/data-integrations/cockroachdb""><div class=""px-6 py-5 relative""><div><h2>CockroachDB</h2></div></div></a><a href=""/integrations/data-integrations/couchbase""><div class=""px-6 py-5 relative""><div><h2>Couchbase</h2></div></div></a><a href=""/integrations/data-integrations/cratedb""><div class=""px-6 py-5 relative""><div><h2>CrateDB</h2></div></div></a><a href=""/integrations/data-integrations/d0lt""><div class=""px-6 py-5 relative""><div><h2>D0lt</h2></div></div></a><a href=""/integrations/data-integrations/databend""><div class=""px-6 py-5 relative""><div><h2>Databend</h2></div></div></a><a href=""/integrations/data-integrations/databricks""><div class=""px-6 py-5 relative""><div><h2>Databricks</h2></div></div></a><a href=""/integrations/data-integrations/datastax""><div class=""px-6 py-5 relative""><div><h2>DataStax</h2></div></div></a><a href=""/integrations/data-integrations/duckdb""><div class=""px-6 py-5 relative""><div><h2>DuckDB</h2></div></div></a><a href=""/integrations/data-integrations/edgelessdb""><div class=""px-6 py-5 relative""><div><h2>EdgelessDB</h2></div></div></a><a href=""/integrations/data-integrations/firebird""><div class=""px-6 py-5 relative""><div><h2>Firebird</h2></div></div></a><a href=""/integrations/data-integrations/google-bigquery""><div class=""px-6 py-5 relative""><div><h2>Google BigQuery</h2></div></div></a><a href=""/integrations/data-integrations/google-cloud-sql""><div class=""px-6 py-5 relative""><div><h2>Google Cloud SQL</h2></div></div></a><a href=""/integrations/data-integrations/google-sheets""><div class=""px-6 py-5 relative""><div><h2>Google Sheets</h2></div></div></a><a href=""/integrations/data-integrations/greptimedb""><div class=""px-6 py-5 relative""><div><h2>GreptimeDB</h2></div></div></a><a href=""/integrations/data-integrations/ibm-db2""><div class=""px-6 py-5 relative""><div><h2>IBM Db2</h2></div></div></a><a href=""/integrations/data-integrations/ibm-informix""><div class=""px-6 py-5 relative""><div><h2>IBM Informix</h2></div></div></a><a href=""/integrations/data-integrations/influxdb""><div class=""px-6 py-5 relative""><div><h2>InfluxDB</h2></div></div></a><a href=""/integrations/data-integrations/mariadb""><div class=""px-6 py-5 relative""><div><h2>MariaDB</h2></div></div></a><a href=""/integrations/data-integrations/matrixone""><div class=""px-6 py-5 relative""><div><h2>MatrixOne</h2></div></div></a><a href=""/integrations/data-integrations/microsoft-access""><div class=""px-6 py-5 relative""><div><h2>Microsoft Access</h2></div></div></a><a href=""/integrations/data-integrations/microsoft-sql-server""><div class=""px-6 py-5 relative""><div><h2>Microsoft SQL Server</h2></div></div></a><a href=""/integrations/data-integrations/monetdb""><div class=""px-6 py-5 relative""><div><h2>MonetDB</h2></div></div></a><a href=""/integrations/data-integrations/mysql""><div class=""px-6 py-5 relative""><div><h2>MySQL</h2></div></div></a><a href=""/integrations/data-integrations/oceanbase""><div class=""px-6 py-5 relative""><div><h2>OceanBase</h2></div></div></a><a href=""/integrations/data-integrations/opengauss""><div class=""px-6 py-5 relative""><div><h2>OpenGauss</h2></div></div></a><a href=""/integrations/data-integrations/oracle""><div class=""px-6 py-5 relative""><div><h2>Oracle</h2></div></div></a><a href=""/integrations/data-integrations/orioledb""><div class=""px-6 py-5 relative""><div><h2>OrioleDB</h2></div></div></a><a href=""/integrations/data-integrations/planetscale""><div class=""px-6 py-5 relative""><div><h2>PlanetScale</h2></div></div></a><a href=""/integrations/data-integrations/postgresql""><div class=""px-6 py-5 relative""><div><h2>PostgreSQL</h2></div></div></a><a href=""/integrations/data-integrations/questdb""><div class=""px-6 py-5 relative""><div><h2>QuestDB</h2></div></div></a><a href=""/integrations/data-integrations/sap-hana""><div class=""px-6 py-5 relative""><div><h2>SAP HANA</h2></div></div></a><a href=""/integrations/data-integrations/sap-sql-anywhere""><div class=""px-6 py-5 relative""><div><h2>SAP SQL Anywhere</h2></div></div></a><a href=""/integrations/data-integrations/scylladb""><div class=""px-6 py-5 relative""><div><h2>ScyllaDB</h2></div></div></a><a href=""/integrations/data-integrations/singlestore""><div class=""px-6 py-5 relative""><div><h2>SingleStore</h2></div></div></a><a href=""/integrations/data-integrations/snowflake""><div class=""px-6 py-5 relative""><div><h2>Snowflake</h2></div></div></a><a href=""/integrations/data-integrations/sqlite""><div class=""px-6 py-5 relative""><div><h2>SQLite</h2></div></div></a><a href=""/integrations/data-integrations/starrocks""><div class=""px-6 py-5 relative""><div><h2>StarRocks</h2></div></div></a><a href=""/integrations/data-integrations/supabase""><div class=""px-6 py-5 relative""><div><h2>Supabase</h2></div></div></a><a href=""/integrations/data-integrations/surrealdb""><div class=""px-6 py-5 relative""><div><h2>SurrealDB</h2></div></div></a><a href=""/integrations/data-integrations/tdengine""><div class=""px-6 py-5 relative""><div><h2>TDengine</h2></div></div></a><a href=""/integrations/data-integrations/teradata""><div class=""px-6 py-5 relative""><div><h2>Teradata</h2></div></div></a><a href=""/integrations/data-integrations/tidb""><div class=""px-6 py-5 relative""><div><h2>TiDB</h2></div></div></a><a href=""/integrations/data-integrations/timescaledb""><div class=""px-6 py-5 relative""><div><h2>TimescaleDB</h2></div></div></a><a href=""/integrations/data-integrations/trino""><div class=""px-6 py-5 relative""><div><h2>Trino</h2></div></div></a><a href=""/integrations/data-integrations/vertica""><div class=""px-6 py-5 relative""><div><h2>Vertica</h2></div></div></a><a href=""/integrations/data-integrations/vitess""><div class=""px-6 py-5 relative""><div><h2>Vitess</h2></div></div></a><a href=""/integrations/data-integrations/yugabytedb""><div class=""px-6 py-5 relative""><div><h2>YugabyteDB</h2></div></div></a></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#vector-stores"">‚Äã</a></div><span class=""cursor-pointer"">Vector Stores</span></h3>
<div><a href=""/integrations/vector-db-integrations/chromadb""><div class=""px-6 py-5 relative""><div><h2>ChromaDB</h2></div></div></a><a href=""/integrations/vector-db-integrations/couchbase""><div class=""px-6 py-5 relative""><div><h2>Couchbase</h2></div></div></a><a href=""/integrations/vector-db-integrations/milvus""><div class=""px-6 py-5 relative""><div><h2>Milvus</h2></div></div></a><a href=""/integrations/vector-db-integrations/pgvector""><div class=""px-6 py-5 relative""><div><h2>PGVector</h2></div></div></a><a href=""/integrations/vector-db-integrations/pinecone""><div class=""px-6 py-5 relative""><div><h2>PineCone</h2></div></div></a><a href=""/integrations/vector-db-integrations/weaviate""><div class=""px-6 py-5 relative""><div><h2>Weaviate</h2></div></div></a></div>
<br />
<div><div><span>If you don&rsquo;t find a data source of your interest, you can <a class=""link"" href=""https://github.com/mindsdb/mindsdb/issues/new?assignees=&amp;labels=enhancement&amp;projects=&amp;template=feature_request_v2.yaml"">request a feature here</a> or build a handler following <a class=""link"" href=""/contribute/data-handlers"">this instruction for data handlers</a> and <a class=""link"" href=""/contribute/app-handlers"">this instruction for applications</a>.</span></div></div>
<div><div><span><strong>Metadata about data handlers and data sources</strong></span><span><strong>Data handlers</strong> represent a raw implementation of the integration between MindsDB and a data source.</span><span>Here is how you can query for all the available data handlers used to connect data sources to MindsDB.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> information_schema</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">handlers</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'data'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>Or, alternatively:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW HANDLERS</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'data'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>And here is how you can query for all the created AI engines:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> information_schema</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">databases</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>Or, alternatively:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW DATABASES;</span></span>
</code></pre></div></div></div></div></div></div>","/spaces/SOP/pages/1474591/Data+Integrations+-+MindsDB","/pages/resumedraft.action?draftId=1474591","/x/H4AW"
"1474626","current","How Knowledge Bases Work - MindsDB","491527","491782","page","6632","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:15.885Z","2025-10-24T14:10:53.500Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>A knowledge base is an advanced system that organizes information based on semantic meaning rather than simple keyword matching. It integrates embedding models, reranking models, and vector stores to enable context-aware data retrieval.</span>
<span>By performing semantic reasoning across multiple data points, a knowledge base delivers deeper insights and more accurate responses, making it a powerful tool for intelligent data access.</span>
<div><div><span>Learn more about features of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases available via SQL API</a>.</span></div></div>
<span>Before diving into the syntax, here is a quick walkthrough showing how knowledge bases work in MindsDB.</span>
<span>We start by creating a knowledge base and inserting data. Next we can run semantic search queries with metadata filtering.</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Create a knowledge base</p><div><span>Use the <code>create()</code> function to create a knowledge base, specifying all its components.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> mindsdb_sdk.connect()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.get_project()</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'my_kb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    embedding_model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span><span style=""color: rgb(10,48,105);"">'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'text-embedding-3-small'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-...'</span><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    reranking_model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span><span style=""color: rgb(10,48,105);"">'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'gpt-4o'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-...'</span><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    storage</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">server.databases.my_vector_db.tables.my_table,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    metadata_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'product'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    content_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'notes'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    id_column</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'order_id'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Insert data into the knowledge base</p><div><span>In this example, we use a simple dataset containing customer notes for product orders which will be inserted into the knowledge base.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product               | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse        | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker     | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Aluminum Laptop Stand | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
</code></pre></div></div></div><span>Use the <code>insert_query()</code> function to ingest data into the knowledge base from a query.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb.insert_query(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    server.databases.sample_data.tables.orders</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Run semantic search on the knowledge base</p><div><span>Query the knowledge base using semantic search.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> my_kb.find(</span><span style=""color: rgb(10,48,105);"">'color'</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div><span>This query returns:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content           | metadata                                                                                                                                                                                            | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black    | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}        | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5093188026135379</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P | Q7P_notes:1of1:0to22 | Prefer aluminum finish  | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">22</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Aluminum Laptop Stand&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">7744703514692067</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2502580835880018</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ | 3XZ_notes:1of1:0to19 | Gift wrap requested     | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">19</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;3XZ&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Bluetooth Speaker&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}     | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">8010851611432231</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2500003885558766</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div></div></div></div><div class=""step relative flex items-start pb-5""><div><div>4</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Get the most relevant search results</p><div><span>Query the knowledge base using semantic search and define the <code>relevance</code> parameter to receive only the best matching data for your use case.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND relevance &gt;= 0.2502;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div><span>This query returns:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content           | metadata                                                                                                                                                                                            | distance           | relevance          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black    | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">}        | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5093188026135379</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P | Q7P_notes:1of1:0to22 | Prefer aluminum finish  | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">22</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Q7P&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Aluminum Laptop Stand&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">7744703514692067</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">2502580835880018</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+-------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+--------------------+</span></span>
</code></pre></div></div></div></div></div></div><div class=""step relative flex items-start pb-5""><div><div>5</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Filter results by metadata</p><div><span>Add metadata filtering to focus your search.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">results </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT *</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    WHERE product = 'Wireless Mouse'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND content = 'color'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    AND relevance &gt;= 0.2502;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(results.fetch())</span></span>
</code></pre></div></div></div><span>This query returns:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id  | chunk_id             | chunk_content          | metadata                                                                                                                                                                                     | distance           | relevance         |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B | A1B_notes:1of1:0to20 | Request color: black   | {</span><span style=""color: rgb(10,48,105);"">&quot;chunk_index&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;content_column&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;end_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">20</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_doc_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B_notes&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;original_row_id&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;A1B&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;product&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wireless Mouse&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;source&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;TextChunkingPreprocessor&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;start_char&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">} | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">5743341242061104</span><span style=""color: rgb(31,35,40);""> | </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">504396172197583</span><span style=""color: rgb(31,35,40);""> |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----+----------------------+------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------+-------------------+</span></span>
</code></pre></div></div></div></div></div></div></div></div>","/spaces/SOP/pages/1474626/How+Knowledge+Bases+Work+-+MindsDB","/pages/resumedraft.action?draftId=1474626","/x/QoAW"
"1474645","current","DataStax - MindsDB","491527","491782","page","43532","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:36.691Z","2025-10-24T14:01:36.691Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the DataStax data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.datastax.com/"">DataStax</a> Astra DB is a cloud database-as-a-service based on Apache Cassandra. DataStax also offers DataStax Enterprise (DSE), an on-premises database built on Apache Cassandra, and Astra Streaming, a messaging and event streaming cloud service based on Apache Pulsar.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect DataStax to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to DataStax.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>DataStax Astra DB is API-compatible with Apache Cassandra and ScyllaDB. Therefore, its implementation extends the ScyllaDB handler and is using the <code>scylla-driver</code> Python library.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the user to authenticate.</li>
<li><code>password</code> is the password to authenticate the user.</li>
<li><code>secure_connect_bundle</code> is the path to the <code>secure_connect_bundle</code> zip file.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Astra DB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> astra_connection</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;astra&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;pass&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;secure_connect_bundle&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/home/Downloads/file.zip&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>or, reference the bundle from Datastax s3 as:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> astra_connection</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;astra&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;pass&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;secure_connect_bundle&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://datastax-cluster-config-prod.s3.us-east-2.amazonaws.com/32312-b9eb-4e09-a641-213eaesa12-1/secure-connect-demo.zip?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=AK...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}  </span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> astra_connection</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">keystore</span><span style=""color: rgb(31,35,40);"">.example_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1474645/DataStax+-+MindsDB","/pages/resumedraft.action?draftId=1474645","/x/VYAW"
"1474666","current","Query Knowledge Base - MindsDB","491527","491782","page","112016","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:27.160Z","2025-10-24T14:07:27.160Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/sql/query</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">     --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">     --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;query&quot;: &quot;SELECT * FROM my_kb;&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">     }'</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1474666/Query+Knowledge+Base+-+MindsDB","/pages/resumedraft.action?draftId=1474666","/x/aoAW"
"1474692","current","List Tables - MindsDB","491527","491782","page","113392","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:52.628Z","2025-10-24T14:07:52.628Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>Returns a list of tables in a database.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/databases/{databaseName}/tables</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1474692/List+Tables+-+MindsDB","/pages/resumedraft.action?draftId=1474692","/x/hIAW"
"1474711","current","Get Job History - MindsDB","491527","491782","page","116616","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:10:32.635Z","2025-10-24T14:10:32.635Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_history()</code> function lets you access the job history information where you can find a job record for each job execution, including execution errors.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>get_history()</code> method to get history of job execution:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_job.get_history()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1474711/Get+Job+History+-+MindsDB","/pages/resumedraft.action?draftId=1474711","/x/l4AW"
"1474730","current","Refresh a Job - MindsDB","491527","491782","page","117720","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:40.182Z","2025-10-24T14:11:40.182Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>refresh()</code> function synchronizes the job with MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>refresh()</code> method to retrieve job data from the MindsDB server:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_job.refresh()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1474730/Refresh+a+Job+-+MindsDB","/pages/resumedraft.action?draftId=1474730","/x/qoAW"
"1474749","current","MindsDB APIs - MindsDB","491527","491782","page","119649","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:52.846Z","2025-10-24T14:11:52.846Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides multiple APIs with optional authentication mechanisms.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#apis"">‚Äã</a></div><span class=""cursor-pointer"">APIs</span></h2>
<span>When you start MindsDB, the following APIs become available:</span>
<ul>
<li>
<span><strong>HTTP API</strong>, along with <strong>A2A API</strong> and <strong>MCP API</strong>, runs on port <code>47334</code>.</span>
<ul>
<li>
<span>Access the MindsDB Editor at <code>mindsdb-instance-url:47334</code></span>
</li>
<li>
<span>Access the MCP API at <code>mindsdb-instance-url:47334/mcp/</code></span>
</li>
<li>
<span>Access the A2A API at <code>mindsdb-instance-url:47334/a2a/</code></span>
</li>
</ul>
</li>
<li>
<span><strong>MySQL API</strong> runs on port <code>47335</code>.</span>
<ul>
<li>Connect to MindsDB from database clients as if it were a standard MySQL database.</li>
</ul>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#authentication"">‚Äã</a></div><span class=""cursor-pointer"">Authentication</span></h2>
<span>Authentication mechanism covers HTTP API, A2A API, and MCP API.</span>
<span>You can configure authentication by setting <a class=""link"" href=""/setup/environment-vars#mindsdb-authentication"">environment variables</a> or by defining credentials in the <a class=""link"" href=""/setup/custom-config#auth"">configuration file</a>.</span>
<span>For details on generating and using MindsDB authentication tokens, refer to the <a class=""link"" href=""/rest/authentication"">authentication guide</a>.</span></div>","/spaces/SOP/pages/1474749/MindsDB+APIs+-+MindsDB","/pages/resumedraft.action?draftId=1474749","/x/vYAW"
"1507358","current","Docker Desktop Extension for MindsDB - MindsDB","491527","491782","page","2671","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:52:03.728Z","2025-10-24T13:52:03.728Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides an extension for Docker Desktop that facilitates running MindsDB on Docker Desktop.</span>
<div><div><span>Visit the <a class=""link"" href=""https://github.com/mindsdb/mindsdb-docker-extension"">GitHub repository for MindsDB Docker Desktop Extension</a> to learn more.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure you have installed Docker Desktop, following the <a class=""link"" href=""https://www.docker.com/products/docker-desktop/"">official Docker Desktop documentation</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<span>This setup of MindsDB uses the <code>mindsdb/mindsdb:latest</code> Docker image, which is a lightweight Docker image of MindsDB that comes with <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/default_handlers.txt"">these integrations preloaded</a>.</span>
<span>Follow the steps to set up MindsDB in Docker Desktop.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-the-mindsdb-docker-desktop-extension"">‚Äã</a></div><span class=""cursor-pointer"">Install the MindsDB Docker Desktop Extension</span></h3>
<div><div><span>If you are a Windows user, ensure that you have enabled Developer Mode under settings before installing the extension.</span><span><span style=""visibility: visible;""><img class=""object-contain"" height=""718"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/enable-win-dev-mode.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=195e41035532305afb4d3c597d28269a"" style="""" width=""1027"" /></span></span><span>It is not necessary to keep Developer Mode enabled to use the extension. Once the extension is installed, you can disable Developer Mode if you wish.</span></div></div>
<span>Go to the Extensions page in Docker Desktop and search for MindsDB.</span>
<span>Install the MindsDB extension.</span>
<div><div><span>The first time the extension is installed, it will run the latest version of MindsDB. Moving forward, it&rsquo;s advisable to regularly update the MindsDB image used by the extension to ensure access to the latest features and improvements.</span><span>As mentioned previously, the extension uses the <code>mindsdb/mindsdb:latest</code> Docker image. To update the image, follow these steps:</span><ol>
<li>Navigate to the &lsquo;Images&rsquo; tab in Docker Desktop.</li>
<li>Search or locate the mindsdb/mindsdb:latest image.</li>
<li>Click on the three dots on the right side of the image and click &lsquo;Pull&rsquo;. If the image is already up to date, you will see a message stating so and you can skip the next step.</li>
<li>Wait for the image to be pulled and restart Docker Desktop.</li>
</ol><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2346"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/pull-latest-image.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=08108acaf40d72ed38139d9a2a6c5654"" style="""" width=""3700"" /></span></span></div></div>
<span>Access MindsDB inside Docker Desktop.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2346"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/mindsdb_docker_desktop.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=033ad54d40f36d4a75b6c498063d687c"" style="""" width=""3700"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-dependencies"">‚Äã</a></div><span class=""cursor-pointer"">Install dependencies</span></h3>
<span>In the MindsDB editor, go to <em>Settings</em> and <em>Manage Integrations</em>.</span>
<span>Select integrations you want to use and click on <em>Install</em>.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2101"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/install-dependencies-gui.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=3a56cbc1e76b7b7ed6140473ed7380e1"" style="""" width=""3688"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#view-logs"">‚Äã</a></div><span class=""cursor-pointer"">View logs</span></h3>
<span>In order to view the logs generated by MindsDB when running the extension, follow these steps:</span>
<ol>
<li>Navigate to the &lsquo;Containers&rsquo; tab in Docker Desktop.</li>
<li>Search or locate the multi-container application running the MindsDB extension. This can be done by searching for &lsquo;mindsdb&rsquo;.</li>
</ol>
<div><div><span>If you do not see the application listed here, navigate to the &lsquo;Extensions&rsquo; tag in Settings and ensure that the &lsquo;Show Docker Extensions system containers&rsquo; option is enabled.</span><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2346"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/enable-extension-containers.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=413032f578d8bed378542b772ad27c67"" style="""" width=""3700"" /></span></span></div></div>
<ol start=""3"">
<li>Click on the container named &lsquo;mindsdb_service&rsquo;. This will direct you to the container running MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2346"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/containers-running-extension.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=9c8dd41990d6778824041221e77ff911"" style="""" width=""3700"" /></span></span></p>
<ol start=""4"">
<li>View the logs in the &lsquo;Logs&rsquo; tab.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2346"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/docker/docker_desktop/mindsdb-container-logs.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=38c3c673c12ea65af1c9d78628101f66"" style="""" width=""3700"" /></span></span></p></div>","/spaces/SOP/pages/1507358/Docker+Desktop+Extension+for+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1507358","/x/HgAX"
"1507381","current","How to Interact with MindsDB from PHP - MindsDB","491527","491782","page","16722","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:45.893Z","2025-10-24T13:59:45.893Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>To get started with MindsDB, you need to install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<span>There are a few ways you can interact with MindsDB from the PHP code.</span>
<ol>
<li>
<span>You can connect to MindsDB using the <a class=""link"" href=""https://www.php.net/manual/en/book.pdo.php"">PHP Data Objects</a> and execute statements directly on MindsDB with the <code>PDO::query</code> method.</span>
</li>
<li>
<span>You can use the <a class=""link"" href=""/rest/overview"">REST API</a> endpoints to interact with MindsDB directly from PHP.</span>
</li>
</ol></div>","/spaces/SOP/pages/1507381/How+to+Interact+with+MindsDB+from+PHP+-+MindsDB","/pages/resumedraft.action?draftId=1507381","/x/NQAX"
"1507402","current","Gmail - MindsDB","491527","491782","page","21356","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:11.646Z","2025-10-24T14:00:11.646Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Gmail accounts to MindsDB.</span>
<span><a class=""link"" href=""https://gmail.com/"">Gmail</a> is a widely used and popular email service developed by Google.</span>
<span>By connecting your Gmail account to MindsDB, you can utilize various AI models available within MindsDB to summarize emails, detect spam, or even automate email replies.</span>
<div><div><span>Please note that currently you can connect your Gmail account to local MindsDB installation by providing a path to the credentials file stored locally.</span><span>If you want to connect your Gmail account to MindsDB Cloud, you can upload the credentials file, for instance, to your S3 bucket and provide a link to it as a parameter.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Gmail to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Gmail.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>credentials_file</code> local path to the credentials.json or <code>credentials_url</code> in case your file is uploaded to s3. Follow the instructions below to generate the credentials file.</li>
<li><code>scopes</code> define the level of access granted. It is optional and by default it uses &lsquo;<a class=""link"">https://&hellip;/gmail.compose</a>&rsquo; and &lsquo;<a class=""link"">https://&hellip;/gmail.readonly</a>&rsquo; scopes.</li>
</ul>
<span>In order to make use of this handler and connect the Google Calendar app to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_gmail</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'gmail'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;credentials_file&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb/integrations/handlers/gmail_handler/credentials.json&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;scopes&quot;</span><span style=""color: rgb(31,35,40);"">: ['https://.../gmail.compose', 'https://.../gmail.readonly', ...]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Or, you can also connect by giving the credentials file from an s3 <a class=""link"" href=""https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"">pre signed url</a>. To do this you need to pass in the credentials_file parameter as a <a class=""link"" href=""https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"">pre signed url</a>. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_gmail</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'gmail'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;credentials_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://s3.amazonaws.com/your_bucket/credentials.json?response-content-disposition=inline&amp;X-Amz-Security-Token=12312...&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">    -- &quot;scopes&quot;: ['SCOPE_1', 'SCOPE_2', ...] -- Optional scopes. By default 'https://.../gmail.compose' &amp; 'https://.../gmail.readonly' scopes are used</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><span>You need a Google account in order to use this integration. Here is how to get the credentials file:</span><ol>
<li>
<span>Create a Google Cloud Platform (GCP) Project:</span>
<span>1.1 Go to the GCP Console (<a class=""link"" href=""https://console.cloud.google.com/"">https://console.cloud.google.com/</a>).</span>
<span>1.2 If you haven&rsquo;t created a project before, you&rsquo;ll be prompted to do so now.</span>
<span>1.3 Give your new project a name.</span>
<span>1.4 Click <code>Create</code> to create the new project.</span>
</li>
<li>
<span>Enable the Gmail API:</span>
<span>2.1 In the GCP Console, select your project.</span>
<span>2.2 Navigate to <code>APIs &amp; Services</code> &gt; <code>Library</code>.</span>
<span>2.3 In the search bar, search for <code>Gmail</code>.</span>
<span>2.4 Click on <code>Gmail API</code>, then click <code>Enable</code>.</span>
</li>
<li>
<span>Create credentials for the Gmail API:</span>
<span>3.1 Navigate to <code>APIs &amp; Services</code> &gt; <code>Credentials</code>.</span>
<span>3.2 Click on the <code>Create Credentials</code> button and choose <code>OAuth client ID</code>.</span>
<span>3.3 If you haven&rsquo;t configured the OAuth consent screen before, you&rsquo;ll be prompted to do so now. Make sure to choose <code>External</code> for User Type, and select the necessary scopes. Make sure to save the changes.</span>
<span>Now, create the OAuth client ID. Choose <code>Web application</code> for the Application Type and give it a name.</span>
<span>3.4 Add the following MindsDB URL to <code>Authorized redirect URIs</code>:</span>
<ul>
<li>For local installation, add <code>http://localhost/verify-auth</code></li>
<li>For Cloud, add <code>http://cloud.mindsdb.com/verify-auth</code>.</li>
</ul>
<span>3.5 Click <code>Create</code>.</span>
</li>
<li>
<span>Download the JSON file:</span>
<span>4.1 After creating your credentials, click the download button (an icon of an arrow pointing down) on the right side of your client ID. This will download a JSON file, so you will use the location to it in the <code>credentials_file</code> param.</span>
</li>
</ol></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>This creates a database called mindsdb_gmail. This database ships with a table called emails that we can use to search for emails as well as to write emails.</span>
<span>Now you can use your Gmail data, like this:</span>
<ul>
<li>
<span>searching for email:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_gmail</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'alert from:*@google.com'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> label_ids </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;INBOX,UNREAD&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>writing emails:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> mindsdb_gmail</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span><span style=""color: rgb(31,35,40);""> (thread_id, message_id, to_email, </span><span style=""color: rgb(207,34,46);"">subject</span><span style=""color: rgb(31,35,40);"">, body)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'187cbdd861350934d'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'8e54ccfd-abd0-756b-a12e-f7bc95ebc75b@Spark'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'test@example2.com'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'Trying out MindsDB'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'This seems awesome. You must try it out whenever you can.'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-1%3A-automating-email-replies"">‚Äã</a></div><span class=""cursor-pointer"">Example 1: Automating Email Replies</span></h2>
<span>Now that we know how to pull emails into our database and write emails, we can make use of OpenAPI engine to write email replies.</span>
<span>First, create an OpenAI engine, passing your OpenAI API key:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> ML_ENGINE openai_engine</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> openai</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    openai_api_key </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'your-openai-api-key'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Then, create a model using this engine:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">gpt_model</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT response</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'openai_engine'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    max_tokens </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 500</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    api_key </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'your_api_key'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    model_name </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'gpt-3.5-turbo'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    prompt_template </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'From input message: {{body}}\</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                        by from_user: {{sender}}\</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                        In less than 500 characters, write an email response to {{sender}} in the following format:\</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                        Start with proper salutation and respond with a short message in a casual tone, and sign the email with my name mindsdb'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-2%3A-detecting-spam-emails"">‚Äã</a></div><span class=""cursor-pointer"">Example 2: Detecting Spam Emails</span></h2>
<span>You can check if an email is spam by using one of the Hugging Face pre-trained models.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">spam_classifier</span><span style=""color: rgb(31,35,40);"">                           </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT PRED                           </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'huggingface'</span><span style=""color: rgb(31,35,40);"">,              </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  task </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'text-classification'</span><span style=""color: rgb(31,35,40);"">,        </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  model_name </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mrm8488/bert-tiny-finetuned-sms-spam-detection'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  input_column </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'text_spammy'</span><span style=""color: rgb(31,35,40);"">,        </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  labels </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['ham', 'spam'];</span></span>
</code></pre></div></div></div>
<span>Then, create a view that contains the snippet or the body of the email.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.emails_text </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> snippet </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> text_spammy</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_gmail</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Finally, you can use the model to classify emails into spam or ham:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> h</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PRED</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">h</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PRED_explain</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">text_spammy</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> input_text</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails_text</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> t</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">spam_classifier</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> h;</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/gmail_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1507402/Gmail+-+MindsDB","/pages/resumedraft.action?draftId=1507402","/x/SgAX"
"1507429","current","Jira - MindsDB","491527","491782","page","23803","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:23.070Z","2025-10-24T14:00:23.070Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.atlassian.com/software/jira/guides/getting-started/introduction"">Jira</a>, the #1 agile project management tool used by teams to plan, track, release and support world-class software with confidence.
The integration allows MindsDB to access data from Jira and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Salesforce to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Jira from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/jira_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> jira_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'jira'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_base&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://example.atlassian.net&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;john.doe@example.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>api_base</code>: The base URL for your Jira instance/server.</li>
<li><code>username</code>: The email address associated with your Jira account.</li>
<li><code>password</code>: The API token generated for your Jira account.</li>
</ul>
<div><div><span>Refer this <a class=""link"" href=""https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/"">guide</a> for instructions on how to create API tokens for your account.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> jira_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The above example utilize <code>jira_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div></div>","/spaces/SOP/pages/1507429/Jira+-+MindsDB","/pages/resumedraft.action?draftId=1507429","/x/ZQAX"
"1507460","current","Web Crawler - MindsDB","491527","491782","page","32476","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:57.986Z","2025-10-24T14:00:57.986Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to use a web crawler within MindsDB.</span>
<span>A web crawler is an automated script designed to systematically browse and index content on the internet. Within MindsDB, you can utilize a web crawler to efficiently collect data from various websites.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To use Web Crawler with MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler does not require any connection parameters.</span>
<span>Here is how to initialize a web crawler:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_web</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'web'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The above query creates a database called <code>my_web</code>. This database by default has a table called <code>crawler</code> that stores data from a given URL or multiple URLs.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#parameters"">‚Äã</a></div><span class=""cursor-pointer"">Parameters</span></h3>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#crawl-depth"">‚Äã</a></div><span class=""cursor-pointer"">Crawl Depth</span></h4>
<span>The <code>crawl_depth</code> parameter defines how deep the crawler should navigate through linked pages:</span>
<ul>
<li><code>crawl_depth = 0</code>: Crawls only the specified page.</li>
<li><code>crawl_depth = 1</code>: Crawls the specified page and all linked pages on it.</li>
<li>Higher values continue the pattern.</li>
</ul>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#page-limits"">‚Äã</a></div><span class=""cursor-pointer"">Page Limits</span></h4>
<span>There are multiple ways to limit the number of pages returned:</span>
<ul>
<li>The <code>LIMIT</code> clause defines the maximum number of pages returned globally.</li>
<li>The <code>per_url_limit</code> parameter limits the number of pages returned for each specific URL, if more than one URL is provided.</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#crawling-a-single-url"">‚Äã</a></div><span class=""cursor-pointer"">Crawling a Single URL</span></h3>
<span>The following example retrieves data from a single webpage:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'https://docs.mindsdb.com/'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Returns <strong>1 row</strong> by default.</span>
<span>To retrieve more pages from the same URL, specify the <code>LIMIT</code>:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'https://docs.mindsdb.com/'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 30</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Returns up to <strong>30 rows</strong>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#crawling-multiple-urls"">‚Äã</a></div><span class=""cursor-pointer"">Crawling Multiple URLs</span></h3>
<span>To crawl multiple URLs at once:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> IN</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'https://docs.mindsdb.com/'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://dev.mysql.com/doc/'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://mindsdb.com/'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Returns <strong>3 rows</strong> by default (1 row per URL).</span>
<span>To apply a per-URL limit:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> IN</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'https://docs.mindsdb.com/'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://dev.mysql.com/doc/'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> per_url_limit </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 2</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Returns <strong>4 rows</strong> (2 rows per URL).</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#crawling-with-depth"">‚Äã</a></div><span class=""cursor-pointer"">Crawling with Depth</span></h3>
<span>To crawl all pages linked within a website:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'https://docs.mindsdb.com/'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> crawl_depth </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Returns <strong>1 + x rows</strong>, where <code>x</code> is the number of linked webpages.</span>
<span>For multiple URLs with crawl depth:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> IN</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'https://docs.mindsdb.com/'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://dev.mysql.com/doc/'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> crawl_depth </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Returns <strong>2 + x + y rows</strong>, where <code>x</code> and <code>y</code> are the number of linked pages from each URL.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#get-pdf-content"">‚Äã</a></div><span class=""cursor-pointer"">Get PDF Content</span></h3>
<span>MindsDB accepts <a class=""link"" href=""/sql/create/file"">file uploads</a> of <code>csv</code>, <code>xlsx</code>, <code>xls</code>, <code>sheet</code>, <code>json</code>, and <code>parquet</code>. However, you can also configure the web crawler to fetch data from PDF files accessible via URLs.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '&lt;link-to-pdf-file&gt;'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#configuring-web-handler-for-specific-domains"">‚Äã</a></div><span class=""cursor-pointer"">Configuring Web Handler for Specific Domains</span></h3>
<span>The Web Handler can be configured to interact only with specific domains by using the <code>web_crawling_allowed_sites</code> setting in the <code>config.json</code> file.
This feature allows you to restrict the handler to crawl and process content only from the domains you specify, enhancing security and control over web interactions.</span>
<span>To configure this, simply list the allowed domains under the <code>web_crawling_allowed_sites</code> key in <code>config.json</code>. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(10,48,105);"">&quot;web_crawling_allowed_sites&quot;</span><span style=""color: rgb(31,35,40);"">: [</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;https://docs.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;https://another-allowed-site.com&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">]</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Web crawler encounters character encoding issues</code></span><ul>
<li><strong>Symptoms</strong>: Extracted text appears garbled or contains strange characters instead of the expected text.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Open a GitHub Issue: If you encounter a bug or a repeatable error with encoding,
report it on the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/issues"">MindsDB GitHub</a> repository by opening an issue.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>Web crawler times out while trying to fetch content</code></span><ul>
<li><strong>Symptoms</strong>: The crawler fails to retrieve data from a website, resulting in timeout errors.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Check the network connection to ensure the target site is reachable.</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1507460/Web+Crawler+-+MindsDB","/pages/resumedraft.action?draftId=1507460","/x/hAAX"
"1507479","current","Ckan - MindsDB","491527","491782","page","39500","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:22.372Z","2025-10-24T14:01:22.372Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#ckan-integration-handler"">‚Äã</a></div><span class=""cursor-pointer"">CKAN Integration handler</span></h2>
<span>This handler facilitates integration with <a class=""link"" href=""https://ckan.org/"">CKAN</a>.
an open-source data catalog platform for managing and publishing open data. CKAN organizes datasets and stores data in its <a class=""link"" href=""http://docs.ckan.org/en/2.11/maintaining/datastore.html"">DataStore</a>.To retrieve data from CKAN, the <a class=""link"" href=""https://github.com/ckan/ckanapi"">CKANAPI</a> must be used.</span>
<h1><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h1>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SAP HANA to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<span>The CKAN handler is included with MindsDB by default, so no additional installation is required.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#configuration"">‚Äã</a></div><span class=""cursor-pointer"">Configuration</span></h2>
<span>To use the CKAN handler, you need to provide the URL of the CKAN instance you want to connect to. You can do this by setting the <code>CKAN_URL</code> environment variable. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> ckan_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'ckan'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://your-ckan-instance-url.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-api-key-if-required&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<blockquote>
<span><em><strong>NOTE:</strong></em> Some CKAN instances will require you to provide an API Token. You can create one in the CKAN user panel.</span>
</blockquote>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The CKAN handler provides three main tables:</span>
<ul>
<li><code>datasets</code>: Lists all datasets in the CKAN instance.</li>
<li><code>resources</code>: Lists all resources metadata across all packages.</li>
<li><code>datastore</code>:  Allows querying individual datastore resources.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-queries"">‚Äã</a></div><span class=""cursor-pointer"">Example Queries</span></h2>
<ol>
<li>
<span>List all datasets:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `your-datasource`</span><span style=""color: rgb(31,35,40);"">.datasets;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>List all resources:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `your-datasource`</span><span style=""color: rgb(31,35,40);"">.resources ;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Query a specific datastore resource:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `your-datasource`</span><span style=""color: rgb(31,35,40);"">.datastore </span><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> resource_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'your-resource-id'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
</ol>
<span>Replace <code>your-resource-id-here</code> with the actual resource ID you want to query.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying-large-resources"">‚Äã</a></div><span class=""cursor-pointer"">Querying Large Resources</span></h2>
<span>The CKAN handler supports automatic pagination when querying datastore resources. This allows you to retrieve large datasets without worrying about API limits.</span>
<span>You can still use the <code>LIMIT</code> clause to limit the number of rows returned by the query. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> ckan_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">datastore</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> resource_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'your-resource-id-here'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 1000</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#limitations"">‚Äã</a></div><span class=""cursor-pointer"">Limitations</span></h2>
<ul>
<li>The handler currently supports read operations only. Write operations are not supported.</li>
<li>Performance may vary depending on the size of the CKAN instance and the complexity of your queries.</li>
<li>The handler may not work with all CKAN instances, especially those with custom configurations.</li>
<li>The handler does not support all CKAN API features. Some advanced features may not be available.</li>
<li>The datastore search will return limited records up to 32000. Please refer to the <a class=""link"" href=""https://docs.ckan.org/en/2.11/maintaining/datastore.html#ckanext.datastore.logic.action.datastore_search_sql"">CKAN API</a> documentation for more information.</li>
</ul></div>","/spaces/SOP/pages/1507479/Ckan+-+MindsDB","/pages/resumedraft.action?draftId=1507479","/x/lwAX"
"1507512","current","SAP SQL Anywhere - MindsDB","491527","491782","page","57743","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:21.025Z","2025-10-24T14:02:21.025Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the SAP SQL Anywhere data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.sap.com/products/technology-platform/sql-anywhere.html"">SAP SQL Anywhere</a> is an embedded database for application software that enables secure and reliable data management for servers where no DBA is available and synchronization for tens of thousands of mobile devices, Internet of Things (IoT) systems, and remote environments.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SAP SQL Anywhere to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to SAP SQL Anywhere.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>sqlanydb</code>, the Python driver for SAP SQL Anywhere.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the SAP SQL Anywhere instance.</li>
<li><code>port</code> is the port number of the SAP SQL Anywhere instance.</li>
<li><code>user</code> specifies the user name.</li>
<li><code>password</code> specifies the password for the user.</li>
<li><code>database</code> sets the current database.</li>
<li><code>server</code> sets the current server.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>You can use the below SQL statements to create a table in SAP SQL Anywhere called <code>TEST</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> TEST</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ID          </span><span style=""color: rgb(207,34,46);"">INTEGER</span><span style=""color: rgb(207,34,46);""> NOT NULL</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    NAME</span><span style=""color: rgb(207,34,46);"">        NVARCHAR</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">),</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    DESCRIPTION</span><span style=""color: rgb(207,34,46);""> NVARCHAR</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> UNIQUE INDEX</span><span style=""color: rgb(130,80,223);""> TEST_ID_INDEX</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ON</span><span style=""color: rgb(31,35,40);""> TEST (ID);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">ALTER</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(31,35,40);""> TEST</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ADD</span><span style=""color: rgb(207,34,46);""> CONSTRAINT</span><span style=""color: rgb(31,35,40);""> TEST_PK</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        PRIMARY KEY</span><span style=""color: rgb(31,35,40);""> (ID);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> TEST</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'h'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'w'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>In order to make use of this handler and connect to the SAP SQL Anywhere database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sap_sqlany_trial</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'sqlany'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;DBADMIN&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;55505&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;server&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;TestMe&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;MINDSDB&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sap_sqlany_trial</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<table><thead><tr><th>ID</th><th>NAME</th><th>DESCRIPTION</th></tr></thead><tbody><tr><td>1</td><td>h</td><td>w</td></tr></tbody></table></div>","/spaces/SOP/pages/1507512/SAP+SQL+Anywhere+-+MindsDB","/pages/resumedraft.action?draftId=1507512","/x/uAAX"
"1507533","current","Query Triggers - MindsDB","491527","491782","page","98773","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:49.300Z","2025-10-24T14:05:49.300Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>Triggers enable users to define event-based actions. For example, if a table is updated, then run a query to update predictions.</span>
<div><div><span>Currently, you can create triggers on the following data sources: <a class=""link"" href=""https://docs.mindsdb.com/integrations/data-integrations/mongodb"">MongoDB</a>, <a class=""link"" href=""https://docs.mindsdb.com/integrations/app-integrations/slack"">Slack</a>, <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/solace_handler"">Solace</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax for querying all triggers:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW TRIGGERS;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1507533/Query+Triggers+-+MindsDB","/pages/resumedraft.action?draftId=1507533","/x/zQAX"
"1507558","current","Common Table Expressions - MindsDB","491527","491782","page","100023","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:58.433Z","2025-10-24T14:05:58.433Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB supports standard SQL syntax, including Common Table Expressions (CTEs).</span>
<span>CTEs are used to create temporary, named result sets that simplify complex queries, enhance readability, and allow for modular query design by breaking down large queries into manageable parts.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> table_name1 </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> columns</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> table1 t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> table2 t2</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ON</span><span style=""color: rgb(5,80,174);""> t1</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> t2</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">),</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">table_name2 </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> columns</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> table1 t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> table2 t2</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ON</span><span style=""color: rgb(5,80,174);""> t1</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> t2</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> columns</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> table_name1 t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(31,35,40);""> table_name2 t2</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> t1</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span><span style=""color: rgb(207,34,46);""> -</span><span style=""color: rgb(5,80,174);""> t2</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">col</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1507558/Common+Table+Expressions+-+MindsDB","/pages/resumedraft.action?draftId=1507558","/x/5gAX"
"1507577","current","MindsDB's MCP Server with OpenAI's Remote MCP - MindsDB","491527","491782","page","101849","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:03.190Z","2025-10-24T14:06:03.190Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This tutorial walks you through the usage of MindsDB&rsquo;s MCP Server with <a class=""link"" href=""https://platform.openai.com/docs/guides/tools-remote-mcp"">OpenAI&rsquo;s Remote MCP</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<span>Follow the steps below to connect MindsDB&rsquo;s MCP Server to OpenAI.</span>
<ol>
<li>
<span>Start MindsDB&rsquo;s MCP Server following <a class=""link"" href=""/mcp/usage"">this guide</a>.</span>
</li>
<li>
<span>Expose the local instance of MindsDB via <a class=""link"" href=""https://ngrok.com/"">ngrok</a> or similar tools.</span>
</li>
<li>
<span>Get the OpenAI API key and download the <code>openai</code> package.</span>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#chat-with-data"">‚Äã</a></div><span class=""cursor-pointer"">Chat with Data</span></h2>
<span>Here is how to connect MindsDB&rsquo;s MCP Server to OpenAI.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> openai</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">client </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> openai.OpenAI(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    api_key</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'openai-api-key'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">response </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> client.responses.create(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    model</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;o3&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    tools</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mcp&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;server_label&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;server_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://5a52-88-203-84-191.ngrok-free.app/mcp/sse&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;headers&quot;</span><span style=""color: rgb(31,35,40);"">: { </span><span style=""color: rgb(10,48,105);"">&quot;Authorization&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Bearer &lt;YOUR_MINDSDB_TOKEN&gt;&quot;</span><span style=""color: rgb(31,35,40);""> },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;require_approval&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;never&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    input</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;What tools do you have available?&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(response)</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>Response(id='resp_68305d877eac81918e05a35beb23c40f054f254057b1b9a9', created_at=1748000135.0, error=None, incomplete_details=None, instructions=None, metadata={}, model='o3-2025-04-16', object='response', output=[McpListTools(id='mcpl_68305d87913c8191ade2e249dc9a7cce054f254057b1b9a9', server_label='mdb', tools=[McpListToolsTool(input_schema={'properties': {'query': {'title': 'Query', 'type': 'string'}, 'context': {'anyOf': [{'type': 'object'}, {'type': 'null'}], 'default': None, 'title': 'Context'}}, 'required': ['query'], 'title': 'queryArguments', 'type': 'object'}, name='query', annotations=None, description='\n    Execute a SQL query against MindsDB\n\n    Args:\n        query: The SQL query to execute\n        context: Optional context parameters for the query\n\n    Returns:\n        Dict containing the query results or error information\n    '), McpListToolsTool(input_schema={'properties': {}, 'title': 'list_databasesArguments', 'type': 'object'}, name='list_databases', annotations=None, description='\n    List all databases in MindsDB along with their tables\n\n    Returns:\n        Dict containing the list of databases and their tables\n    ')], type='mcp_list_tools', error=None), ResponseReasoningItem(id='rs_68305d8c00c08191964ba4e0b011f98a054f254057b1b9a9', summary=[], type='reasoning', encrypted_content=None, status=None), ResponseOutputMessage(id='msg_68305d8ee2cc8191966e94f464677dab054f254057b1b9a9', content=[ResponseOutputText(annotations=[], text='I currently have access to two kinds of tools:\n\n1. Image Input  \n   &bull; I can receive an image along with your message and analyze the visible content (objects, text, layout, etc.) to help answer questions or perform tasks related to the image.\n\n2. MindsDB SQL Tools  \n   &bull; mcp_mdb.list_databases &ndash; Lists the databases and tables that are registered in the MindsDB environment.  \n   &bull; mcp_mdb.query &ndash; Lets me run SQL queries against those databases and return the results to you.\n\nLet me know if you&rsquo;d like me to use either of these tools!', type='output_text')], role='assistant', status='completed', type='message')], parallel_tool_calls=True, temperature=1.0, tool_choice='auto', tools=[Mcp(server_label='mdb', server_url='https://5a52-88-203-84-191.ngrok-free.app/&lt;redacted&gt;', type='mcp', allowed_tools=None, headers={'Authorization': '&lt;redacted&gt;'}, require_approval='always')], top_p=1.0, background=False, max_output_tokens=None, previous_response_id=None, reasoning=Reasoning(effort='medium', generate_summary=None, summary=None), service_tier='default', status='completed', text=ResponseTextConfig(format=ResponseFormatText(type='text')), truncation='disabled', usage=ResponseUsage(input_tokens=136, input_tokens_details=InputTokensDetails(cached_tokens=0), output_tokens=192, output_tokens_details=OutputTokensDetails(reasoning_tokens=64), total_tokens=328), user=None, store=True)</span></span>
</code></pre></div></div></div>
<span>Follow the <a class=""link"" href=""https://platform.openai.com/docs/guides/tools-remote-mcp"">Remote MCP docs from OpenAI</a> to learn more.</span></div>","/spaces/SOP/pages/1507577/MindsDB+s+MCP+Server+with+OpenAI+s+Remote+MCP+-+MindsDB","/pages/resumedraft.action?draftId=1507577","/x/_QAX"
"1507600","current","Setup - MindsDB","491527","491782","page","113535","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:54.973Z","2025-10-24T14:07:54.973Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Here is how to connect and use REST API to MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#local-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">Local MindsDB</span></h2>
<span>Here is an example in Python:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>import requests</span></span>

<span class=""line""><span># connect</span></span>
<span class=""line""><span>url = 'http://127.0.0.1:47334/api/sql/query'</span></span>

<span class=""line""><span># query</span></span>
<span class=""line""><span>resp = requests.post(url, json={'query':</span></span>
<span class=""line""><span>                    'SELECT * FROM example_db.demo_data.home_rentals LIMIT 10;'})</span></span>

<span class=""line""><span># response</span></span>
<span class=""line""><span>print(resp.text) # alternative: print(resp.json())</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1507600/Setup+-+MindsDB","/pages/resumedraft.action?draftId=1507600","/x/EAEX"
"1540157","current","Model Context Protocol (MCP) - MindsDB","491527","491782","page","4883","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:06.340Z","2025-10-24T13:53:06.340Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>The <strong>Model Context Protocol (MCP)</strong> facilitates real-time communication between MCP clients, such as LLMs, AI agents, and AI applications, and MCP servers like MindsDB.</span>
<span><strong>MindsDB is an MCP server</strong> that enables intelligent applications to query and reason over federated data from databases, data warehouses, and applications.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#key-features"">‚Äã</a></div><span class=""cursor-pointer"">Key Features</span></h2>
<ul>
<li>
<span><strong>Unified Data Gateway</strong></span>
<span>MindsDB abstracts the complexity of dealing with disparate data sources. It enables AI apps and agents to run powerful, federated queries across structured and unstructured data systems.</span>
</li>
<li>
<span><strong>Seamless User Experience</strong></span>
<span>MindsDB enhances MCP implementations with security, monitoring, and governance. It includes built-in integrations to ensure compatibility with traditional and non-MCP applications.</span>
</li>
<li>
<span><strong>Advanced AI Workflows</strong></span>
<span>MindsDB supports composite AI operations like multi-source joins and orchestration of different models or services within a single query, which go beyond the native capabilities of most LLMs using MCP alone.</span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#protocol-overview"">‚Äã</a></div><span class=""cursor-pointer"">Protocol Overview</span></h2>
<span>MCP establishes a bidirectional communication channel between clients and servers, enabling LLMs, agents, or apps to execute queries over federated data infrastructures.</span>
<p align=""center""><span><span style=""visibility: visible;""><img alt=""MCP Protocol Flow Diagram"" class=""object-contain"" height=""803"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=d6bff0b70d6f9c95b06ed40f3c74b199"" style="""" width=""1600"" /></span></span></p>
<span>Federated data refers to data distributed across multiple systems, formats, or platforms, whether on-premises or in the cloud.</span>
<span>With MindsDB as your MCP server, you can treat this distributed data as a <strong>single virtual database</strong>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-it-works"">‚Äã</a></div><span class=""cursor-pointer"">How It Works</span></h2>
<span>Here&rsquo;s a simplified overview of the MCP data flow:</span>
<ol>
<li>The client connects to the MCP server.</li>
<li>A query is issued from the client to the MCP server.</li>
<li>MindsDB routes the query to the appropriate federated data sources.</li>
<li>The data sources return results to MindsDB.</li>
<li>MindsDB returns unified results back to the client.</li>
</ol>
<span>This enables AI-native applications to deliver rich, real-time insights over complex enterprise data with minimal integration effort.</span></div>","/spaces/SOP/pages/1540157/Model+Context+Protocol+MCP+-+MindsDB","/pages/resumedraft.action?draftId=1540157","/x/PYAX"
"1540179","current","News API - MindsDB","491527","491782","page","25553","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:35.473Z","2025-10-24T14:00:35.473Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect News API to MindsDB.</span>
<span><a class=""link"" href=""https://newsapi.org/"">News API</a> is a simple HTTP REST API for searching and retrieving live articles from all over the web.</span>
<span>Data from News API can be utilized within MindsDB for model training and predictions.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect News API to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to News API.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <a class=""link"" href=""https://newsapi.org/docs/client-libraries/python"">newsapi-python</a> library.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>api_key</code> News API key to use for authentication.</li>
</ul>
<div><div><span>Check out <a class=""link"" href=""https://newsapi.org/docs/authentication"">this guide</a> on how to create the API key.</span><span>It is recommended to use the API key to avoid the <code>API rate limit exceeded</code> error.</span></div></div>
<span>Here is how to connect News API to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> newsAPI</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'newsapi'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">	&quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Your api key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Simple Search for recent articles:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> newsAPI</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">article</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Python'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Advanced search for recent articles per specific sources between dates:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> newsAPI</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">article</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Python'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> sources</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;bbc-news&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> publishedAt </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(10,48,105);""> &quot;2021-03-23&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);"">  publishedAt </span><span style=""color: rgb(207,34,46);"">&lt;=</span><span style=""color: rgb(10,48,105);""> &quot;2023-04-23&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 4</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/newsapi_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1540179/News+API+-+MindsDB","/pages/resumedraft.action?draftId=1540179","/x/U4AX"
"1540206","current","Airtable - MindsDB","491527","491782","page","33002","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:01.424Z","2025-10-24T14:01:01.424Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Airtable data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.airtable.com/lp/campaign/database"">Airtable</a> is a platform that makes it easy to build powerful, custom applications. These tools can streamline just about any process, workflow, or project. And best of all, you can build them without ever learning to write a single line of code.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Airtable to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Airtable.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>duckdb</code>, a library that allows SQL queries to be executed on <code>pandas</code> DataFrames.</span>
<span>In essence, when querying a particular table, the entire table is first pulled into a <code>pandas</code> DataFrame using the <a class=""link"" href=""https://airtable.com/api"">Airtable API</a>. Once this is done, SQL queries can be run on the DataFrame using <code>duckdb</code>.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>base_id</code> is the Airtable base ID.</li>
<li><code>table_name</code> is the Airtable table name.</li>
<li><code>api_key</code> is the API key for the Airtable API.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Airtable database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> airtable_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'airtable'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;base_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;dqweqweqrwwqq&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;table_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;iris&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;knlsndlknslk&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> airtable_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>At the moment, only the <code>SELECT</code> statement is allowed to be executed through <code>duckdb</code>. This, however, has no restriction on running machine learning algorithms against your data in Airtable using the <code>CREATE MODEL</code> statement.</span></div></div></div>","/spaces/SOP/pages/1540206/Airtable+-+MindsDB","/pages/resumedraft.action?draftId=1540206","/x/boAX"
"1540229","current","Amazon Redshift - MindsDB","491527","491782","page","35173","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:06.589Z","2025-10-24T14:01:06.589Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://docs.aws.amazon.com/redshift/latest/mgmt/welcome.html"">Amazon Redshift</a>, a fully managed, petabyte-scale data warehouse service in the cloud. You can start with just a few hundred gigabytes of data and scale to a petabyte or more, enabling you to use your data to acquire new insights for your business and customers.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Redshift to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Redshift database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> redshift_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'redshift'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;examplecluster.abc123xyz789.us-west-1.redshift.amazonaws.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5439</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;awsuser&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;my_password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>host</code>: The host name or IP address of the Redshift cluster.</li>
<li><code>port</code>: The port to use when connecting with the Redshift cluster.</li>
<li><code>database</code>: The database name to use when connecting with the Redshift cluster.</li>
<li><code>user</code>: The username to authenticate the user with the Redshift cluster.</li>
<li><code>password</code>: The password to authenticate the user with the Redshift cluster.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>schema</code>: The database schema to use. Default is public.</li>
<li><code>sslmode</code>: The SSL mode for the connection.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> redshift_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run Amazon Redshift SQL queries directly on the connected Redshift database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> redshift_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WITH</span><span style=""color: rgb(31,35,40);""> VENUECOPY </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> VENUE)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> VENUECOPY </span><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>redshift_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Amazon Redshift cluster.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Redshift cluster is active.</li>
<li>Confirm that host, port, user, password and database are correct. Try a direct Redshift connection using a client like DBeaver.</li>
<li>Ensure that the security settings of the Redshift cluster allow connections from MindsDB.</li>
<li>Ensure a stable network between MindsDB and Redshift.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<span>This <a class=""link"" href=""https://docs.aws.amazon.com/redshift/latest/mgmt/troubleshooting-connections.html"">troubleshooting guide</a> provided by AWS might also be helpful.</span></div>","/spaces/SOP/pages/1540229/Amazon+Redshift+-+MindsDB","/pages/resumedraft.action?draftId=1540229","/x/hYAX"
"1540250","current","Amazon S3 - MindsDB","491527","491782","page","35476","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:08.498Z","2025-10-24T14:01:08.498Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html"">Amazon S3</a>, an object storage service that offers industry-leading scalability, data availability, security, and performance.</span>
<div><div><span>This data source integration is thread-safe, utilizing a connection pool where each thread is assigned its own connection. When handling requests in parallel, threads retrieve connections from the pool as needed.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure that MindsDB is installed locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Amazon S3 bucket from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> s3_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 's3'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;aws_access_key_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;AQAXEQK89OX07YS34OP&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;aws_secret_access_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;bucket&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;my-bucket&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<div><div><span>Note that sample parameter values are provided here for reference, and you should replace them with your connection parameters.</span></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>aws_access_key_id</code>: The AWS access key that identifies the user or IAM role.</li>
<li><code>aws_secret_access_key</code>: The AWS secret access key that identifies the user or IAM role.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>aws_session_token</code>: The AWS session token that identifies the user or IAM role. This becomes necessary when using temporary security credentials.</li>
<li><code>bucket</code>: The name of the Amazon S3 bucket. If not provided, all available buckets can be queried, however, this can affect performance, especially when listing all of the available objects.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified object (file) in a S3 bucket by providing the integration name and the object key:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> s3_datasource.</span><span style=""color: rgb(10,48,105);"">`my-file.csv`</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>If a bucket name is provided in the <code>CREATE DATABASE</code> command, querying will be limited to that bucket and the bucket name can be ommitted from the object key as shown in the example above. However, if the bucket name is not provided, the object key must include the bucket name, such as <code>s3_datasource.</code>my-bucket/my-folder/my-file.csv`.</span><span>Wrap the object key in backticks (`) to avoid any issues parsing the SQL statements provided. This is especially important when the object key contains spaces, special characters or prefixes, such as <code>my-folder/my-file.csv</code>.</span><span>At the moment, the supported file formats are CSV, TSV, JSON, and Parquet.</span></div></div>
<div><div><span>The above examples utilize <code>s3_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<span>The special <code>files</code> table can be used to list all objects available in the specified bucket or all buckets if the bucket name is not provided:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> s3_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>
</code></pre></div></div></div>
<span>The content of files can also be retrieved by explicitly requesting the <code>content</code> column. This column is empty by default to avoid unnecessary data transfer:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> path</span><span style=""color: rgb(31,35,40);"">, content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> s3_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>
</code></pre></div></div></div>
<div><div><span>This table will return all objects regardless of the file format, however, only the supported file formats mentioned above can be queried.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Amazon S3 bucket.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Amazon S3 bucket exists.</li>
<li>Confirm that provided AWS credentials are correct. Try making a direct connection to the S3 bucket using the AWS CLI.</li>
<li>Ensure a stable network between MindsDB and AWS.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing object names containing spaces, special characters or prefixes.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure object names with spaces, special characters or prefixes are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel/travel_data.csv</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel/travel_data.csv&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel/travel_data.csv`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1540250/Amazon+S3+-+MindsDB","/pages/resumedraft.action?draftId=1540250","/x/moAX"
"1540269","current","Couchbase - MindsDB","491527","491782","page","41250","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:28.887Z","2025-10-24T14:03:06.373Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Couchbase Vector store data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.couchbase.com/"">Couchbase</a> is an open-source, distributed multi-model NoSQL document-oriented database software package optimized for interactive applications. These applications may serve many concurrent users by creating, storing, retrieving, aggregating, manipulating, and presenting data.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Couchbase to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Couchbase.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>In order to make use of this handler and connect to a Couchbase server in MindsDB, the following syntax can be used. Note, that the example uses the default <code>travel-sample</code> bucket which can be enabled from the couchbase UI with pre-defined scope and documents.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> couchbase_vectorsource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">engine</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'couchbasevector'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">parameters</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;connection_string&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;couchbase://localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;bucket&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;travel-sample&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;scope&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;inventory&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>This handler is implemented using the <code>couchbase</code> library, the Python driver for Couchbase.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>connection_string</code>: the connection string for the endpoint of the Couchbase server</li>
<li><code>bucket</code>: the bucket name to use when connecting with the Couchbase server</li>
<li><code>user</code>: the user to authenticate with the Couchbase server</li>
<li><code>password</code>: the password to authenticate the user with the Couchbase server</li>
<li><code>scope</code>:  scopes are a level of data organization within a bucket. If omitted, will default to <code>_default</code></li>
</ul>
<span>Note: The connection string expects either the couchbases:// or couchbase:// protocol.</span>
<div><div><span>If you are using Couchbase Capella, you can find the connection_string under the Connect tab.
It will also be required to whitelist the machine(s) that will be running MindsDB and database credentials will need to be created for the user. These steps can also be taken under the Connect tab.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can use the established connection to create a collection (or table in the context of MindsDB) in Couchbase and insert data into it:</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-tables"">‚Äã</a></div><span class=""cursor-pointer"">Creating tables</span></h3>
<span>Now, you can use the established connection to create a collection (or table in the context of MindsDB) in Couchbase and insert data into it:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> couchbase_vectorsource</span><span style=""color: rgb(31,35,40);"">.test_embeddings (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span><code>mysql_datasource</code> is another MindsDB data source that has been created by connecting to a MySQL database. The <code>test_embeddings</code> table in the <code>mysql_datasource</code> data source contains the embeddings that we want to store in Couchbase.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying-and-searching"">‚Äã</a></div><span class=""cursor-pointer"">Querying and searching</span></h3>
<span>You can query your collection (table) as shown below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> couchbase_vectorsource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To filter the data in your collection (table) by metadata, you can use the following query:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> couchbase_vectorsource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;some_id&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

</code></pre></div></div></div>
<span>To perform a vector search, the following query can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> couchbase_vectorsource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> embeddings </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    LIMIT</span><span style=""color: rgb(5,80,174);""> 1</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#deleting-records"">‚Äã</a></div><span class=""cursor-pointer"">Deleting records</span></h3>
<span>You can delete documents using <code>DELETE</code> just like in SQL.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> couchbase_vectorsource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(10,48,105);""> `metadata.test`</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'test1'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#dropping-connection"">‚Äã</a></div><span class=""cursor-pointer"">Dropping connection</span></h3>
<span>To drop the connection, use this command</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(31,35,40);""> couchbase_vectorsource;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540269/Couchbase+-+MindsDB","/pages/resumedraft.action?draftId=1540269","/x/rYAX"
"1540290","current","GreptimeDB - MindsDB","491527","491782","page","47027","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:49.899Z","2025-10-24T14:01:49.899Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the GreptimeDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://greptime.com/"">GreptimeDB</a> is an open-source, cloud-native time series database features analytical capabilities, scalebility and open protocols support.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQLHandler.</span>
<span>Connect GreptimeDB to MindsDB by providing the following parameters:</span>
<ul>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
</ul>
<span>There are several optional parameters that can be used as well.</span>
<ul>
<li><code>ssl</code> is the <code>ssl</code> parameter value that indicates whether SSL is enabled (<code>True</code>) or disabled (<code>False</code>).</li>
<li><code>ssl_ca</code> is the SSL Certificate Authority.</li>
<li><code>ssl_cert</code> stores SSL certificates.</li>
<li><code>ssl_key</code> stores SSL keys.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the GreptimeDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> greptimedb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'greptimedb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">4002</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;public&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;username&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> greptimedb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540290/GreptimeDB+-+MindsDB","/pages/resumedraft.action?draftId=1540290","/x/woAX"
"1540311","current","TDengine - MindsDB","491527","491782","page","61066","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:34.319Z","2025-10-24T14:02:34.319Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the TDEngine data handler for MindsDB.</span>
<span><a class=""link"" href=""https://tdengine.com/"">TDengine</a> is an open source, high-performance, cloud native time-series database optimized for Internet of Things (IoT), Connected Cars, and Industrial IoT. It enables efficient, real-time data ingestion, processing, and monitoring of TB and even PB scale data per day, generated by billions of sensors and data collectors. TDengine differentiates itself from other time-series databases with numerous advantages, such as high performance, simplified solution, cloud-native, ease of use, easy data analytics, and open-source.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect TDengine to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to TDengine.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>taos/taosrest</code>, a Python library that allows you to use Python code to run SQL commands on the TDEngine server.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with the server.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>url</code> is the URL to the TDEngine server. For local server, the URL is <code>localhost:6041</code> by default.</li>
<li><code>token</code> is the unique token provided while using TDEngine Cloud.</li>
<li><code>database</code> is the database name to be connected.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the TDEngine database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> tdengine_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'tdengine'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;tdengine_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost:6041&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;token&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;tdengine_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<div><div><span>You can specify <code>token</code> instead of <code>user</code> and <code>password</code> while using TDEngine.</span></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> tdengine_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540311/TDengine+-+MindsDB","/pages/resumedraft.action?draftId=1540311","/x/14AX"
"1540332","current","PGVector - MindsDB","491527","491782","page","68896","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:09.863Z","2025-10-24T14:03:09.863Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the PGVector for MindsDB.</span>
<span>PGVector is an open-source vector similarity search for Postgres. It supports the following:</span>
<ul>
<li>exact and approximate nearest neighbor search,</li>
<li>L2 distance, inner product, and cosine distance,</li>
<li>any language with a Postgres client,</li>
<li>ACID compliance, point-in-time recovery, JOINs, and all of the other great features of Postgres.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler uses <code>pgvector</code> Python library.</span>
<span>To connect to a PGVector instance, use the following statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> pvec</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'pgvector'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;distance&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;cosine&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>The required arguments to establish a connection are the following:</span>
<ul>
<li><code>host</code>: The host name or IP address of the postgres instance.</li>
<li><code>port</code>: The port to use when connecting.</li>
<li><code>database</code>: The database to connect to.</li>
<li><code>user</code>: The user to connect as.</li>
<li><code>password</code>: The password to use when connecting.</li>
<li><code>distance</code>: It defines how the distance between vectors is calculated. Available methods include cosine (default), l1, l2, ip, hamming, jaccard. <a class=""link"" href=""https://github.com/pgvector/pgvector/blob/master/README.md"">Learn more here</a>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#installing-the-pgvector-extension"">‚Äã</a></div><span class=""cursor-pointer"">Installing the pgvector extension</span></h3>
<span>where you have postgres installed run the following commands to install the pgvector extension</span>
<span><code>cd /tmp git clone --branch v0.4.4 https://github.com/pgvector/pgvector.git cd pgvector make make install</code></span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#installing-the-pgvector-python-library"">‚Äã</a></div><span class=""cursor-pointer"">Installing the pgvector python library</span></h3>
<span>Ensure you install all from requirements.txt in the pgvector_handler folder</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-a-database-connection-in-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">Creating a database connection in MindsDB</span></h3>
<span>You can create a database connection like you would for a regular postgres database, the only difference is that you need to specify the engine as <code>pgvector</code></span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> pvec</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'pgvector'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can insert data into a new collection like so</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> pvec</span><span style=""color: rgb(31,35,40);"">.embed</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> embeddings </span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> ML_ENGINE openai</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> openai</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    api_key </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'your-openai-api-key'</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL openai_emb </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT embedding </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span><span style=""color: rgb(31,35,40);"">    </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'openai'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  model_name</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'text-embedding-ada-002'</span><span style=""color: rgb(31,35,40);"">,    </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  mode </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'embedding'</span><span style=""color: rgb(31,35,40);"">,    </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  question_column </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'review'</span><span style=""color: rgb(31,35,40);"">; </span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">create</span><span style=""color: rgb(207,34,46);""> table</span><span style=""color: rgb(130,80,223);""> pvec</span><span style=""color: rgb(31,35,40);"">.itemstest (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">embedding</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> embeddings, </span><span style=""color: rgb(5,80,174);"">t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">review</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);"">  mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">amazon_reviews</span><span style=""color: rgb(31,35,40);""> t</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  join</span><span style=""color: rgb(31,35,40);""> openai_emb  m</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

</code></pre></div></div></div>
<span>You can query a collection within your PGVector as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pvec</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">embed</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">Limit</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pvec</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">itemstest</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">Limit</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>You can query on semantic search like so:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pvec3</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">items_test</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> embeddings </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">select</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> from</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">embedding</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540332/PGVector+-+MindsDB","/pages/resumedraft.action?draftId=1540332","/x/7IAX"
"1540353","current","MindsDB and MySQL CLI - MindsDB","491527","491782","page","76028","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:50.251Z","2025-10-24T14:03:50.251Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides a powerful MySQL API that allows users to connect to it
using the MySQL Command Line Client.</span>
<span>Please note that connecting to MindsDB&rsquo;s MySQL API is the same as connecting to
a MySQL database. Find more information on MySQL CLI
<a class=""link"" href=""https://dev.mysql.com/doc/refman/8.0/en/mysql.html"">here</a>.</span>
<div><div><span>By default, MindsDB starts the <code>http</code> and <code>mysql</code> APIs. You can define which APIs to start using the <code>api</code> flag as below.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(5,80,174);""> --api</span><span style=""color: rgb(10,48,105);""> http,mysql,postgres</span></span>
</code></pre></div></div></div><span>If you want to start MindsDB without the graphical user interface (GUI), use the <code>--no_studio</code> flag as below.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(5,80,174);""> --no_studio</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<span>To connect MindsDB in MySQL, use the <code>mysql</code> client program:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">mysql</span><span style=""color: rgb(5,80,174);""> -h</span><span style=""color: rgb(31,35,40);""> [hostname] --port [TCP/IP port number] -u [user] -p [password]</span></span>
</code></pre></div></div></div>
<span>Here is the command that allows you to connect to MindsDB.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">mysql</span><span style=""color: rgb(5,80,174);""> -h</span><span style=""color: rgb(5,80,174);""> 127.0.0.1</span><span style=""color: rgb(5,80,174);""> --port</span><span style=""color: rgb(5,80,174);""> 47335</span><span style=""color: rgb(5,80,174);""> -u</span><span style=""color: rgb(10,48,105);""> mindsdb</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">Welcome</span><span style=""color: rgb(10,48,105);""> to</span><span style=""color: rgb(10,48,105);""> the</span><span style=""color: rgb(10,48,105);""> MariaDB</span><span style=""color: rgb(10,48,105);""> monitor.</span><span style=""color: rgb(10,48,105);"">  Commands</span><span style=""color: rgb(10,48,105);""> end</span><span style=""color: rgb(10,48,105);""> with</span><span style=""color: rgb(10,48,105);""> &quot;;&quot;</span><span style=""color: rgb(10,48,105);""> or</span><span style=""color: rgb(10,48,105);""> &quot;\g&quot;.</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">Server</span><span style=""color: rgb(10,48,105);""> version:</span><span style=""color: rgb(10,48,105);""> 5.7.1-MindsDB-1.0</span><span style=""color: rgb(31,35,40);""> (MindsDB)</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">Type</span><span style=""color: rgb(10,48,105);""> 'help;'</span><span style=""color: rgb(10,48,105);""> or</span><span style=""color: rgb(10,48,105);""> '\h'</span><span style=""color: rgb(10,48,105);""> for</span><span style=""color: rgb(10,48,105);""> help.</span><span style=""color: rgb(10,48,105);""> Type</span><span style=""color: rgb(10,48,105);""> '\c'</span><span style=""color: rgb(10,48,105);""> to</span><span style=""color: rgb(10,48,105);""> clear</span><span style=""color: rgb(10,48,105);""> the</span><span style=""color: rgb(10,48,105);""> current</span><span style=""color: rgb(10,48,105);""> input</span><span style=""color: rgb(10,48,105);""> statement.</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">MySQL</span><span style=""color: rgb(31,35,40);""> [(none)]</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <a class=""link"" href=""/use-cases/overview"">Use Cases</a> section, where you&rsquo;ll find various examples of regression, classification, time series, and NLP predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on <a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the remaining pages from the <strong>MindsDB SQL</strong> section, as they explain a common SQL syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1540353/MindsDB+and+MySQL+CLI+-+MindsDB","/pages/resumedraft.action?draftId=1540353","/x/AYEX"
"1540374","current","The LLM() Function - MindsDB","491527","491782","page","79306","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:03.261Z","2025-10-24T14:04:03.261Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides the <code>LLM()</code> function that lets users incorporate the LLM-generated output directly into the data queries.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>The <code>LLM()</code> function requires a large language model, which can be defined in the following ways:</span>
<ul>
<li>
<span>By setting the <code>default_llm</code> parameter in the <a class=""link"" href=""/setup/custom-config#default-llm"">MindsDB configuration file</a>.</span>
</li>
<li>
<span>By saving the default model in the MindsDB Editor under Settings.</span>
</li>
<li>
<span>By defining the environment variables as below, choosing one of the available model providers.</span>
<div><div class=""leading-tight text-left""><p>OpenAI</p></div><div><span>Here are the environment variables for the OpenAI provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>LLM_FUNCTION_MAX_RETRIES</span></span>
<span class=""line""><span>LLM_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>LLM_FUNCTION_BASE_URL</span></span>
<span class=""line""><span>OPENAI_API_KEY</span></span>
<span class=""line""><span>LLM_FUNCTION_API_ORGANIZATION</span></span>
<span class=""line""><span>LLM_FUNCTION_REQUEST_TIMEOUT</span></span>
</code></pre></div></div></div><span>Note that the values stored in the environment variables are specific for each provider.</span></div><div class=""leading-tight text-left""><p>Anthropic</p></div><div><span>Here are the environment variables for the Anthropic provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>LLM_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_P</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_K</span></span>
<span class=""line""><span>LLM_FUNCTION_DEFAULT_REQUEST_TIMEOUT</span></span>
<span class=""line""><span>LLM_FUNCTION_API_KEY</span></span>
<span class=""line""><span>LLM_FUNCTION_BASE_URL</span></span>
</code></pre></div></div></div><span>Note that the values stored in the environment variables are specific for each provider.</span></div><div class=""leading-tight text-left""><p>LiteLLM</p></div><div><span>Here are the environment variables for the LiteLLM provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>LLM_FUNCTION_API_BASE</span></span>
<span class=""line""><span>LLM_FUNCTION_MAX_RETRIES</span></span>
<span class=""line""><span>LLM_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_P</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_K</span></span>
</code></pre></div></div></div><span>Note that the values stored in the environment variables are specific for each provider.</span></div><div class=""leading-tight text-left""><p>Ollama</p></div><div><span>Here are the environment variables for the Ollama provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_BASE_URL</span></span>
<span class=""line""><span>LLM_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_P</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_K</span></span>
<span class=""line""><span>LLM_FUNCTION_REQUEST_TIMEOUT</span></span>
<span class=""line""><span>LLM_FUNCTION_FORMAT</span></span>
<span class=""line""><span>LLM_FUNCTION_HEADERS</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_PREDICT</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_CTX</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_GPU</span></span>
<span class=""line""><span>LLM_FUNCTION_REPEAT_PENALTY</span></span>
<span class=""line""><span>LLM_FUNCTION_STOP</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPLATE</span></span>
</code></pre></div></div></div><span>Note that the values stored in the environment variables are specific for each provider.</span></div><div class=""leading-tight text-left""><p>Nvidia NIMs</p></div><div><span>Here are the environment variables for the Nvidia NIMs provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_BASE_URL</span></span>
<span class=""line""><span>LLM_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>LLM_FUNCTION_TOP_P</span></span>
<span class=""line""><span>LLM_FUNCTION_REQUEST_TIMEOUT</span></span>
<span class=""line""><span>LLM_FUNCTION_FORMAT</span></span>
<span class=""line""><span>LLM_FUNCTION_HEADERS</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_PREDICT</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_CTX</span></span>
<span class=""line""><span>LLM_FUNCTION_NUM_GPU</span></span>
<span class=""line""><span>LLM_FUNCTION_REPEAT_PENALTY</span></span>
<span class=""line""><span>LLM_FUNCTION_STOP</span></span>
<span class=""line""><span>LLM_FUNCTION_TEMPLATE</span></span>
<span class=""line""><span>LLM_FUNCTION_NVIDIA_API_KEY</span></span>
</code></pre></div></div></div><span>Note that the values stored in the environment variables are specific for each provider.</span></div></div>
</li>
</ul>
<div><div><span><strong>OpenAI-compatible model providers</strong> can be used like OpenAI models.</span><span>There is a number of OpenAI-compatible model providers including OpenRouter or vLLM. To use models via these providers, users need to define the base URL and the API key of the provider.</span><span>Here is an example of using OpenRouter.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>LLM_FUNCTION_MODEL_NAME = &quot;mistralai/devstral-small-2505&quot;</span></span>
<span class=""line""><span>LLM_FUNCTION_BASE_URL = &quot;https://openrouter.ai/api/v1&quot;</span></span>
<span class=""line""><span>OPENAI_API_KEY = &quot;openrouter-api-key&quot;</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>You can use the <code>LLM()</code> function to simply ask a question and get an answer.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> LLM(</span><span style=""color: rgb(10,48,105);"">'How many planets are there in the solar system?'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| llm                                      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| There are </span><span style=""color: rgb(5,80,174);"">8</span><span style=""color: rgb(31,35,40);""> planets </span><span style=""color: rgb(207,34,46);"">in</span><span style=""color: rgb(31,35,40);""> the solar </span><span style=""color: rgb(207,34,46);"">system</span><span style=""color: rgb(31,35,40);"">. |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------------------------------+</span></span>
</code></pre></div></div></div>
<span>Moreover, you can use the <code>LLM()</code> function with your data to swiftly complete tasks such as text generation or summarization.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    comment,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    LLM(</span><span style=""color: rgb(10,48,105);"">'Describe the comment''s category in one word: '</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> comment) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> category</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">user_comments</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------------+----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| comment                  | category |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------------+----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| I hate tacos             | Dislike  |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| I want </span><span style=""color: rgb(207,34,46);"">to</span><span style=""color: rgb(31,35,40);""> dance          | Desire   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Baking </span><span style=""color: rgb(207,34,46);"">is</span><span style=""color: rgb(207,34,46);""> not</span><span style=""color: rgb(31,35,40);""> a big deal | Opinion  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------------+----------+</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540374/The+LLM+Function+-+MindsDB","/pages/resumedraft.action?draftId=1540374","/x/FoEX"
"1540395","current","Get Agent - MindsDB","491527","491782","page","104512","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:17.671Z","2025-10-24T14:06:17.671Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents/my_agent</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1540395/Get+Agent+-+MindsDB","/pages/resumedraft.action?draftId=1540395","/x/K4EX"
"1540414","current","Authentication - MindsDB","491527","491782","page","106320","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:28.459Z","2025-10-24T14:06:28.459Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides an optional authentication mechanism for its HTTP API. This includes setting up a username and a password for the MindsDB instance. Learn <a class=""link"" href=""/setup/custom-config#auth"">more here</a>.</span>
<span>If this authentication method is defined in the MindsDB configuration file, it is required to authenticate oneself when using the REST API endpoints of this MindsDB instance.</span>
<span><strong>Here is how to authenticate an HTTP session for calling MindsDB REST APIs.</strong></span>
<ol>
<li>
<span>Call the <code>login</code> endpoint with the username and password parameters.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>curl --request POST --url 'http://127.0.0.1:47334/api/login' \</span></span>
<span class=""line""><span>    --header 'Content-Type: application/json' \</span></span>
<span class=""line""><span>    --data-raw '{&quot;username&quot;:&quot;your-username&quot;,&quot;password&quot;:&quot;your-password&quot;}' -v</span></span>
</code></pre></div></div></div>
<span>This command returns an HTTP status code 200 if the request is successful, along with a token in the response body.</span>
</li>
<li>
<span>Call any other endpoint providing the token.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>curl --request GET \</span></span>
<span class=""line""><span>--url http://127.0.0.1:47334/api/projects/mindsdb/... \</span></span>
<span class=""line""><span>--header 'Content-Type: application/json' \</span></span>
<span class=""line""><span>--header 'Authorization: Bearer pat_your_mindsdb_token_here' \</span></span>
<span class=""line""><span>--data '{</span></span>
<span class=""line""><span>...</span></span>
<span class=""line""><span>}'</span></span>
</code></pre></div></div></div>
<span>For example, query an agent under the authenticated session:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>curl --request POST \</span></span>
<span class=""line""><span>--url http://127.0.0.1:47334/api/projects/mindsdb/agents/my_agent/completions/stream \</span></span>
<span class=""line""><span>--header 'Content-Type: application/json' \</span></span>
<span class=""line""><span>--header 'Authorization: Bearer pat_your_mindsdb_token_here' \</span></span>
<span class=""line""><span>--data '{</span></span>
<span class=""line""><span>&quot;messages&quot;: [</span></span>
<span class=""line""><span>    {</span></span>
<span class=""line""><span>    &quot;question&quot;: &quot;What is MindsDB?&quot;,</span></span>
<span class=""line""><span>    &quot;answer&quot;: &quot;&quot;</span></span>
<span class=""line""><span>    }</span></span>
<span class=""line""><span>]</span></span>
<span class=""line""><span>}'</span></span>
</code></pre></div></div></div>
</li>
</ol></div>","/spaces/SOP/pages/1540414/Authentication+-+MindsDB","/pages/resumedraft.action?draftId=1540414","/x/PoEX"
"1540433","current","List Jobs - MindsDB","491527","491782","page","109578","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:08.260Z","2025-10-24T14:11:04.936Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>list_jobs()</code> function is executed on a project and lists all jobs available in this project.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>list_jobs()</code> method to list all jobs in a project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.list_jobs()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1540433/List+Jobs+-+MindsDB","/pages/resumedraft.action?draftId=1540433","/x/UYEX"
"1540452","current","REST API - MindsDB","491527","491782","page","112067","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:28.736Z","2025-10-24T14:07:28.736Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides REST API endpoints, enabling incorporation of AI building blocks into applications.</span>
<span>This section introduces REST API endpoints provided by MindsDB to bring data and AI together.</span>
<span>Follow these steps to get started:</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Set up the development environment</p><div><span>Learn more about <a class=""link"" href=""/rest/usage"">usage here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Connect a data source</p><div><span>Connect your data source to MindsDB via <a class=""link"" href=""/rest/databases/create-databases"">this endpoint</a>.<br />
Explore all available <a class=""link"" href=""/integrations/data-overview"">data sources here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Create and deploy an AI/ML model</p><div><span>Create, train, and deploy AI/ML models within MindsDB via <a class=""link"" href=""/rest/models/train-model"">this endpoint</a>.<br />
Explore all available <a class=""link"" href=""/integrations/ai-overview"">AI engines here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>4</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Get predictions</p><div><span>Query for predictions via <a class=""link"" href=""/rest/models/query-model"">this endpoint</a>.</span></div></div></div></div></div>","/spaces/SOP/pages/1540452/REST+API+-+MindsDB","/pages/resumedraft.action?draftId=1540452","/x/ZIEX"
"1540471","current","Get a Table - MindsDB","491527","491782","page","113349","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:49.631Z","2025-10-24T14:07:49.631Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>SELECT from Table</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/databases/{databaseName}/tables/{tableName}</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1540471/Get+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=1540471","/x/d4EX"
"1572895","current","Microsoft One Drive - MindsDB","491527","491782","page","24050","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:29.830Z","2025-10-24T14:00:29.830Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.microsoft.com/en-us/microsoft-365/onedrive/online-cloud-storage"">Microsoft OneDrive</a>, a cloud storage service that lets you back up, access, edit, share, and sync your files from any device.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<ol>
<li>Before proceeding, ensure that MindsDB is installed locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>Register an application in the <a class=""link"" href=""https://portal.azure.com/"">Azure portal</a>.
<ul>
<li>Navigate to the <a class=""link"" href=""https://portal.azure.com/#home"">Azure Portal</a> and sign in with your Microsoft account.</li>
<li>Locate the <strong>Microsoft Entra ID</strong> service and click on it.</li>
<li>Click on <strong>App registrations</strong> and then click on <strong>New registration</strong>.</li>
<li>Enter a name for your application and select the <code>Accounts in this organizational directory only</code> option for the <strong>Supported account types</strong> field.</li>
<li>Keep the <strong>Redirect URI</strong> field empty and click on <strong>Register</strong>.</li>
<li>Click on <strong>API permissions</strong> and then click on <strong>Add a permission</strong>.</li>
<li>Select <strong>Microsoft Graph</strong> and then click on <strong>Delegated permissions</strong>.</li>
<li>Search for the <code>Files.Read</code> permission and select it.</li>
<li>Click on <strong>Add permissions</strong>.</li>
<li>Request an administrator to grant consent for the above permissions. If you are the administrator, click on <strong>Grant admin consent for [your organization]</strong> and then click on <strong>Yes</strong>.</li>
<li>Copy the <strong>Application (client) ID</strong> and record it as the <code>client_id</code> parameter, and copy the <strong>Directory (tenant) ID</strong> and record it as the <code>tenant_id</code> parameter.</li>
<li>Click on <strong>Certificates &amp; secrets</strong> and then click on <strong>New client secret</strong>.</li>
<li>Enter a description for your client secret and select an expiration period.</li>
<li>Click on <strong>Add</strong> and copy the generated client secret and record it as the <code>client_secret</code> parameter.</li>
<li>Click on <strong>Authentication</strong> and then click on <strong>Add a platform</strong>.</li>
<li>Select <strong>Web</strong> and enter URL where MindsDB has been deployed followed by <code>/verify-auth</code> in the <strong>Redirect URIs</strong> field. For example, if you are running MindsDB locally (on <code>https://localhost:47334</code>), enter <code>https://localhost:47334/verify-auth</code> in the <strong>Redirect URIs</strong> field.</li>
</ul>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Microsoft OneDrive from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> one_drive_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'one_drive'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;12345678-90ab-cdef-1234-567890abcdef&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;client_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;abcd1234efgh5678ijkl9012mnop3456qrst7890uvwx&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;tenant_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;abcdef12-3456-7890-abcd-ef1234567890&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<div><div><span>Note that sample parameter values are provided here for reference, and you should replace them with your connection parameters.</span></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>client_id</code>: The client ID of the registered application.</li>
<li><code>client_secret</code>: The client secret of the registered application.</li>
<li><code>tenant_id</code>: The tenant ID of the registered application.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified file in Microsoft OneDrive by providing the integration name and the file name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> one_drive_datasource.</span><span style=""color: rgb(10,48,105);"">`my-file.csv`</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Wrap the object key in backticks (`) to avoid any issues parsing the SQL statements provided. This is especially important when the file name contains spaces, special characters or prefixes, such as <code>my-folder/my-file.csv</code>.</span><span>At the moment, the supported file formats are CSV, TSV, JSON, and Parquet.</span></div></div>
<div><div><span>The above examples utilize <code>one_drive_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<span>The special <code>files</code> table can be used to list the files available in Microsoft OneDrive:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> one_drive_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>
</code></pre></div></div></div>
<span>The content of files can also be retrieved by explicitly requesting the <code>content</code> column. This column is empty by default to avoid unnecessary data transfer:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> path</span><span style=""color: rgb(31,35,40);"">, content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> one_drive_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>
</code></pre></div></div></div>
<div><div><span>This table will return all objects regardless of the file format, however, only the supported file formats mentioned above can be queried.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with Microsoft OneDrive.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure the <code>client_id</code>, <code>client_secret</code> and <code>tenant_id</code> parameters are correctly provided.</li>
<li>Ensure the registered application has the required permissions.</li>
<li>Ensure the generated client secret is not expired.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing object names containing spaces, special characters or prefixes.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure object names with spaces, special characters or prefixes are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel/travel_data.csv</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel/travel_data.csv&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel/travel_data.csv`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1572895/Microsoft+One+Drive+-+MindsDB","/pages/resumedraft.action?draftId=1572895","/x/HwAY"
"1572919","current","Cloud Spanner - MindsDB","491527","491782","page","39811","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:25.639Z","2025-10-24T14:01:25.639Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Cloud Spanner data handler for MindsDB.</span>
<span><a class=""link"" href=""https://cloud.google.com/spanner"">Cloud Spanner</a> is a fully managed, mission-critical, relational database service that offers transactional consistency at global scale, automatic, synchronous replication for high availability. It supports two SQL dialects: GoogleSQL (ANSI 2011 with extensions) and PostgreSQL.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Cloud Spanner to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Cloud Spanner.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented using the <code>google-cloud-spanner</code> Python client library.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>instance_id</code> is the instance identifier.</li>
<li><code>database_id</code> is the database identifier.</li>
<li><code>project</code> is the identifier of the project that owns the resources.</li>
<li><code>credentials</code> is a stringified GCP service account key JSON.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Cloud Spanner database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> cloud_spanner_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'cloud_spanner'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;instance_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;my-instance&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;database_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example-id&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;project&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;my-project&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;credentials&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;{...}&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> cloud_spanner_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Cloud Spanner supports both PostgreSQL and GoogleSQL dialects. However, not all PostgresSQL features are supported.</span></div></div></div>","/spaces/SOP/pages/1572919/Cloud+Spanner+-+MindsDB","/pages/resumedraft.action?draftId=1572919","/x/NwAY"
"1572940","current","MySQL - MindsDB","491527","491782","page","52058","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:06.237Z","2025-10-24T14:02:06.237Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.mysql.com/"">MySQL</a>, a fast, reliable, and scalable open-source database.
The integration allows MindsDB to access data from MySQL and enhance MySQL with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect MySQL to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to MySQL from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mysql_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mysql_conn</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mysql'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;host-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;db-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Or:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mysql_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mysql'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mysql://user-name@host-name:3306&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>user</code>: The username for the MySQL database.</li>
<li><code>password</code>: The password for the MySQL database.</li>
<li><code>host</code>: The hostname, IP address, or URL of the MySQL server.</li>
<li><code>port</code>: The port number for connecting to the MySQL server.</li>
<li><code>database</code>: The name of the MySQL database to connect to.</li>
</ul>
<span>Or:</span>
<ul>
<li><code>url</code>: You can specify a connection to MySQL Server using a URI-like string, as an alternative connection option.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>ssl</code>: Boolean parameter that indicates whether SSL encryption is enabled for the connection. Set to True to enable SSL and enhance connection security, or set to False to use the default non-encrypted connection.</li>
<li><code>ssl_ca</code>:  Specifies the path to the Certificate Authority (CA) file in PEM format.</li>
<li><code>ssl_cert</code>:  Specifies the path to the SSL certificate file. This certificate should be signed by a trusted CA specified in the <code>ssl_ca</code> file or be a self-signed certificate trusted by the server.</li>
<li><code>ssl_key</code>: Specifies the path to the private key file (in PEM format).</li>
<li><code>use_pure</code> (<code>True</code> by default): Whether to use pure Python or C Extension. If <code>use_pure=False</code> and the C Extension is not available, then Connector/Python will automatically fall back to the pure Python implementation.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The following usage examples utilize the connection to MySQL made via the <code>CREATE DATABASE</code> statement and named <code>mysql_conn</code>.</span>
<span>Retrieve data from a specified table by providing the integration and table name.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mysql_conn</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span><strong>Next Steps</strong></span><span>Follow <a class=""link"" href=""https://docs.mindsdb.com/use-cases/data_enrichment/text-summarization-inside-mysql-with-openai"">this tutorial</a> to see more use case examples.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the MySQL database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure that the MySQL server is running and accessible</li>
<li>Confirm that host, port, user, and password are correct. Try a direct MySQL connection.</li>
<li>Test the network connection between the MindsDB host and the MySQL server.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces, reserved words or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1572940/MySQL+-+MindsDB","/pages/resumedraft.action?draftId=1572940","/x/TAAY"
"1572969","current","StarRocks - MindsDB","491527","491782","page","59292","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:29.005Z","2025-10-24T14:02:29.005Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the StarRocks data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.starrocks.io/"">StarRocks</a> is the next-generation data platform designed to make data-intensive real-time analytics fast and easy. It delivers query speeds 5 to 10 times faster than other popular solutions. StarRocks can perform real-time analytics well while updating historical records. It can also enhance real-time analytics with historical data from data lakes easily. With StarRocks, you can get rid of the de-normalized tables and get the best performance and flexibility.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect StarRocks to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to StarRocks.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the StarRocks server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> starrocks_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'starrocks'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;starrocks_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">8030</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;starrocks_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> starrocks_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1572969/StarRocks+-+MindsDB","/pages/resumedraft.action?draftId=1572969","/x/aQAY"
"1572990","current","Upload JSON files to MindsDB - MindsDB","491527","491782","page","66214","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:51.739Z","2025-10-24T14:02:51.739Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can upload JSON files of any size to MindsDB that runs locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/contribute/install"">pip</a>.</span>
<span>JSON files are converted into a table, if the JSON file structure allows for it. Otherwise, JSON files are stored similarly to text files.</span>
<div class=""leading-tight text-left""><p>Sample format of a JSON file</p></div><div><span>Here is the sample format of a JSON file that can be uploaded to MindsDB:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>[</span></span>
<span class=""line""><span>    {</span></span>
<span class=""line""><span>        &quot;id&quot;: 1,</span></span>
<span class=""line""><span>        &quot;name&quot;: &quot;Alice&quot;,</span></span>
<span class=""line""><span>        &quot;contact&quot;: {</span></span>
<span class=""line""><span>            &quot;email&quot;: &quot;alice@example.com&quot;,</span></span>
<span class=""line""><span>            &quot;phone&quot;: &quot;123-456-7890&quot;</span></span>
<span class=""line""><span>        },</span></span>
<span class=""line""><span>        &quot;address&quot;: {</span></span>
<span class=""line""><span>            &quot;street&quot;: &quot;123 Maple Street&quot;,</span></span>
<span class=""line""><span>            &quot;city&quot;: &quot;Wonderland&quot;,</span></span>
<span class=""line""><span>            &quot;zip&quot;: &quot;12345&quot;</span></span>
<span class=""line""><span>        }</span></span>
<span class=""line""><span>    },</span></span>
<span class=""line""><span>    {</span></span>
<span class=""line""><span>        &quot;id&quot;: 2,</span></span>
<span class=""line""><span>        &quot;name&quot;: &quot;Bob&quot;,</span></span>
<span class=""line""><span>        &quot;contact&quot;: {</span></span>
<span class=""line""><span>            &quot;email&quot;: &quot;bob@example.com&quot;,</span></span>
<span class=""line""><span>            &quot;phone&quot;: &quot;987-654-3210&quot;</span></span>
<span class=""line""><span>        },</span></span>
<span class=""line""><span>        &quot;address&quot;: {</span></span>
<span class=""line""><span>            &quot;street&quot;: &quot;456 Oak Avenue&quot;,</span></span>
<span class=""line""><span>            &quot;city&quot;: &quot;Builderland&quot;,</span></span>
<span class=""line""><span>            &quot;zip&quot;: &quot;67890&quot;</span></span>
<span class=""line""><span>        }</span></span>
<span class=""line""><span>    }</span></span>
<span class=""line""><span>]</span></span>
</code></pre></div></div></div><span>MindsDB converts it into a table where each row stores the high-level object.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">| id  | </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">  | contact                                              | </span><span style=""color: rgb(207,34,46);"">address</span><span style=""color: rgb(31,35,40);"">                                                         |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(110,119,129);"">--- | ----- | ---------------------------------------------------- | --------------------------------------------------------------- |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">   | Alice | {</span><span style=""color: rgb(10,48,105);"">&quot;email&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;alice@example.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;phone&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;123-456-7890&quot;</span><span style=""color: rgb(31,35,40);"">} | {</span><span style=""color: rgb(10,48,105);"">&quot;city&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Wonderland&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;street&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;123 Maple Street&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;zip&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;12345&quot;</span><span style=""color: rgb(31,35,40);"">} |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">   | Bob   | {</span><span style=""color: rgb(10,48,105);"">&quot;email&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;bob@example.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;phone&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;987-654-3210&quot;</span><span style=""color: rgb(31,35,40);"">}   | {</span><span style=""color: rgb(10,48,105);"">&quot;city&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;Builderland&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;street&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;456 Oak Avenue&quot;</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">&quot;zip&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;67890&quot;</span><span style=""color: rgb(31,35,40);"">}  |</span></span>
</code></pre></div></div></div><span>You can extract the JSON fields from <code>contact</code> and <code>address</code> columns with the <code>json_extract</code> function.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">       name</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       json_extract(contact, </span><span style=""color: rgb(10,48,105);"">'$.email'</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> email, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       json_extract(</span><span style=""color: rgb(207,34,46);"">address</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'$.city'</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> city</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">json_file_name</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload files</span></h2>
<span>Follow the steps below to upload a file:</span>
<ol>
<li>Click on the <code>Add</code> dropdown and choose <code>Upload file</code>.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""666"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0a25773f735c4f147425651de94caca4"" style="""" width=""1042"" /></span></span></p>
<ol start=""2"">
<li>Upload a file and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""834"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_computer.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=bd588de4dd6fa52b36eec2761e3242b3"" style="""" width=""868"" /></span></span></p>
<ol start=""3"">
<li>Alternatively, upload a file as a link and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""804"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_url.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=3d2919867ba34c821c8a153a9ece4efe"" style="""" width=""886"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-files"">‚Äã</a></div><span class=""cursor-pointer"">Query files</span></h2>
<span>Here is how to query data within MindsDB.</span>
<span>Query for the content of the file uploaded under the name <code>my_file</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1572990/Upload+JSON+files+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1572990","/x/fgAY"
"1573007","current","Naming Standards for MindsDB Objects - MindsDB","491527","491782","page","70278","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:21.850Z","2025-10-24T14:03:21.850Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB allows you to create and manage a variety of entities within its ecosystem. All MindsDB objects follow the same naming conventions to ensure consistency and compatibility across the platform.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-entities"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Entities</span></h2>
<span>The following entities can be created in MindsDB:</span>
<ul>
<li>
<span>Databases &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/database"">CREATE DATABASE</a></span>
</li>
<li>
<span>Knowledge Bases (KBs) &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/knowledge_bases/create"">CREATE KNOWLEDGE_BASE</a></span>
</li>
<li>
<span>Tables &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/table"">CREATE TABLE</a></span>
</li>
<li>
<span>Views &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/view"">CREATE VIEW</a></span>
</li>
<li>
<span>Projects &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/project"">CREATE PROJECT</a></span>
</li>
<li>
<span>Jobs &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/jobs"">CREATE JOB</a></span>
</li>
<li>
<span>Triggers &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/sql/create/trigger"">CREATE TRIGGER</a></span>
</li>
<li>
<span>Agents &rarr; <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/agents/agent_syntax"">CREATE AGENT</a></span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#general-naming-rules"">‚Äã</a></div><span class=""cursor-pointer"">General Naming Rules</span></h2>
<span>When creating these entities, the following conventions apply:</span>
<ul>
<li>
<span><strong>Case-insensitive names</strong></span>
<span>Object names are not sensitive to letter casing. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> my_view</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my_view&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> My_View</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- also creates &quot;my_view&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> MY_VIEW</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- also creates &quot;my_view&quot;</span></span>
</code></pre></div></div></div>
<span>All names are automatically converted to lowercase.</span>
</li>
<li>
<span><strong>Allowed characters</strong></span>
<span>Lowercase letters (<code>a&ndash;z</code>)
Numbers (<code>0&ndash;9</code>)
Underscores (<code>_</code>)</span>
<span>Example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT my_agent345 (...);   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my_agent345&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span><strong>Special characters</strong></span>
<span>If you need special characters or spaces in object names, enclose them in backticks.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> VIEW </span><span style=""color: rgb(10,48,105);"">`my view`</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- creates &ldquo;my view&rdquo;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> VIEW </span><span style=""color: rgb(10,48,105);"">`my-view!`</span><span style=""color: rgb(31,35,40);""> (...);  </span><span style=""color: rgb(110,119,129);"">-- creates &ldquo;my-view!&rdquo;</span></span>
</code></pre></div></div></div>
<span>However, names inside backticks must be lowercase. Using uppercase letters will result in an error because all object names must be in lowercase letters.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> VIEW </span><span style=""color: rgb(10,48,105);"">`My View`</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- error</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div><div><span>When working with entities from a data source connected to MindsDB, their original names are preserved and are not subject to MindsDB naming rules.</span><span>For example, if you connect a Snowflake data source that contains a table named <code>ANALYTICS_101</code> with a column named <code>Date_Time</code>, you must reference them exactly as they appear in the source, utilizing backticks, as shown below:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(10,48,105);""> `Date_Time`</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> snowflake_data.</span><span style=""color: rgb(10,48,105);"">`ANALYTICS_101`</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#backward-compatibility"">‚Äã</a></div><span class=""cursor-pointer"">Backward Compatibility</span></h2>
<span>Older objects created with uppercase letters are still supported for backward compatibility. To reference them, wrap the name in backticks.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `MyView`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- selects from &ldquo;MyView&rdquo;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(10,48,105);""> `MyView`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- deletes &ldquo;MyView&rdquo;</span></span>
</code></pre></div></div></div>
<span>You cannot create new objects with uppercase letters. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(31,35,40);""> `</span><span style=""color: rgb(130,80,223);"">MyView</span><span style=""color: rgb(31,35,40);"">` (...);   </span><span style=""color: rgb(110,119,129);"">-- error</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#examples"">‚Äã</a></div><span class=""cursor-pointer"">Examples</span></h2>
<span>Here are some practical examples:</span>
<ul>
<li>Views</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> my_view</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my_view&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> My_View</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- also creates &quot;my_view&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> VIEW </span><span style=""color: rgb(10,48,105);"">`my view`</span><span style=""color: rgb(31,35,40);""> (...);   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my view&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(31,35,40);""> `</span><span style=""color: rgb(130,80,223);"">My_View</span><span style=""color: rgb(31,35,40);"">` (...);   </span><span style=""color: rgb(110,119,129);"">-- error</span></span>
</code></pre></div></div></div>
<span>If an older object named <code>My_View</code> exists, you can still use it:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `My_View`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- selects from &ldquo;My_View&rdquo;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(10,48,105);""> `My_View`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- deletes &ldquo;My_View&rdquo;</span></span>
</code></pre></div></div></div>
<ul>
<li>Databases</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_database</span><span style=""color: rgb(207,34,46);""> WITH</span><span style=""color: rgb(31,35,40);""> &hellip;;   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my_database&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> MY_DATABASE</span><span style=""color: rgb(207,34,46);""> WITH</span><span style=""color: rgb(31,35,40);""> &hellip;;   </span><span style=""color: rgb(110,119,129);"">-- also creates &quot;my_database&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(10,48,105);""> `my-database`</span><span style=""color: rgb(207,34,46);""> WITH</span><span style=""color: rgb(31,35,40);""> &hellip;;   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my-database&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(31,35,40);""> `</span><span style=""color: rgb(130,80,223);"">MY_DATABASE</span><span style=""color: rgb(31,35,40);"">` </span><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> &hellip;;   </span><span style=""color: rgb(110,119,129);"">-- error</span></span>
</code></pre></div></div></div>
<span>If an older object named <code>MY_DATABASE</code> exists, you can still use it:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `MY_DATABASE`</span><span style=""color: rgb(31,35,40);"">.table_name;   </span><span style=""color: rgb(110,119,129);"">-- selects from &ldquo;MY_DATABASE&rdquo;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(10,48,105);""> `MY_DATABASE`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- deletes &ldquo;MY_DATABASE&rdquo;</span></span>
</code></pre></div></div></div>
<ul>
<li>Agents</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT my_agent </span><span style=""color: rgb(207,34,46);"">USING</span><span style=""color: rgb(31,35,40);""> ...;   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my_agent&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT My_Agent </span><span style=""color: rgb(207,34,46);"">USING</span><span style=""color: rgb(31,35,40);""> ...;   </span><span style=""color: rgb(110,119,129);"">-- also creates &quot;my_agent&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT </span><span style=""color: rgb(10,48,105);"">`my agent 1`</span><span style=""color: rgb(207,34,46);""> USING</span><span style=""color: rgb(31,35,40);""> ...;   </span><span style=""color: rgb(110,119,129);"">-- creates &quot;my agent 1&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT </span><span style=""color: rgb(10,48,105);"">`My agent 1`</span><span style=""color: rgb(207,34,46);""> USING</span><span style=""color: rgb(31,35,40);""> ...;   </span><span style=""color: rgb(110,119,129);"">-- error</span></span>
</code></pre></div></div></div>
<span>If an older object named <code>My agent 1</code> exists, you can still use it:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(10,48,105);""> `My agent 1`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- selects from &ldquo;My agent 1&rdquo;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> AGENT </span><span style=""color: rgb(10,48,105);"">`My agent 1`</span><span style=""color: rgb(31,35,40);"">;   </span><span style=""color: rgb(110,119,129);"">-- deletes &ldquo;My agent 1&rdquo;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1573007/Naming+Standards+for+MindsDB+Objects+-+MindsDB","/pages/resumedraft.action?draftId=1573007","/x/jwAY"
"1573042","current","MindsDB and Jupyter Notebooks - MindsDB","491527","491782","page","74070","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:43.920Z","2025-10-24T14:03:43.920Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Jupysql - full SQL client on Jupyter. It allows you to run SQL and plot large
datasets in Jupyter via a %sql and %%sql magics. It also allows users to plot
the data directly from the DB ( via %sqlplot magics).</span>
<span>Jupysql facilitates working with databases and Jupyter. You can download it
<a class=""link"" href=""https://github.com/ploomber/jupysql"">here</a> or run a <code>pip install jupysql</code>.</span>
<div><div><span>You can consider an option to interact with MindsDB directly from <a class=""link"" href=""/connect/mysql-client"">MySQL CLI</a> or <a class=""link"" href=""/connect/postgres-client"">Postgres CLI</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#pre-requisite%3A"">‚Äã</a></div><span class=""cursor-pointer"">Pre-requisite:</span></h4>
<ul>
<li>Make sure you have <em>jupysql</em> installed: To install it, run <code>pip install jupysql</code></li>
<li>Make sure you have <em>pymysql</em> installed: To install it, run <code>pip install pymysql</code></li>
</ul>
<div><div><span>You can easily verify the installation of jupysql by running this code:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">%</span><span style=""color: rgb(31,35,40);"">load_ext sql</span></span>
</code></pre></div></div></div><span>This command loads the package and allows you to run cell magics on top of Jupyter.</span><span>And for pymysql, validate by running this command:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> pymysql</span></span>
</code></pre></div></div></div></div></div>
<span>Please follow the instructions below to connect to your MindsDB via Jupysql and Jupyter.</span>
<div class=""tabs tabs tab-container""><ul><li class=""cursor-pointer""><div> Local MindsDB</div></li></ul><div><span>You can use the Python code below to connect your Jupyter notebook (or lab) to Local MindsDB database (via Jupysql).
Load the extension:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">%</span><span style=""color: rgb(31,35,40);"">load_ext sql</span></span>
</code></pre></div></div></div><span>Connect to your DB:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">%</span><span style=""color: rgb(31,35,40);"">sql mysql</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(31,35,40);"">pymysql:</span><span style=""color: rgb(207,34,46);"">//</span><span style=""color: rgb(31,35,40);"">mindsdb:</span><span style=""color: rgb(207,34,46);"">@</span><span style=""color: rgb(5,80,174);"">127.0</span><span style=""color: rgb(31,35,40);"">.0.1:</span><span style=""color: rgb(5,80,174);"">47335</span><span style=""color: rgb(207,34,46);"">/</span><span style=""color: rgb(31,35,40);"">mindsdb</span></span>
</code></pre></div></div></div><span>Testing connection by listing the existing tables (pure SQL):</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">%</span><span style=""color: rgb(31,35,40);"">sql show tables</span></span>
</code></pre></div></div></div><span>Please note that we use the following connection details:</span><ul>
<li>Username is <code>mindsdb</code></li>
<li>Password is left empty</li>
<li>Host is <code>127.0.0.1</code></li>
<li>Port is <code>47335</code></li>
<li>Database name is <code>mindsdb</code></li>
</ul><span><em>Docker</em> - connecting to docker might have a different port.</span></div></div>
<span>Create a database connection and execute the code above. On success, only the last command which lists the tables will output. The expected output is:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);"">  mysql+pymysql://mindsdb:</span><span style=""color: rgb(207,34,46);"">***</span><span style=""color: rgb(31,35,40);"">@127.0.0.1:47335/mindsdb</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">2</span><span style=""color: rgb(10,48,105);""> rows</span><span style=""color: rgb(10,48,105);""> affected.</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">Tables_in_mindsdb</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">models</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1573042/MindsDB+and+Jupyter+Notebooks+-+MindsDB","/pages/resumedraft.action?draftId=1573042","/x/sgAY"
"1573061","current","Alter a View - MindsDB","491527","491782","page","85797","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:34.533Z","2025-10-24T14:04:34.533Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>ALTER VIEW</code> statement updates the query assigned to a view created with the <a class=""link"" href=""/mindsdb_sql/sql/create/view""><code>CREATE VIEW</code> command</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">ALTER</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(31,35,40);""> view_name [AS] (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> integration_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">--or</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">ALTER</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> integration_name (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> table_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1573061/Alter+a+View+-+MindsDB","/pages/resumedraft.action?draftId=1573061","/x/xQAY"
"1573080","current","Delete Knowledge Base - MindsDB","491527","491782","page","110618","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:14.217Z","2025-10-24T14:07:14.217Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> DELETE</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/knowledge_bases/my_kb</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1573080/Delete+Knowledge+Base+-+MindsDB","/pages/resumedraft.action?draftId=1573080","/x/2AAY"
"1605664","current","Google Analytics - MindsDB","491527","491782","page","21555","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:13.696Z","2025-10-24T14:00:13.696Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Google Analytics to MindsDB.</span>
<span><a class=""link"" href=""https://analytics.google.com/"">Google Analytics</a> is a web analytics service offered by Google that tracks and reports website traffic and also the mobile app traffic &amp; events.</span>
<span>Data from Google Analytics can be utilized within MindsDB to train AI models, make predictions, and automate user engagement and events with AI.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Google Analytics to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Google Analytics.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>credentials_file</code> optional, is a path to the JSON file that stores credentials to the Google account.</li>
<li><code>credentials_json</code>: optional, is the content of the JSON file that stores credentials to the Google account.</li>
<li><code>property_id</code> required, is the property id of your Google Analytics website. <a class=""link"" href=""https://developers.google.com/analytics/devguides/reporting/data/v1/property-id"">Here</a> is some information on how to get the property id.</li>
</ul>
<blockquote>
<span>‚ö†Ô∏è One of credentials_file or credentials_json has to be chosen.</span>
</blockquote>
<div><div><span>Please note that a Google account with enabled Google Analytics Admin API is required. You can find more information <a class=""link"" href=""https://developers.google.com/analytics/devguides/config/admin/v1/quickstart-client-libraries"">here</a>.<br />
Also an active website connected with Google Analytics is required. You can find more information <a class=""link"" href=""https://support.google.com/analytics/answer/9304153?hl=en"">here</a>.</span></div></div>
<span>To make use of this handler and connect the Google Analytics app to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_ga</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'google_analytics'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'credentials_file'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'\path-to-your-file\credentials.json'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'property_id'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'&lt;YOUR_PROPERTY_ID&gt;'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<div><div><span>You need a Google account in order to use this integration. Here is how to get the credentials file:</span><ol>
<li>
<span>Create a Google Cloud Platform (GCP) Project:</span>
<span>1.1 Go to the GCP Console (<a class=""link"" href=""https://console.cloud.google.com/"">https://console.cloud.google.com/</a>).</span>
<span>1.2 If you haven&rsquo;t created a project before, you&rsquo;ll be prompted to do so now.</span>
<span>1.3 Give your new project a name.</span>
<span>1.4 Click <code>Create</code> to create the new project.</span>
</li>
<li>
<span>Enable the Google Analytics Admin API:</span>
<span>2.1 In the GCP Console, select your project.</span>
<span>2.2 Navigate to <code>APIs &amp; Services</code> &gt; <code>Library</code>.</span>
<span>2.3 In the search bar, search for <code>Google Analytics Admin API</code>.</span>
<span>2.4 Click on <code>Google Analytics Admin API</code>, then click <code>Enable</code>.</span>
</li>
<li>
<span>Create credentials for the  Google Analytics Admin API :</span>
<span>3.1 Navigate to <code>APIs &amp; Services</code> &gt; <code>Credentials</code>.</span>
<span>3.2 Click on the <code>Create Credentials</code> button and choose <code>Service account</code>.</span>
<span>3.3 Enter a unique <code>Service account ID</code> .</span>
<span>3.4 Click <code>Done</code>.</span>
<span>3.5 Copy the service account you created. Find it under <code>Service Accounts</code>.</span>
<span>3.6 Now click on the service account you created, and navigate <code>KEYS</code></span>
<span>3.7 Click <code>ADD KEY</code> &gt; <code>Create new key</code>.</span>
<span>3.8 Choose <code>JSON</code> then click <code>CREATE</code></span>
<span>3.9 After this the credentials file will be downloaded directly. Locate the file and use the location to it in the <code>credentials_file</code> param.</span>
</li>
<li>
<span>Add Service account to Google Analytics Property:</span>
<span>4.1 In the Google Analytics Admin Console, select the Account or Property to which you want to grant access.</span>
<span>4.2 Navigate to the <code>Admin</code> panel.</span>
<span>4.3 Navigate <code>Account</code> &gt; <code>Account Access Management</code>.</span>
<span>4.4 Click on the &rdquo;+&rdquo; icon to add a new user.</span>
<span>4.5 Enter the service account you copied in step 3.5 as the email address.</span>
<span>4.6 Assign the appropriate permissions to the service account. At a minimum, you&rsquo;ll need to grant it <code>Edit</code> permissions.</span>
<span>4.7 Click on the <code>Add</code> button to add the service account as a user with the specified permissions.</span>
</li>
</ol></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>This creates a database that comes with the <code>conversion_events</code> table.</span>
<span>Now you can use your Google Analytics data like this:</span>
<ul>
<li>
<span>searching for conversion events:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> event_name, custom, countingMethod</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_ga</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversion_events</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>creating conversion event:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_ga</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversion_events</span><span style=""color: rgb(31,35,40);""> (event_name, countingMethod)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'mindsdb_event'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>updating one conversion event:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(5,80,174);""> my_ga</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversion_events</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> countingMethod </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '&lt;mindsdb_event_name&gt;'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>deleting one conversion event:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_ga</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversion_events</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '&lt;mindsdb_event_name&gt;'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/google_analytics_handler"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1605664/Google+Analytics+-+MindsDB","/pages/resumedraft.action?draftId=1605664","/x/IIAY"
"1605695","current","Reddit - MindsDB","491527","491782","page","27229","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:42.162Z","2025-10-24T14:00:42.162Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Reddit to MindsDB.</span>
<span><a class=""link"" href=""https://www.reddit.com/"">Reddit</a> is a social media platform and online community where registered users can engage in discussions, share content, and participate in various communities called subreddits.</span>
<span>Data from Reddit can be utilized within MindsDB to train AI models and chatbots.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Reddit to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Reddit.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <a class=""link"" href=""https://praw.readthedocs.io/en/latest/"">PRAW (Python Reddit API Wrapper)</a> library, which is a Python package that provides a simple and easy-to-use interface to access the Reddit API.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>client_id</code> is a Reddit API client ID.</li>
<li><code>client_secret</code> is a Reddit API client secret.</li>
<li><code>user_agent</code> is a user agent string to identify your application.</li>
</ul>
<div><div><span>Here is how to get your Reddit credentials:</span><ol>
<li>Go to Reddit App Preferences at <a class=""link"" href=""https://www.reddit.com/prefs/apps"">https://www.reddit.com/prefs/apps</a> or <a class=""link"" href=""https://old.reddit.com/prefs/apps/"">https://old.reddit.com/prefs/apps/</a></li>
<li>Scroll down to the bottom of the page and click <em>Create another app&hellip;</em></li>
<li>Fill out the form with the name, description, and redirect URL for your app, then click <em>Create app</em></li>
<li>Now you should be able to see the personal user script, secret, and name of your app. Store those as environment variables: <code>CLIENT_ID</code>, <code>CLIENT_SECRET</code>, and <code>USER_AGENT</code>, respectively.</li>
</ol></div></div>
<span>In order to make use of this handler and connect the Reddit app to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_reddit</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'reddit'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">     &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_CLIENT_ID&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">     &quot;client_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_CLIENT_SECRET&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">     &quot;user_agent&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_USER_AGENT&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>It creates a database that comes with two tables: <code>submission</code> and <code>comment</code>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now you can fetch data from Reddit, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_reddit</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">submission</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> subreddit </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MachineLearning'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> sort_type </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'top'</span><span style=""color: rgb(110,119,129);"">                   -- specifies the sorting type for the subreddit (possible values include 'hot', 'new', 'top', 'controversial', 'gilded', 'wiki', 'mod', 'rising')</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> items </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;                          </span><span style=""color: rgb(110,119,129);"">-- specifies the number of items to fetch from the subreddit</span></span>
</code></pre></div></div></div>
<span>You can also fetch comments for a particular post/submission, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_reddit</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comment</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> submission_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '12gls93'</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/reddit_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1605695/Reddit+-+MindsDB","/pages/resumedraft.action?draftId=1605695","/x/P4AY"
"1605724","current","Apache Cassandra - MindsDB","491527","491782","page","36001","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:10.164Z","2025-10-24T14:01:10.164Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Cassandra data handler for MindsDB.</span>
<span><a class=""link"" href=""https://cassandra.apache.org/_/index.html"">Cassandra</a> is a free and open-source, distributed, wide-column store, NoSQL database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Cassandra to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Cassandra.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>As ScyllaDB is API-compatible with Apache Cassandra, the Cassandra data handler extends the ScyllaDB handler and uses the <code>scylla-driver</code> Python library.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the Cassandra database.</li>
<li><code>port</code> is the port to use when connecting.</li>
<li><code>user</code> is the user to authenticate.</li>
<li><code>password</code> is the password to authenticate the user.</li>
<li><code>keyspace</code> is the keyspace to connect, the top level container for tables.</li>
<li><code>protocol_version</code> is not required and defaults to 4.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Cassandra server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sc</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;cassandra&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;9043&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;pass&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;keyspace&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_data&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;protocol_version&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">4</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> cassandra_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_table</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605724/Apache+Cassandra+-+MindsDB","/pages/resumedraft.action?draftId=1605724","/x/XIAY"
"1605745","current","OpenGauss - MindsDB","491527","491782","page","52918","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:09.539Z","2025-10-24T14:02:09.539Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the OpenGauss data handler for MindsDB.</span>
<span><a class=""link"" href=""https://opengauss.org/en/"">OpenGauss</a> is an open-source relational database management system released with the Mulan PSL v2 and the kernel built on Huawei&rsquo;s years of experience in the database field. It continuously provides competitive features tailored to enterprise-grade scenarios.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect OpenGauss to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to OpenGauss.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the PostgreSQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the OpenGauss database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> opengauss_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'opengauss'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;opengauss&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> opengauss_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605745/OpenGauss+-+MindsDB","/pages/resumedraft.action?draftId=1605745","/x/cYAY"
"1605766","current","SQLite - MindsDB","491527","491782","page","58408","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:27.331Z","2025-10-24T14:02:27.331Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the SQLite data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.sqlite.org/about.html"">SQLite</a> is an in-process library that implements a self-contained, serverless, zero-configuration, transactional SQL database engine. The code for SQLite is in the public domain and is thus free to use for either commercial or private purpose. SQLite is the most widely deployed database in the world with more applications than we can count, including several high-profile projects.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SQLite to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to SQLite.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using the standard <code>sqlite3</code> library that comes with Python.</span>
<span>The only required argument to establish a connection is <code>db_file</code> that points to the database file that the connection is to be made to.</span>
<span>Optionally, this may also be set to <code>:memory:</code> to create an in-memory database.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the SQLite database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sqlite_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'sqlite'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;db_file&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example.db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sqlite_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605766/SQLite+-+MindsDB","/pages/resumedraft.action?draftId=1605766","/x/hoAY"
"1605787","current","TiDB - MindsDB","491527","491782","page","62033","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:37.918Z","2025-10-24T14:02:37.918Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the TiDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.pingcap.com/tidb/"">TiDB</a> is an open-source NewSQL database that supports Hybrid Transactional and Analytical Processing workloads. It is MySQL-compatible and can provide horizontal scalability, strong consistency, and high availability.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect TiDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to TiDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the TiDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> tidb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'tidb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">4000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;tidb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> tidb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605787/TiDB+-+MindsDB","/pages/resumedraft.action?draftId=1605787","/x/m4AY"
"1605808","current","Trino - MindsDB","491527","491782","page","63421","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:41.263Z","2025-10-24T14:02:41.263Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Trino data handler for MindsDB.</span>
<span><a class=""link"" href=""https://trino.io/"">Trino</a> is an open-source distributed SQL query engine designed to query large data sets distributed over one or more heterogeneous data sources.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Trino to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Trino.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>pyhive</code>, a collection of Python DB-API and SQLAlchemy interfaces for Presto and Hive.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
</ul>
<span>There are some optional arguments as follows:</span>
<ul>
<li><code>auth</code> is the authentication method. Currently, only <code>basic</code> is supported.</li>
<li><code>http_scheme</code> takes the value of <code>http</code>by default. It can be set to <code>https</code> as well.</li>
<li><code>catalog</code> is the catalog.</li>
<li><code>schema</code> is the schema name.</li>
<li><code>with</code> defines default WITH-clause (properties) for ALL tables. This parameter is experimental and might be changed or removed in future release.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Trino database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> trino_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'trino'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">443</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;auth&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;basic&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;http_scheme&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;trino&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;catalog&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;default&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;with&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;with (transactional = true)&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> trino_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605808/Trino+-+MindsDB","/pages/resumedraft.action?draftId=1605808","/x/sIAY"
"1605829","current","ChromaDB - MindsDB","491527","491782","page","68335","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:04.115Z","2025-10-24T14:03:04.115Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect ChromaDB to MindsDB.</span>
<span><a class=""link"" href=""https://www.trychroma.com/"">ChromaDB</a> is the open-source embedding database. Chroma makes it easy to build LLM apps by making knowledge, facts, and skills pluggable for LLMs.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect ChromaDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to ChromaDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <code>chromadb</code> Python library.</span>
<span>To connect to a remote ChromaDB instance, use the following statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> chromadb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'chromadb'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_HOST&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: YOUR_PORT,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;distance&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;l2/cosine/ip&quot;</span><span style=""color: rgb(110,119,129);""> -- optional, default is cosine</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>The required parameters are:</span>
<ul>
<li><code>host</code>: The host name or IP address of the ChromaDB instance.</li>
<li><code>port</code>: The TCP/IP port of the ChromaDB instance.</li>
<li><code>distance</code>: It defines how the distance between vectors is calculated. Available method include l2, cosine, and ip, as <a class=""link"" href=""https://docs.trychroma.com/docs/collections/configure"">explained here</a>.</li>
</ul>
<span>To connect to an in-memory ChromaDB instance, use the following statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> chromadb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;chromadb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;persist_directory&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_PERSIST_DIRECTORY&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;distance&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;l2/cosine/ip&quot;</span><span style=""color: rgb(110,119,129);""> -- optional</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>The required parameters are:</span>
<ul>
<li><code>persist_directory</code>: The directory to use for persisting data.</li>
<li><code>distance</code>: It defines how the distance between vectors is calculated. Available method include l2, cosine, and ip, as <a class=""link"" href=""https://docs.trychroma.com/docs/collections/configure"">explained here</a>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can use the established connection to create a collection (or table in the context of MindsDB) in ChromaDB and insert data into it:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> chromadb_datasource</span><span style=""color: rgb(31,35,40);"">.test_embeddings (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> embeddings,</span><span style=""color: rgb(10,48,105);"">'{&quot;source&quot;: &quot;fda&quot;}'</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> metadata</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span><code>mysql_datasource</code> is another MindsDB data source that has been created by connecting to a MySQL database. The <code>test_embeddings</code> table in the <code>mysql_datasource</code> data source contains the embeddings that we want to store in ChromaDB.</span></div></div>
<span>You can query your collection (table) as shown below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> chromadb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To filter the data in your collection (table) by metadata, you can use the following query:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> chromadb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test_embeddings</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(10,48,105);""> `metadata.source`</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;fda&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

</code></pre></div></div></div>
<span>To conduct a similarity search, the following query can be used:</span>
</div>","/spaces/SOP/pages/1605829/ChromaDB+-+MindsDB","/pages/resumedraft.action?draftId=1605829","/x/xYAY"
"1605866","current","Query Projects - MindsDB","491527","491782","page","116733","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:25.324Z","2025-10-24T14:11:25.324Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>query()</code> methods enables you to run queries on models, tables, and views stored in a project.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>query()</code> method to submit a query to a project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.query(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM my_table;'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">query.fetch()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1605866/Query+Projects+-+MindsDB","/pages/resumedraft.action?draftId=1605866","/x/6oAY"
"1605885","current","MindsDB Projects - MindsDB","491527","491782","page","119773","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:57.840Z","2025-10-24T14:11:57.840Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enables you to group all objects within <a class=""link"" href=""/sql/project"">projects</a>.</span>
<span>Projects store <a class=""link"" href=""/sql/table-structure#the-information-schema-database"">all MindsDB schema objects</a> except for handlers, connected data sources, and configured AI/ML engines. That is, projects can store models, views, jobs, triggers, agents, skills, knowledge bases, and chatbots.</span>
<span>MindsDB provides the default <code>mindsdb</code> project where all objects created without defining a project are stored.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#working-with-mindsdb-projects"">‚Äã</a></div><span class=""cursor-pointer"">Working with MindsDB Projects</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#create-a-project"">‚Äã</a></div><span class=""cursor-pointer"">Create a Project</span></h3>
<span>Use the below command to create a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> PROJECT project_name;</span></span>
</code></pre></div></div></div>
<div><div><span>Use lower-case letters for a project name.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#list-all-projects"">‚Äã</a></div><span class=""cursor-pointer"">List All Projects</span></h3>
<span>Use the below command to list all projects.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW [FULL] DATABASES</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'project'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#create-an-object-within-a-project"">‚Äã</a></div><span class=""cursor-pointer"">Create an Object within a Project</span></h3>
<span>Use the below command template to create an object within a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(207,34,46);"">OBJECT</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> project_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">object_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">...;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#drop-a-project"">‚Äã</a></div><span class=""cursor-pointer"">Drop a Project</span></h3>
<span>Use the below command to remove a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> PROJECT project_name;</span></span>
</code></pre></div></div></div>
<div><div><span>Please note that if your project stores at least one object, it cannot be removed. In this case, you should first drop all the objects belonging to this project, and then, you can remove the project.
Please see the <a class=""link"" href=""#example"">Example</a> section for details.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>Let&rsquo;s create a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> PROJECT my_project;</span></span>
</code></pre></div></div></div>
<span>To verify that the project was created successfully, let&rsquo;s run the command below to select all databases, including connected data sources and projects.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW FULL DATABASES;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------+-------+------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|</span><span style=""color: rgb(207,34,46);"">Database</span><span style=""color: rgb(31,35,40);"">          |</span><span style=""color: rgb(207,34,46);"">TYPE</span><span style=""color: rgb(31,35,40);"">   |ENGINE|</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------+-------+------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|information_schema|</span><span style=""color: rgb(207,34,46);"">system</span><span style=""color: rgb(31,35,40);""> |[NULL]|</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|mindsdb           |project|[NULL]|</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|my_project        |project|[NULL]|</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|files             |</span><span style=""color: rgb(207,34,46);"">data</span><span style=""color: rgb(31,35,40);"">   |files |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">------------------+-------+------+</span></span>
</code></pre></div></div></div>
<div><div><span>Please note that <code>information_schema</code> is the system database, <code>mindsdb</code> is the default project, and <code>files</code> is the database to store all uploaded files. For more information, please visit our docs on <a class=""link"" href=""/sql/table-structure"">MindsDB default structure</a>.</span></div></div>
<span>Now we create a model within the project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">my_project</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_model</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> example_db</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> demo_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT rental_price;</span></span>
</code></pre></div></div></div>
<span>Also, let&rsquo;s create a view.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> my_project</span><span style=""color: rgb(31,35,40);"">.my_view (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Here is what we have in the <code>my_project</code> project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW TABLES </span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_project;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|Tables_in_my_project|</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|my_model            |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">|my_view             |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------------+</span></span>
</code></pre></div></div></div>
<span>Let&rsquo;s try to delete our project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> PROJECT my_project;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">Project </span><span style=""color: rgb(10,48,105);"">'my_project'</span><span style=""color: rgb(31,35,40);""> can </span><span style=""color: rgb(207,34,46);"">not</span><span style=""color: rgb(31,35,40);""> be deleted, because it contains tables: my_model, my_view</span></span>
</code></pre></div></div></div>
<span>Users should remove all project content before dropping a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">my_project</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_model</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(5,80,174);""> my_project</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_view</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Now we can proceed to drop a project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(31,35,40);""> PROJECT my_project;</span></span>
</code></pre></div></div></div>
<div><div><span><strong>Next Steps</strong></span><span>Below are the links to help you explore further.</span><ul>
<li>Find out how to <a class=""link"" href=""/sql/create/project"">create and use projects</a>.</li>
<li>Learn more about <a class=""link"" href=""/sql/table-structure"">MindsDB Schema</a>.</li>
</ul></div></div></div>","/spaces/SOP/pages/1605885/MindsDB+Projects+-+MindsDB","/pages/resumedraft.action?draftId=1605885","/x/-YAY"
"1638432","current","JOBS - MindsDB","491527","491782","page","7229","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:18.113Z","2025-10-24T13:53:18.113Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enables you to automate any pipeline using JOBS, which grant you the power to schedule any query at any frequency. Additionally, it introduces the keyword <strong><a class=""link"" href=""#last"">LAST</a></strong>, offering the capability for a JOB to act solely on new data, essentially treating any data source as a stream.</span>
<p align=""center""><span><span style=""visibility: visible;""><img src=""https://docs.google.com/drawings/d/e/2PACX-1vT_q7R0X4HHsSxHaMPJ2RgFtF-RP_sK6gjC9Kz4cG99AHi94yDh2dPttax7Za54IU5me4Zs4JwmW_of/pub?w=955&amp;h=456"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>CREATE JOB</code> statement lets you schedule the execution of queries by providing relevant parameters, such as start date, end date, or repetition frequency.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#create-job"">‚Äã</a></div><span class=""cursor-pointer""><code>CREATE JOB</code></span></h3>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB [IF NOT EXISTS] [project_name.]job_name [AS] (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   &lt;</span><span style=""color: rgb(31,35,40);"">statement_1</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">[; &lt;statement_2&gt;][; ...]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[START &lt;date&gt;]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[END &lt;date&gt;]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[EVERY [number] </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">period</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[IF (&lt;statement_1&gt;[; &lt;statement_2&gt;][; ...])];</span></span>
</code></pre></div></div></div>
<span>Where:</span>
<table><thead><tr><th>Expression</th><th>Description</th></tr></thead><tbody><tr><td><code>[project_name.]job_name</code></td><td>Name of the job preceded by an optional project name where the job is to be created. If you do not provide the <code>project_name</code> value, then the job is created in the default <code>mindsdb</code> project.</td></tr><tr><td><code>&lt;statement_1&gt;[; &lt;statement_2&gt;][; ...]</code></td><td>One or more statements separated by <code>;</code> to be executed by the job.</td></tr><tr><td><code>[START &lt;date&gt;]</code></td><td>Optional. The date when the job starts its periodical or one-time execution. If not set, it is the current system date.</td></tr><tr><td><code>[END &lt;date&gt;]</code></td><td>Optional. The date when the job ends its periodical or one-time execution. If it is not set (and the repetition rules are set), then the job repeats forever.</td></tr><tr><td><code>[EVERY [number] &lt;period&gt;]</code></td><td>Optional. The repetition rules for the job. If not set, the job runs once, not considering the end date value. If the <code>number</code> value is not set, it defaults to 1.</td></tr><tr><td><code>[IF (&lt;statement_1&gt;[; &lt;statement_2&gt;][; ...])]</code></td><td>Optional. If the last statement returns one or more rows, only then the job will execute.</td></tr></tbody></table>
<div><div><span><strong>Available <code>&lt;date&gt;</code> formats</strong></span><span>Here are the supported <code>&lt;date&gt;</code> formats:</span><ul>
<li><code>'%Y-%m-%d %H:%M:%S'</code></li>
<li><code>'%Y-%m-%d'</code></li>
</ul><span>Please note that the default time zone is UTC.</span></div></div>
<div><div><span><strong>Available <code>&lt;period&gt;</code> values</strong></span><span>And the supported <code>&lt;period&gt;</code> values:</span><ul>
<li><code>minute</code> / <code>minutes</code> / <code>min</code></li>
<li><code>hour</code> / <code>hours</code></li>
<li><code>day</code> / <code>days</code></li>
<li><code>week</code> / <code>weeks</code></li>
<li><code>month</code> / <code>months</code></li>
</ul></div></div>
<span>Further, you can query all jobs and their execution history like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW JOBS;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> [project_name.]jobs </span><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'job_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> log</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">jobs_history</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(31,35,40);""> project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mindsdb'</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'job_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#last"">‚Äã</a></div><span class=""cursor-pointer""><code>LAST</code></span></h3>
<span>MindsDB provides a custom <code>LAST</code> keyword that enables you to fetch data inserted after the last time you queried for it. It is a convenient way to select only the newly added data rows when running a job.</span>
<span>Imagine you have the <code>fruit_data</code> table that contains the following:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id    | </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">     | apple     |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">     | orange    |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
</code></pre></div></div></div>
<span>When you run the <code>SELECT</code> query with the <code>LAST</code> keyword for the first time, it&rsquo;ll give an empty output.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> fruit_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> LAST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This query returns:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id    | </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">  | </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
</code></pre></div></div></div>
<div><div><span>If you want to specify a concrete value for <code>LAST</code> in the first execution of such a query, use the <code>COALESCE(LAST, &lt;value&gt;)</code> function.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> fruit_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> COALESCE</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">LAST</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div><span>It will result in executing the following query in the first run:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> fruit_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>And the below query at each subsequent run:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> fruit_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> LAST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div></div>
<span>Now imagine you inserted a new record into the <code>fruit_data</code> table:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id    | </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">     | apple     |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">     | orange    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">     | pear      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
</code></pre></div></div></div>
<span>When you run the <code>SELECT</code> query with the <code>LAST</code> keyword again, you&rsquo;ll get only the newly added record as output.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> fruit_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> LAST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This query returns:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| id    | </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">     | pear      |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-------+-----------+</span></span>
</code></pre></div></div></div>
<span>From this point on, whenever you add new records into the <code>fruit_data</code> table, it&rsquo;ll be returned by the next run of the <code>SELECT</code> query with the <code>LAST</code> keyword. And, if you do not add any new records between the query runs, then the output will be null.</span>
<span>If you want to clear context for the <code>LAST</code> keyword in the editor, then run <code>set context = 0</code> or <code>set context = null</code>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#conditional-jobs"">‚Äã</a></div><span class=""cursor-pointer"">Conditional Jobs</span></h3>
<span>Here is how you can create a conditional job that will execute periodically only if there is new data available:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB conditional_job (</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">    FINETUNE MODEL model_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> (     </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        FROM</span><span style=""color: rgb(5,80,174);""> datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        WHERE</span><span style=""color: rgb(31,35,40);""> incremental_column </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> LAST</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    )</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">EVERY </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);""> min</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">IF</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(31,35,40);""> incremental_column </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> LAST</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>The above job will be triggered every minute, but it will execute its task (i.e. finetuning the model) only if there is new data available.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#examples"">‚Äã</a></div><span class=""cursor-pointer"">Examples</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-1%3A-retrain-a-model"">‚Äã</a></div><span class=""cursor-pointer"">Example 1: Retrain a Model</span></h3>
<span>In this example, we create a job in the current project to retrain the <code>home_rentals_model</code> model and insert predictions into the <code>rentals</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB retrain_model_and_save_predictions (</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">   RETRAIN </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      join_learn_process </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> true;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">   INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_integration</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rentals</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   )</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">END</span><span style=""color: rgb(10,48,105);""> '2023-04-01 00:00:00'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">EVERY </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);""> days</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Please note that the <code>join_learn_process</code> parameter in the <code>USING</code> clause of the <a class=""link"" href=""/sql/api/retrain""><code>RETRAIN</code></a> statement ensures that the retraining process completes before inserting predictions into a table. In general, this parameter is used to prevent several retrain processes from running simultaneously.</span></div></div>
<span>The <code>retrain_model_and_save_predictions</code> job starts its execution on the current system date and ends on the 1st of April 2023. The job is executed every 2 days.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-2%3A-save-predictions"">‚Äã</a></div><span class=""cursor-pointer"">Example 2: Save Predictions</span></h3>
<span>In this example, the job creates a table named as <code>result_{{START_DATETIME}}</code> and inserts predictions into it.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB save_predictions (</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">   CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> my_integration</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(10,48,105);"">`result_{{START_DATETIME}}`</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      SELECT</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">rental_price_explain</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      JOIN</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> d</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   )</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">EVERY </span><span style=""color: rgb(207,34,46);"">hour</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Please note that the uniqueness of the created table name is ensured here by using the <code>{{START_DATETIME}}</code> variable that is replaced at runtime by the date and time of the current run.</span><span>You can use the following variables for this purpose:</span><ul>
<li><code>PREVIOUS_START_DATETIME</code> is replaced by date and time of the previous run of this job.</li>
<li><code>START_DATETIME</code> is replaced by date and time of the current job run.</li>
<li><code>START_DATE</code> is replaced by date of the current job run.</li>
</ul></div></div>
<span>The <code>save_predictions</code> job starts its execution on the current system date and repeats every 2 hours until it is manually disabled.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-3%3A-drop-a-model"">‚Äã</a></div><span class=""cursor-pointer"">Example 3: Drop a Model</span></h3>
<span>In this example, we create a job to drop the <code>home_rentals_model</code> model scheduled on the 1st of April 2023.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB drop_model (</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">   DROP</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals_model</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">) </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">START</span><span style=""color: rgb(10,48,105);""> '2023-04-01'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>This job runs once on the 1st of April 2023.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-4%3A-twitter-chatbot"">‚Äã</a></div><span class=""cursor-pointer"">Example 4: Twitter Chatbot</span></h3>
<span>You can easily create a chatbot to respond to tweets using jobs. But before you get to it, you should connect your Twitter account to MindsDB following the instructions <a class=""link"" href=""/integrations/app-integrations/twitter"">here</a>.</span>
<div><div><span>Follow the <a class=""link"" href=""/sql/tutorials/twitter-chatbot"">tutorial on how to create a Twitter chatbot</a> to learn the details.</span></div></div>
<span>Let&rsquo;s create a job that runs every hour, checks for new tweets, and responds using the OpenAI model.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">gpt4_twitter_job</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">   -- insert into tweets the output of joining model and new tweets</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_twitter_v2</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tweets</span><span style=""color: rgb(31,35,40);""> (in_reply_to_tweet_id, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      SELECT</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">         t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">id</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> in_reply_to_tweet_id,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">         r</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">response</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(207,34,46);""> text</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      FROM</span><span style=""color: rgb(5,80,174);""> my_twitter</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tweets</span><span style=""color: rgb(31,35,40);""> t</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      JOIN</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">snoopstein_model</span><span style=""color: rgb(31,35,40);""> r</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">         WHERE</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">            t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">query</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '(@snoopstein OR @snoop_stein OR #snoopstein OR #snoop_stein) -is:retweet -from:snoop_stein'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">         AND</span><span style=""color: rgb(5,80,174);""> t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">created_at</span><span style=""color: rgb(207,34,46);""> &gt;</span><span style=""color: rgb(207,34,46);""> LAST</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">EVERY </span><span style=""color: rgb(207,34,46);"">hour</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>The <a class=""link"" href=""/sql/api/select""><code>SELECT</code></a> statement joins the data table with the model table to get responses for newly posted tweets, thanks to the <code>LAST</code> keyword. Then, the <a class=""link"" href=""/sql/api/insert""><code>INSERT INTO</code></a> statement writes these responses to the <code>tweets</code> table of the <code>my_twitter</code> integration.</span>
<div><div><span>To learn more about OpenAI integration with MindsDB, visit our docs <a class=""link"" href=""/nlp/nlp-mindsdb-openai"">here</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#additional-configuration"">‚Äã</a></div><span class=""cursor-pointer"">Additional Configuration</span></h2>
<span>Here is the template of the <code>config.json</code> file that you can pass as a parameter when starting your local MindsDB instance:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">&quot;jobs&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;disable&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;check_interval&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 30</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      }</span></span>
</code></pre></div></div></div>
<span>The <code>disable</code> parameter defines whether the scheduler is active (<code>true</code>) or not (<code>false</code>). By default, in the MindsDB Editor, the scheduler is active.</span>
<span>The <code>check_interval</code> parameter defines the interval in seconds between consecutive checks of the scheduler table. By default, in the MindsDB Editor, it is 30 seconds.</span>
<span>You can modify the default configuration in your local MindsDB installation by creating a <code>config.json</code> file and starting MindsDB with this file as a parameter. You can find detailed instructions <a class=""link"" href=""/setup/custom-config#starting-mindsdb-with-extended-configuration"">here</a>.</span></div>","/spaces/SOP/pages/1638432/JOBS+-+MindsDB","/pages/resumedraft.action?draftId=1638432","/x/IAAZ"
"1638451","current","SDKs & APIs - MindsDB","491527","491782","page","7868","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:22.967Z","2025-10-24T13:53:22.967Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>The <a class=""link"" href=""/mindsdb-connect"">Connect</a>, <a class=""link"" href=""/mindsdb-unify"">Unify</a>, and <a class=""link"" href=""/mindsdb-respond"">Respond</a> sections present the usage of MindsDB via its SQL interface.</span>
<span>Alongside the SQL interface, MindsDB provides access via REST APIs, Python SDK, JavaScript SDK.</span>
<div><a href=""/rest/overview""><div class=""px-6 py-5 relative""><div><h2>REST API</h2><div>Interact with MindsDB via API endpoints.</div></div></div></a><a href=""/sdks/python/overview""><div class=""px-6 py-5 relative""><div><h2>Python SDK</h2><div>Integrate MindsDB into the Python code.</div></div></div></a><a href=""/sdks/javascript/overview""><div class=""px-6 py-5 relative""><div><h2>JavaScript SDK</h2><div>Integrate MindsDB into the JavaScript code.</div></div></div></a></div></div>","/spaces/SOP/pages/1638451/SDKs+APIs+-+MindsDB","/pages/resumedraft.action?draftId=1638451","/x/MwAZ"
"1638464","current","Python Coding Standards - MindsDB","491527","491782","page","13147","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:32.968Z","2025-10-24T13:59:32.968Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h1><div class=""absolute""><a href=""#pep8"">‚Äã</a></div><span class=""cursor-pointer"">PEP8</span></h1>
<div><div><span>Strict adherence to <a class=""link"" href=""https://peps.python.org/pep-0008/"">PEP8</a> standards is mandatory for all code contributions to MindsDB.</span></div></div>
<span><strong>Why PEP8?</strong>
<a class=""link"" href=""https://peps.python.org/pep-0008/"">PEP8</a> provides an extensive set of guidelines for Python code styling, promoting readability and a uniform coding standard. By aligning with PEP8, we ensure our codebase remains clean, maintainable, and easily understandable for Python developers at any level.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#automated-checks"">‚Äã</a></div><span class=""cursor-pointer"">Automated Checks</span></h4>
<ul>
<li>Upon submission of a Pull Request (PR), an automated process checks the code for PEP8 compliance.</li>
<li>Non-compliance with PEP8 can result in the failure of the build process. Adherence to PEP8 is not just a best practice but a necessity to ensure smooth integration of new code into the codebase.</li>
<li>If a PR fails due to PEP8 violations, the contributor is required to review the automated feedback provided.</li>
<li>Pay special attention to common PEP8 compliance issues such as proper indentation, appropriate line length, correct use of whitespace, and following the recommended naming conventions.</li>
<li>Contributors are encouraged to iteratively improve their code based on the feedback until full compliance is achieved.</li>
</ul>
<h1><div class=""absolute""><a href=""#logging"">‚Äã</a></div><span class=""cursor-pointer"">Logging</span></h1>
<span>Always instantiate a logger using the MindsDB utilities module. This practice ensures a uniform approach to logging across different parts of the application.
Example of Logger Creation:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> mindsdb.utilities </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> log</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">logger </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> log.getLogger(</span><span style=""color: rgb(5,80,174);"">__name__</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setting-logging"">‚Äã</a></div><span class=""cursor-pointer"">Setting Logging</span></h3>
<ul>
<li>Environment Variable: Use <code>MINDSDB_LOG_LEVEL</code> to set the desired logging level. This approach allows for dynamic adjustment of log verbosity without needing code modifications.</li>
<li>Log Levels: Available levels include:
<ul>
<li><code>DEBUG</code>: Detailed information, typically of interest only when diagnosing problems.</li>
<li><code>INFO:</code> Confirmation that things are working as expected.</li>
<li><code>WARNING</code>: An indication that something unexpected happened, or indicative of some problem in the near future.</li>
<li><code>ERROR</code>: Due to a more serious problem, the software has not been able to perform some function.</li>
<li><code>CRITICAL</code>: A serious error, indicating that the program itself may be unable to continue running.</li>
</ul>
</li>
<li>Avoid print() statements. They lack the flexibility and control offered by logging mechanisms, particularly in terms of output redirection and level-based filtering.</li>
<li>The logger name should be <code>__name__ </code> to automatically reflect the module&rsquo;s name. This convention is crucial for pinpointing the origin of log messages.</li>
</ul>
<h1><div class=""absolute""><a href=""#docstrings"">‚Äã</a></div><span class=""cursor-pointer"">Docstrings</span></h1>
<span>Docstrings are essential for documenting Python code. They provide a clear explanation of the functionality of classes, functions, modules, etc., making the codebase easier to understand and maintain.</span>
<span>A well-written docstring should include:</span>
<ul>
<li>Function&rsquo;s Purpose: Describe what the function/class/module does.</li>
<li>Parameters: List and explain the parameters it takes.</li>
<li>Return Value: Describe what the function returns.</li>
<li>Exceptions: Mention any exceptions that the function might raise.</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> example_function</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">param1</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">param2</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;This is an example docstring.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        param1 (type): Description of param1.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        param2 (type): Description of param2.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        type: Description of the return value.</span></span>

<span class=""line""><span style=""color: rgb(10,48,105);"">    Raises:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        ExceptionType: Description of the exception.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">    # function body...</span></span>
</code></pre></div></div></div>
<h1><div class=""absolute""><a href=""#exception-handling"">‚Äã</a></div><span class=""cursor-pointer"">Exception Handling</span></h1>
<span>Implementing robust error handling strategies is essential to maintain the stability and reliability of MindsDB. Proper exception management ensures that the application behaves predictably under error conditions, providing clear feedback and preventing unexpected crashes or behavior.</span>
<ul>
<li>Utilizing MindsDB Exceptions: To ensure uniformity and clarity in error reporting, always use predefined exceptions from the MindsDB exceptions library.</li>
<li>Adding New Exceptions: If during development you encounter a scenario where none of the existing exceptions adequately represent the error, consider defining a new, specific exception.</li>
</ul></div>","/spaces/SOP/pages/1638464/Python+Coding+Standards+-+MindsDB","/pages/resumedraft.action?draftId=1638464","/x/QAAZ"
"1638483","current","Email - MindsDB","491527","491782","page","20137","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:04.492Z","2025-10-24T14:00:04.492Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Email accounts to MindsDB.</span>
<span>By connecting your email account to MindsDB, you can utilize various AI models available within MindsDB to summarize emails, detect spam, or even automate email replies.</span>
<div><div><span>Please note that currently you can connect Gmail and Outlook accounts using this integration.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler was implemented using standard Python libraries: <code>email</code>, <code>imaplib</code>, and <code>smtplib</code>.</span>
<span>The Email handler is initialized with the following required parameters:</span>
<ul>
<li><code>email</code> stores an email address used for authentication.</li>
<li><code>password</code> stores a password used for authentication.</li>
</ul>
<span>Additionally, the following optional parameters can be passed:</span>
<ul>
<li><code>smtp_server</code> used to send emails. Defaults to <code>smtp.gmail.com</code>.</li>
<li><code>smtp_port</code> used to send emails. Defaults to <code>587</code>.</li>
<li><code>imap_server</code> used to receive emails. Defaults to <code>imap.gmail.com</code>.</li>
</ul>
<div><div><span>At the moment, the handler has been tested with Gmail and Outlook accounts.</span><span>To use the handler on a Gmail account, you must create an app password following <a class=""link"" href=""https://support.google.com/accounts/answer/185833?hl=en"">this instruction</a> and use its value for the <code>password</code> parameter.</span><span>By default, the Email handler connects to Gmail. If you want to use other email providers as Outlook, add the values for <code>imap_server</code> and <code>smtp_server</code> parameters.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#gmail"">‚Äã</a></div><span class=""cursor-pointer"">Gmail</span></h3>
<span>To connect your Gmail account to MindsDB, use the below <code>CREATE DATABASE</code> statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> email_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'email'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;email&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;youremail@gmail.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yourpassword&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>It creates a database that comes with the <code>emails</code> table.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#outlook"">‚Äã</a></div><span class=""cursor-pointer"">Outlook</span></h3>
<span>To connect your Outlook account to MindsDB, use the below <code>CREATE DATABASE</code> statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> email_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'email'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;email&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;youremail@outlook.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yourpassword&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;smtp_server&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;smtp.office365.com&quot;</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;smtp_port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;587&quot;</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;imap_server&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;outlook.office365.com&quot;</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>It creates a database that comes with the <code>emails</code> table.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now you can query for emails like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> email_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>And you can apply filters like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, body, </span><span style=""color: rgb(207,34,46);"">subject</span><span style=""color: rgb(31,35,40);"">, to_field, from_field, </span><span style=""color: rgb(207,34,46);"">datetime</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> email_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> subject</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'MindsDB'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> id</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Or, write emails like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> email_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">emails</span><span style=""color: rgb(31,35,40);"">(to_field, </span><span style=""color: rgb(207,34,46);"">subject</span><span style=""color: rgb(31,35,40);"">, body)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">&quot;toemail@outlook.com&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;MindsDB&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;Hello from MindsDB!&quot;</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1638483/Email+-+MindsDB","/pages/resumedraft.action?draftId=1638483","/x/UwAZ"
"1638504","current","Strapi - MindsDB","491527","491782","page","28952","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:50.964Z","2025-10-24T14:00:50.964Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span><a class=""link"" href=""https://strapi.io/"">Strapi</a> is a popular open-source Headless Content Management System (CMS) that empowers developers to work with their preferred tools and frameworks, while providing content editors with a user-friendly interface to manage and distribute content across various platforms.</span>
<span>The Strapi Handler is a MindsDB handler that enables SQL-based querying of Strapi collections. This documentation provides a brief overview of its features, initialization parameters, and example usage.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>To use the Strapi Handler, initialize it with the following parameters:</span>
<ul>
<li><code>host</code>: Strapi server host.</li>
<li><code>port</code>: Strapi server port (typically 1337).</li>
<li><code>api_token</code>: Strapi server API token for authentication.</li>
<li><code>plural_api_ids</code>: List of plural API IDs for the collections.</li>
</ul>
<span>To get started, create a Strapi engine database with the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> myshop</span><span style=""color: rgb(110,119,129);""> --- Display name for the database.</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'strapi'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(110,119,129);"">--- Name of the MindsDB handler.</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;host&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;&lt;strapi-host&gt;&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(110,119,129);"">--- Host (can be an IP address or URL).</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;port&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;&lt;strapi-port&gt;&quot;</span><span style=""color: rgb(31,35,40);"">,  </span><span style=""color: rgb(110,119,129);"">--- Common port is 1337.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;api_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;your-strapi-api-token&gt;&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(110,119,129);"">--- API token of the Strapi server.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;plural_api_ids&quot;</span><span style=""color: rgb(31,35,40);""> : [&quot;&lt;plural-api-id&gt;&quot;] </span><span style=""color: rgb(110,119,129);"">--- Plural API IDs of the collections.</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a collection:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> myshop.</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">collection</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Filter data based on specific criteria:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> myshop.</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">collection</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(31,35,40);"">id</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
</code></pre></div></div></div>
<span>Insert new data into a collection:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> myshop.</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">collection</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(31,35,40);"">field</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(31,35,40);"">field</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, ...)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, ...);</span></span>
</code></pre></div></div></div>
<div><div><span>Note: You only able to insert data into the collection which has <code>create</code>
permission.</span></div></div>
<span>Modify existing data in a collection:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(31,35,40);""> myshop.</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);"">collection</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(31,35,40);"">field</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(31,35,40);"">field</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">, ...</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(31,35,40);"">id</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Note: You only able to update data into the collection which has <code>update</code>
permission.</span></div></div></div>","/spaces/SOP/pages/1638504/Strapi+-+MindsDB","/pages/resumedraft.action?draftId=1638504","/x/aAAZ"
"1638525","current","Apache Pinot - MindsDB","491527","491782","page","38483","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:18.851Z","2025-10-24T14:01:18.851Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Pinot data handler for MindsDB.</span>
<span><a class=""link"" href=""https://pinot.apache.org/"">Apache Pinot</a> is a real-time distributed OLAP database designed for low-latency query execution even at extremely high throughput. Apache Pinot can ingest directly from streaming sources like Apache Kafka and make events available for querying immediately.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Pinot to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Pinot.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented using the <code>pinotdb</code> library, the Python DB-API and SQLAlchemy dialect for Pinot.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the Apache Pinot cluster.</li>
<li><code>broker_port</code> is the port that the Broker of the Apache Pinot cluster is running on.</li>
<li><code>controller_port</code> is the port that the Controller of the Apache Pinot cluster is running on.</li>
<li><code>path</code> is the query path.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Pinot cluster in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> pinot_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'pinot'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;broker_port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">8000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;controller_port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">9000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/query/sql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;scheme&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;http&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> pinot_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1638525/Apache+Pinot+-+MindsDB","/pages/resumedraft.action?draftId=1638525","/x/fQAZ"
"1638546","current","List Agents - MindsDB","491527","491782","page","104832","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:21.771Z","2025-10-24T14:06:21.771Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1638546/List+Agents+-+MindsDB","/pages/resumedraft.action?draftId=1638546","/x/kgAZ"
"1638565","current","Get Knowledge Base - MindsDB","491527","491782","page","111548","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:17.263Z","2025-10-24T14:07:17.263Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/knowledge_bases/my_kb</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1638565/Get+Knowledge+Base+-+MindsDB","/pages/resumedraft.action?draftId=1638565","/x/pQAZ"
"1638584","current","Update a View - MindsDB","491527","491782","page","113869","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:08:12.168Z","2025-10-24T14:08:12.168Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>Updates an existing view.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> PUT</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/{projectName}/views/{viewName}</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;view&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;name&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;query&quot;: &quot;&lt;string&gt;&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1638584/Update+a+View+-+MindsDB","/pages/resumedraft.action?draftId=1638584","/x/uAAZ"
"1671177","current","MindsDB Releases - MindsDB","491527","491782","page","9100","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:26.519Z","2025-10-24T13:53:26.519Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB releases new features, functionalitites, and fixes on regular cadence. This document outlines the release process, versioning, and naming conventions.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#release-types-and-versioning"">‚Äã</a></div><span class=""cursor-pointer"">Release Types and Versioning</span></h2>
<span>MindsDB uses <a class=""link"" href=""https://semver.org/"">semantic versioning</a> to name all releases. This format is applied consistently across our GitHub tags, Python packages, and Docker images.</span>
<span>Each release name follows the structure:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>v&lt;MAJOR&gt;.&lt;MINOR&gt;.&lt;PATCH&gt;(&lt;TYPE&gt;&lt;NUMBER&gt;)</span></span>
</code></pre></div></div></div>
<span>Where:</span>
<ul>
<li><code>MAJOR</code> indicates the major version, which introduces significant changes or backward-incompatible updates.</li>
<li><code>MINOR</code> indicates the minor version, which introduces new features that remain backward-compatible.</li>
<li><code>PATCH</code> indicates the patch version, which introduces small fixes or improvements.</li>
<li><code>TYPE</code> is an optional component, which informs about the nature of the (pre-)release.</li>
<li><code>NUMBER</code> is an optional component used when <code>TYPE</code> is provided that indicates the pre-release version.</li>
</ul>
<span>The following are the release types and their naming conventions.</span>
<table><thead><tr><th><strong>Release Type</strong></th><th><strong>Sample Version</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><strong>GA (General Availability)</strong></td><td><code>v25.9.3</code></td><td>The stable public release. <code>25</code> is the major version, <code>9</code> is the minor version, and <code>3</code> is the patch number.</td></tr><tr><td><strong>Pre-GA (Release Candidate)</strong></td><td><code>v25.9.3rc1</code></td><td>A release candidate that is nearly ready for GA. <code>rc</code> stands for release candidate, and <code>1</code> indicates the version number of the pre-release.</td></tr><tr><td><strong>Alpha</strong></td><td><code>v25.9.3alpha1</code></td><td>An early testing version with limited features or stability. <code>alpha</code> denotes an initial stage for internal or early feedback.</td></tr><tr><td><strong>Beta</strong></td><td><code>v25.9.3beta1</code></td><td>A version close to final release. <code>beta</code> indicates a feature-complete build shared for broader testing and feedback.</td></tr></tbody></table>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#release-process"">‚Äã</a></div><span class=""cursor-pointer"">Release Process</span></h2>
<span>The <code>main</code> branch of the <a class=""link"" href=""https://github.com/mindsdb/mindsdb"">MindsDB repository</a> contains the latest stable version of MindsDB and represents the GA (General Availability) release.</span>
<span>MindsDB follows the <a class=""link"" href=""https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"">Gitflow branching model</a> to manage development and releases as follows.</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Development Phase</p><div><span>All code changes are first committed to the <code>develop</code> branch.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Release Preparation</p><div><span>When a release is approaching, a short-lived <code>release</code> branch is created from the <code>develop</code> branch.</span><ul>
<li>This branch is used for final testing and validation.</li>
<li>Pre-GA artifacts are built at this stage, including both the Python package and the Docker image, and shared for broader testing and feedback.</li>
</ul></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Release Finalization</p><div><span>After successful testing and validation:</span><ul>
<li>The <code>release</code> branch is merged into the <code>main</code> branch, making it an official GA release.</li>
<li>The final GA versions of the Python package and Docker image are released, while the pre-GA version are removed.</li>
</ul></div></div></div></div>
<div><div><span>If you are interested in contributing to MindsDB, follow <a class=""link"" href=""/contribute/contribute"">this link</a>.</span></div></div></div>","/spaces/SOP/pages/1671177/MindsDB+Releases+-+MindsDB","/pages/resumedraft.action?draftId=1671177","/x/CYAZ"
"1671202","current","Build a Database Handler - MindsDB","491527","491782","page","11810","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:22.132Z","2025-10-24T13:59:22.132Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, you&rsquo;ll find how to add new integrations/databases to MindsDB.</span>
<div><div><span><strong>Prerequisite</strong></span><span>You should have the latest version of the MindsDB repository installed locally. Follow <a class=""link"" href=""/contribute/install"">this guide</a> to learn how to install MindsDB for development.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what-are-database-handlers%3F"">‚Äã</a></div><span class=""cursor-pointer"">What are Database Handlers?</span></h2>
<span>Database handlers act as a bridge to any database. You use database handlers to create databases using <a class=""link"" href=""/sql/create/databases"">the CREATE DATABASE command</a>. So you can reach data from any database that has its handler implemented within MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-a-database-handler"">‚Äã</a></div><span class=""cursor-pointer"">Creating a Database Handler</span></h2>
<span>You can create your own database handler within MindsDB by inheriting from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L102""><code>DatabaseHandler</code></a> class.</span>
<span>By providing the implementation for some or all of the methods contained in the <code>DatabaseHandler</code> class, you can connect with the database of your choice.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#core-methods"">‚Äã</a></div><span class=""cursor-pointer"">Core Methods</span></h3>
<span>Apart from the <code>__init__()</code> method, there are seven core methods that must be implemented. We recommend checking actual examples in the codebase to get an idea of what goes into each of these methods, as they can change a bit depending on the nature of the system being integrated.</span>
<span>Let&rsquo;s review the purpose of each method.</span>
<table><thead><tr><th>Method</th><th>Purpose</th></tr></thead><tbody><tr><td><code>connect()</code></td><td>It performs the necessary steps to connect to the underlying system.</td></tr><tr><td><code>disconnect()</code></td><td>It gracefully closes connections established in the <code>connect()</code> method.</td></tr><tr><td><code>check_connection()</code></td><td>It evaluates if the connection is alive and healthy. This method is called frequently.</td></tr><tr><td><code>native_query()</code></td><td>It parses any <em>native</em> statement string and acts upon it (for example, raw SQL commands).</td></tr><tr><td><code>query()</code></td><td>It takes a parsed SQL command in the form of an abstract syntax tree and executes it.</td></tr><tr><td><code>get_tables()</code></td><td>It lists and returns all the available tables. Each handler decides what a <em>table</em> means for the underlying system when interacting with it from the data layer. Typically, these are actual tables.</td></tr><tr><td><code>get_columns()</code></td><td>It returns columns of a table registered in the handler with the respective data type.</td></tr></tbody></table>
<span>Authors can opt for adding private methods, new files and folders, or any combination of these to structure all the necessary work that will enable the core methods to work as intended.</span>
<div><div><span><strong>Other Common Methods</strong></span><span>Under the <code>mindsdb.integrations.libs.utils</code> library, contributors can find various methods that may be useful while implementing new handlers.</span><span>Also, there are wrapper classes for the <code>DatabaseHandler</code> instances called <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/response.py#L7"">HandlerResponse</a> and <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/response.py#L32"">HandlerStatusResponse</a>. You should use them to ensure proper output formatting.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h3>
<span>Each database handler should inherit from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L102""><code>DatabaseHandler</code></a> class.</span>
<span>Here is a step-by-step guide:</span>
<ul>
<li>
<span>Setting the <code>name</code> class property:</span>
<span>MindsDB uses it internally as the name of the handler.</span>
<span>For example, the <code>CREATE DATABASE</code> statement uses the handler&rsquo;s name.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> integration_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'postgres'</span><span style=""color: rgb(31,35,40);"">,         </span><span style=""color: rgb(110,119,129);"">--- here, the handler's name is `postgres`</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">'host'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'127.0.0.1'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">'user'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'root'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">'password'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'password'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>__init__()</code> method:</span>
<span>This method initializes the handler. The <code>connection_data</code> argument contains the <code>PARAMETERS</code> from the <code>CREATE DATABASE</code> statement, such as <code>user</code>, <code>password</code>, etc.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(5,80,174);""> __init__</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">name</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">str</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">connection_data</span><span style=""color: rgb(31,35,40);"">: Optional[</span><span style=""color: rgb(5,80,174);"">dict</span><span style=""color: rgb(31,35,40);"">]):</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; constructor</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        name (str): the handler name</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>connect()</code> method:</span>
<span>The <code>connect()</code> method sets up the connection.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> connect</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerStatusResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Set up any connections required by the handler</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Should return the output of check_connection() method after attempting</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    connection. Should switch self.is_connected.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerStatusResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>disconnect()</code> method:</span>
<span>The <code>disconnect()</code> method closes the existing connection.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> disconnect</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Close any existing connections</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Should switch self.is_connected.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>check_connection()</code> method:</span>
<span>The <code>check_connection()</code> method performs the health check for the connection.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> check_connection</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerStatusResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Check connection to the handler</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerStatusResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>native_query()</code> method:</span>
<span>The <code>native_query()</code> method runs commands of the native database language.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> native_query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">query</span><span style=""color: rgb(31,35,40);"">: Any) -&gt; HandlerResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;Receive raw query and act upon it somehow.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        query (Any): query in native format (str for sql databases,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            etc)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>query()</code> method:</span>
<span>The query method runs parsed SQL commands.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">query</span><span style=""color: rgb(31,35,40);"">: ASTNode) -&gt; HandlerResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;Receive query as AST (abstract syntax tree) and act upon it somehow.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        query (ASTNode): sql query represented as AST. May be any kind</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            of query: SELECT, INSERT, DELETE, etc</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>get_tables()</code> method:</span>
<span>The <code>get_tables()</code> method lists all the available tables.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> get_tables</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Return list of entities</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Return a list of entities that will be accessible as tables.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerResponse: should have the same columns as information_schema.tables</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            (https://dev.mysql.com/doc/refman/8.0/en/information-schema-tables-table.html)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            Column 'TABLE_NAME' is mandatory, other is optional.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>get_columns()</code> method:</span>
<span>The <code>get_columns()</code> method lists all columns of a specified table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> get_columns</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">table_name</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">str</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Returns a list of entity columns</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        table_name (str): name of one of tables returned by self.get_tables()</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerResponse: should have the same columns as information_schema.columns</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            (https://dev.mysql.com/doc/refman/8.0/en/information-schema-columns-table.html)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            Column 'COLUMN_NAME' is mandatory, other is optional. Highly</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            recommended to define also 'DATA_TYPE': it should be one of</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            python data types (by default it is str).</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exporting-the-connection-args-dictionary"">‚Äã</a></div><span class=""cursor-pointer"">Exporting the <code>connection_args</code> Dictionary</span></h3>
<span>The <code>connection_args</code> dictionary contains all of the arguments used to establish the connection along with their descriptions, types, labels, and whether they are required or not.</span>
<span>The <code>connection_args</code> dictionary should be stored in the <code>connection_args.py</code> file inside the handler folder.</span>
<div><div><span>The <code>connection_args</code> dictionary is stored in a separate file in order to be able to hide sensitive information such as passwords or API keys.</span><span>By default, when querying for <code>connection_data</code> from the <code>information_schema.databases</code> table, all sensitive information is hidden. To unhide it, use this command:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">set</span><span style=""color: rgb(31,35,40);""> show_secrets</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">true;</span></span>
</code></pre></div></div></div></div></div>
<span>Here is an example of the <code>connection_args.py</code> file from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mysql_handler"">MySQL handler</a> where the password value is set to hidden with <code>'secret': True</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> collections </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> OrderedDict</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> mindsdb.integrations.libs.const </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> HANDLER_CONNECTION_ARG_TYPE</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(5,80,174);""> ARG_TYPE</span></span>


<span class=""line""><span style=""color: rgb(31,35,40);"">connection_args </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> OrderedDict(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    url</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The URI-Like connection string to the MySQL server. If provided, it will override the other connection arguments.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'URL'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    user</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The user name used to authenticate with the MySQL server.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'User'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    password</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PWD</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The password to authenticate the user with the MySQL server.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Password'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'secret'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    database</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The database name to use when connecting with the MySQL server.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Database'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    host</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The host name or IP address of the MySQL server. NOTE: use </span><span style=""color: rgb(207,34,46);"">\'</span><span style=""color: rgb(10,48,105);"">127.0.0.1</span><span style=""color: rgb(207,34,46);"">\'</span><span style=""color: rgb(10,48,105);""> instead of </span><span style=""color: rgb(207,34,46);"">\'</span><span style=""color: rgb(10,48,105);"">localhost</span><span style=""color: rgb(207,34,46);"">\'</span><span style=""color: rgb(10,48,105);""> to connect to local server.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Host'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    port</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">INT</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The TCP/IP port of the MySQL server. Must be an integer.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Port'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    ssl</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">BOOL</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Set it to True to enable ssl.'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'ssl'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    ssl_ca</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PATH</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Path or URL of the Certificate Authority (CA) certificate file'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'ssl_ca'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    ssl_cert</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PATH</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'Path name or URL of the server public key certificate file'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'ssl_cert'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    ssl_key</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PATH</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'description'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'The path name or URL of the server private key file'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'required'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'label'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'ssl_key'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">connection_args_example </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> OrderedDict(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    host</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'127.0.0.1'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    port</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    user</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'root'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    password</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'password'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    database</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'database'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exporting-all-required-variables"">‚Äã</a></div><span class=""cursor-pointer"">Exporting All Required Variables</span></h3>
<span>The following should be exported in the <code>__init__.py</code> file of the handler:</span>
<ul>
<li>The <code>Handler</code> class.</li>
<li>The <code>version</code> of the handler.</li>
<li>The <code>name</code> of the handler.</li>
<li>The <code>type</code> of the handler, either <code>DATA</code> handler or <code>ML</code> handler.</li>
<li>The <code>icon_path</code> to the file with the database icon.</li>
<li>The <code>title</code> of the handler or a short description.</li>
<li>The <code>description</code> of the handler.</li>
<li>The <code>connection_args</code> dictionary with the connection arguments.</li>
<li>The <code>connection_args_example</code> dictionary with an example of the connection arguments.</li>
<li>The <code>import_error</code> message that is used if the import of the <code>Handler</code> class fails.</li>
</ul>
<span>A few of these variables are defined in another file called <code>__about__.py</code>. This file is imported into the <code>__init__.py</code> file.</span>
<span>Here is an example of the <code>__init__.py</code> file for the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mysql_handler"">MySQL handler</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> mindsdb.integrations.libs.const </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> HANDLER_TYPE</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> .__about__ </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> __version__</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> version, __description__ </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> description</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> .connection_args </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> connection_args, connection_args_example</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">try</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    from</span><span style=""color: rgb(31,35,40);""> .mysql_handler </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        MySQLHandler </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> Handler,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        connection_args_example,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        connection_args</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    )</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    import_error </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> None</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">except</span><span style=""color: rgb(5,80,174);""> Exception</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> e:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    Handler </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> None</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    import_error </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> e</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">title </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MySQL'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">name </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mysql'</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> HANDLER_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">DATA</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">icon_path </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'icon.svg'</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">__all__</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'Handler'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'version'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'name'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'type'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'title'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'description'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'connection_args'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'connection_args_example'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'import_error'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'icon_path'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">]</span></span>
</code></pre></div></div></div>
<span>The <code>__about__.py</code> file for the same <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mysql_handler"">MySQL handler</a> contains the following variables:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">__title__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MindsDB MySQL handler'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__package_name__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mindsdb_mysql_handler'</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">__version__</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '0.0.1'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__description__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;MindsDB handler for MySQL&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__author__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MindsDB Inc'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__github__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'https://github.com/mindsdb/mindsdb'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__pypi__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'https://pypi.org/project/mindsdb/'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__license__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MIT'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__copyright__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Copyright 2022- mindsdb'</span></span>

</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exporting-requirements"">‚Äã</a></div><span class=""cursor-pointer"">Exporting Requirements</span></h3>
<span>In the case if the integration requires other packages to function correctly, list them in the <code>requirements.txt</code> file.</span>
<span>Create a text file named <code>requirements.txt</code> that stores all packages required for using the integration. Here is an example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>mysql-connector-python==9.1.0</span></span>
<span class=""line""><span>...</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#check-out-our-database-handlers"">‚Äã</a></div><span class=""cursor-pointer"">Check out our Database Handlers!</span></h2>
<span>To see some integration handlers that are currently in use, we encourage you to check out the following handlers inside the MindsDB repository:</span>
<ul>
<li><a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mysql_handler"">MySQL</a></li>
<li><a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/postgres_handler"">Postgres</a></li>
</ul>
<span>And here are <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers"">all the handlers available in the MindsDB repository</a>.</span></div>","/spaces/SOP/pages/1671202/Build+a+Database+Handler+-+MindsDB","/pages/resumedraft.action?draftId=1671202","/x/IoAZ"
"1671233","current","How to Write MindsDB Documentation - MindsDB","491527","491782","page","12265","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:25.157Z","2025-10-24T13:59:25.157Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This section gets you started on how to contribute to the MindsDB documentation.</span>
<span>MindsDB&rsquo;s documentation is run using Mintlify. If you want to contribute to our docs, please follow the steps below to set up the environment locally.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#running-the-docs-locally"">‚Äã</a></div><span class=""cursor-pointer"">Running the Docs Locally</span></h2>
<div><div><span><strong>Prerequisite</strong>
You should have installed Git (version 2.30.1 or higher) and Node.js (version 18.10.0 or higher).</span></div></div>
<span>Step 1. Clone the MindsDB Git repository:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">git clone https://github.com/mindsdb/mindsdb.git</span></span>
</code></pre></div></div></div>
<span>Step 2. Install Mintlify on your OS:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">npm i mintlify -g</span></span>
</code></pre></div></div></div>
<span>Step 3. Go to the <code>docs</code> folder inside the cloned MindsDB Git repository and start Mintlify there:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">mintlify dev</span></span>
</code></pre></div></div></div>
<span>The documentation website is now available at <code>http://localhost:3000</code>.</span>
<div><div><span><strong>Getting an Error?</strong>
If you use the Windows operating system, you may get an error saying <code>no such file or directory: C:/Users/Username/.mintlify/mint/client</code>. Here are the steps to troubleshoot it:</span><ul>
<li>Go to the <code>C:/Users/Username/.mintlify/</code> directory.</li>
<li>Remove the <code>mint</code> folder.</li>
<li>Open the Git Bash in this location and run <code>git clone https://github.com/mintlify/mint.git</code>.</li>
<li>Repeat step 3.</li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-repository-structure"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Repository Structure</span></h2>
<span>Here is the structure of the MindsDB docs repository:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>docs                          # All documentation source files</span></span>
<span class=""line""><span>|__assets/                    # Images and icons used throughout the docs</span></span>
<span class=""line""><span>‚îÇ  ‚îú‚îÄ ...</span></span>
<span class=""line""><span>‚îÇ__folders_with_mdx_files/    # All remaining folders that store the .mdx files</span></span>
<span class=""line""><span>|__mdx_files                  # Some of the .mdx files are stored in the docs directory</span></span>
<span class=""line""><span>|__mintlify.json              # This JSON file stores navigation and page setup</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671233/How+to+Write+MindsDB+Documentation+-+MindsDB","/pages/resumedraft.action?draftId=1671233","/x/QYAZ"
"1671252","current","Symbl - MindsDB","491527","491782","page","30677","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:54.146Z","2025-10-24T14:00:54.146Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://symbl.ai/"">Symbl</a>, a platform with state-of-the-art and task-specific LLMs that enables businesses to analyze multi-party conversations at scale.
This integration allows MindsDB to process conversation data and extract insights from it.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Symbl to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<div><div><span>Please note that in order to successfully install the dependencies for Symbl, it is necessary to install <code>portaudio</code> and few other Linux packages in the Docker container first. To do this, run the following commands:</span><ol>
<li>Start an interactive shell in the container:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> exec</span><span style=""color: rgb(5,80,174);""> -it</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(10,48,105);""> sh</span></span>
</code></pre></div></div></div><span>If you haven&rsquo;t specified a name when spinning up the MindsDB container with <code>docker run</code>, you can find it by running <code>docker ps</code>.</span><div><div><span>If you are using Docker Desktop, you can navigate to &lsquo;Containers&rsquo;, locate the multi-container application running the extension, click on the <code>mindsdb_service</code> container and then click on the &lsquo;Exec&rsquo; tab to start an interactive shell.</span></div></div><ol start=""2"">
<li>Install the required packages:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">apt-get</span><span style=""color: rgb(10,48,105);""> update</span><span style=""color: rgb(31,35,40);""> &amp;&amp; </span><span style=""color: rgb(149,56,0);"">apt-get</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> -y</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        libportaudio2</span><span style=""color: rgb(10,48,105);""> libportaudiocpp0</span><span style=""color: rgb(10,48,105);""> portaudio19-dev</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        python3-dev</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        build-essential</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        &amp;&amp; </span><span style=""color: rgb(149,56,0);"">rm</span><span style=""color: rgb(5,80,174);""> -rf</span><span style=""color: rgb(10,48,105);""> /var/lib/apt/lists/</span><span style=""color: rgb(5,80,174);"">*</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Symbl from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_symbl</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'symbl'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;app_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;app_id&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;app_secret&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;app_secret&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>app_id</code>: The Symbl app identifier.</li>
<li><code>app_secret</code>: The Symbl app secret.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>First, process the conversation data and get the conversation ID via the <code>get_conversation_id</code> table:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_symbl</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">get_conversation_id</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> audio_url</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;https://symbltestdata.s3.us-east-2.amazonaws.com/newPhonecall.mp3&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Next, use the conversation ID to get the results of the above from the other supported tables:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_symbl</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">get_messages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> conversation_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;5682305049034752&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Other supported tables include:</span>
<ul>
<li><code>get_topics</code></li>
<li><code>get_questions</code></li>
<li><code>get_analytics</code></li>
<li><code>get_action_items</code></li>
</ul>
<div><div><span>The above examples utilize <code>mindsdb_symbl</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div></div>","/spaces/SOP/pages/1671252/Symbl+-+MindsDB","/pages/resumedraft.action?draftId=1671252","/x/VIAZ"
"1671273","current","Amazon Aurora - MindsDB","491527","491782","page","33824","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:02.916Z","2025-10-24T14:01:02.916Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Amazon Aurora handler for MindsDB.</span>
<span><a class=""link"" href=""https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html"">Amazon Aurora</a> is a fully managed relational database engine that&rsquo;s compatible with MySQL and PostgreSQL.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Amazon Aurora to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Amazon Aurora.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented using the existing MindsDB handlers for MySQL and PostgreSQL.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code>: the host name or IP address of the Amazon Aurora DB cluster.</li>
<li><code>port</code>: the TCP/IP port of the Amazon Aurora DB cluster.</li>
<li><code>user</code>: the username used to authenticate with the Amazon Aurora DB cluster.</li>
<li><code>password</code>: the password to authenticate the user with the Amazon Aurora DB cluster.</li>
<li><code>database</code>: the database name to use when connecting with the Amazon Aurora DB cluster.</li>
</ul>
<span>There optional arguments that can be used are as follows:</span>
<ul>
<li><code>db_engine</code>: the database engine of the Amazon Aurora DB cluster. This can take one of two values: &lsquo;mysql&rsquo; or &lsquo;postgresql&rsquo;. This parameter is optional, but if it is not provided, <code>aws_access_key_id</code> and <code>aws_secret_access_key</code> parameters must be provided.</li>
<li><code>aws_access_key_id</code>: the access key for the AWS account. This parameter is optional and is only required to be provided if the <code>db_engine</code> parameter is not provided.</li>
<li><code>aws_secret_access_key</code>: the secret key for the AWS account. This parameter is optional and is only required to be provided if the <code>db_engine</code> parameter is not provided.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to an Amazon Aurora MySQL DB Cluster in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> aurora_mysql_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'aurora'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;db_engine&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mysql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mysqlcluster.cluster-123456789012.us-east-1.rds.amazonaws.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Now, you can use this established connection to query your database as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> aurora_mysql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Similar commands can be used to establish a connection and query Amazon Aurora PostgreSQL DB Cluster:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> aurora_postgres_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'aurora'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;db_engine&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgresql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgresmycluster.cluster-123456789012.us-east-1.rds.amazonaws.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5432</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db &quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> aurora_postgres_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_table</span></span>
</code></pre></div></div></div>
<div><div><span>If you want to switch to different database, you can include it in your query as:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> aurora_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">new_database</span><span style=""color: rgb(31,35,40);"">.example_table;</span></span>
</code></pre></div></div></div></div></div></div>","/spaces/SOP/pages/1671273/Amazon+Aurora+-+MindsDB","/pages/resumedraft.action?draftId=1671273","/x/aYAZ"
"1671294","current","CrateDB - MindsDB","491527","491782","page","41385","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:30.463Z","2025-10-24T14:01:30.463Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the CrateDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://crate.io/"">CrateDB</a> is a distributed SQL database management system that integrates a fully searchable document-oriented data store. It is open-source, written in Java, based on a shared-nothing architecture, and designed for high scalability. CrateDB includes components from Lucene, Elasticsearch and Netty.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect CrateDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to CrateDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>crate</code>, a Python library that allows you to use Python code to run SQL commands on CrateDB.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the hostname or IP adress of the server.</li>
<li><code>port</code> is the port through which connection is to be made.</li>
<li><code>schema_name</code> is schema name to get tables from. Defaults to <code>doc</code>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the CrateDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> crate_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'crate'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;crate&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">4200</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;doc&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> crate_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671294/CrateDB+-+MindsDB","/pages/resumedraft.action?draftId=1671294","/x/foAZ"
"1671315","current","EdgelessDB - MindsDB","491527","491782","page","44441","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:39.942Z","2025-10-24T14:01:39.942Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the EdgelessDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://edgeless.systems/"">Edgeless</a> is a full SQL database, tailor-made for confidential computing. It seamlessly integrates with your existing tools and workflows to help you unlock the full potential of your data.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect EdgelessDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to EdgelessDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL connector.
The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code>: the host name of the EdgelessDB connection</li>
<li><code>port</code>: the port to use when connecting</li>
<li><code>user</code>: the user to authenticate</li>
<li><code>password</code>: the password to authenticate the user</li>
<li><code>database</code>: database name</li>
</ul>
<span>To use the full potensial of EdgelessDB, you can also specify the following arguments:</span>
<ul>
<li><code>ssl</code>: whether to use SSL or not</li>
<li><code>ssl_ca</code>: path or url to the CA certificate</li>
<li><code>ssl_cert</code>: path or url to the client certificate</li>
<li><code>ssl_key</code>: path or url to the client key</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to use EdgelessDB as a data source in MindsDB, you need to use the following syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> edgelessdb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;EdgelessDB&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test123@!Aabvhj&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_schema&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>Or you can use the following syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code>
<span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> edgelessdb_datasource2</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;EdgelessDB&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test123@!Aabvhj&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_schema&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;ssl_cert&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/home/marios/demo/cert.pem&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;ssl_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/home/marios/demo/key.pem&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> edgelessdb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671315/EdgelessDB+-+MindsDB","/pages/resumedraft.action?draftId=1671315","/x/k4AZ"
"1671336","current","IBM Informix - MindsDB","491527","491782","page","47698","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:54.239Z","2025-10-24T14:01:54.239Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the IBM Informix data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.ibm.com/products/informix"">IBM Informix</a> is a product family within IBM&rsquo;s Information Management division that is centered on several relational database management system (RDBMS) offerings. The Informix server supports object&ndash;relational models and (through extensions) data types that are not a part of the SQL standard. The most widely used of these are the JSON, BSON, time series, and spatial extensions, which provide both data type support and language extensions that permit high-performance domain-specific queries and efficient storage for data sets based on semi-structured, time series, and spatial data.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect IBM Informix to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to IBM Informix.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>IfxPy/IfxPyDbi</code>, a Python library that allows you to use Python code to run SQL commands on the Informix database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the hostname or IP address of the server.</li>
<li><code>port</code> is the port through which TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
<li><code>schema_name</code> is the schema name to get tables.</li>
<li><code>server</code> is the name of server you want connect.</li>
<li><code>logging_enabled</code> defines whether logging is enabled or not. Defaults to <code>True</code> if not provided.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Informix database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> informix_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'informix'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;server&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;server&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">9091</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;informix&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;in4mix&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;stores_demo&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;schema_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;love&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;loging_enabled&quot;</span><span style=""color: rgb(31,35,40);"">: False</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> informix_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">items</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>This integration uses <code>IfxPy</code>. As it is in development stage, it can be install using <code>pip install IfxPy</code>. However, it doesn&rsquo;t work with higher versions of Python, therefore, you have to build it from source.</span><div><div class=""leading-tight text-left""><p>On Linux</p></div><div><ol>
<li>This code downloads and extracts the <code>onedb-ODBC</code> driver used to make connection:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(31,35,40);""> $HOME</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);""> Informix</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> Informix</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> home/informix/cli</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">wget</span><span style=""color: rgb(10,48,105);""> https://hcl-onedb.github.io/odbc/OneDB-Linux64-ODBC-Driver.tar</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">sudo</span><span style=""color: rgb(10,48,105);""> tar</span><span style=""color: rgb(10,48,105);""> xvf</span><span style=""color: rgb(10,48,105);"">  OneDB-Linux64-ODBC-Driver.tar</span><span style=""color: rgb(5,80,174);""> -C</span><span style=""color: rgb(10,48,105);""> ./home/informix/cli</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">rm</span><span style=""color: rgb(10,48,105);""> OneDB-Linux64-ODBC-Driver.tar</span></span>
</code></pre></div></div></div><ol start=""2"">
<li>Add enviroment variables in the <code>.bashrc</code> file:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">export</span><span style=""color: rgb(31,35,40);""> INFORMIXDIR</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">$HOME</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">Informix</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">home</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">informix</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">cli</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">onedb-odbc-driver</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">export</span><span style=""color: rgb(31,35,40);""> LD_LIBRARY_PATH</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">${</span><span style=""color: rgb(31,35,40);"">LD_LIBRARY_PATH</span><span style=""color: rgb(31,35,40);"">}${</span><span style=""color: rgb(31,35,40);"">INFORMIXDIR</span><span style=""color: rgb(31,35,40);"">}/</span><span style=""color: rgb(31,35,40);"">lib</span><span style=""color: rgb(31,35,40);"">:${</span><span style=""color: rgb(31,35,40);"">INFORMIXDIR</span><span style=""color: rgb(31,35,40);"">}/</span><span style=""color: rgb(31,35,40);"">lib</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">esql</span><span style=""color: rgb(31,35,40);"">:${</span><span style=""color: rgb(31,35,40);"">INFORMIXDIR</span><span style=""color: rgb(31,35,40);"">}/</span><span style=""color: rgb(31,35,40);"">lib</span><span style=""color: rgb(31,35,40);"">/</span><span style=""color: rgb(31,35,40);"">cli</span></span>
</code></pre></div></div></div><ol start=""3"">
<li>This code clones the <code>IfxPy</code> repo, builds a wheel, and installs it:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> wheel</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> clone</span><span style=""color: rgb(10,48,105);""> https://github.com/OpenInformix/IfxPy.git</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> IfxPy/IfxPy</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(10,48,105);""> setup.py</span><span style=""color: rgb(10,48,105);""> bdist_wheel</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> --find-links=./dist</span><span style=""color: rgb(10,48,105);""> IfxPy</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">rm</span><span style=""color: rgb(5,80,174);""> -rf</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
</code></pre></div></div></div></div><div class=""leading-tight text-left""><p>On Windows</p></div><div><ol>
<li>This code downloads and extracts the <code>onedb-ODBC</code> driver used to make connection:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(31,35,40);""> $HOME</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);""> Informix</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> Informix</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);"">  /home/informix/cli</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">wget</span><span style=""color: rgb(10,48,105);""> https://hcl-onedb.github.io/odbc/OneDB-Win64-ODBC-Driver.zip</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">tar</span><span style=""color: rgb(10,48,105);""> xvf</span><span style=""color: rgb(10,48,105);"">  OneDB-Win64-ODBC-Driver.zip</span><span style=""color: rgb(5,80,174);""> -C</span><span style=""color: rgb(10,48,105);""> ./home/informix/cli</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">del</span><span style=""color: rgb(10,48,105);""> OneDB-Win64-ODBC-Driver.zip</span></span>
</code></pre></div></div></div><ol start=""2"">
<li>Add an enviroment variable:</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">set</span><span style=""color: rgb(10,48,105);""> INFORMIXDIR=</span><span style=""color: rgb(31,35,40);"">$HOME</span><span style=""color: rgb(10,48,105);"">/Informix/home/informix/cli/onedb-odbc-driver</span></span>
</code></pre></div></div></div><ol start=""3"">
<li>
<span>Add <code>%INFORMIXDIR%\bin</code> to the PATH environment variable.</span>
</li>
<li>
<span>This code clones the <code>IfxPy</code> repo, builds a wheel, and installs it:</span>
</li>
</ol><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> wheel</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> clone</span><span style=""color: rgb(10,48,105);""> https://github.com/OpenInformix/IfxPy.git</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> IfxPy/IfxPy</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(10,48,105);""> setup.py</span><span style=""color: rgb(10,48,105);""> bdist_wheel</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> --find-links=./dist</span><span style=""color: rgb(10,48,105);""> IfxPy</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> ..</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">rmdir</span><span style=""color: rgb(10,48,105);""> Temp</span></span>
</code></pre></div></div></div></div></div></div></div></div>","/spaces/SOP/pages/1671336/IBM+Informix+-+MindsDB","/pages/resumedraft.action?draftId=1671336","/x/qIAZ"
"1671355","current","Upload CSV, XLSX, XLS files to MindsDB - MindsDB","491527","491782","page","66133","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:50.043Z","2025-10-24T14:02:50.043Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can upload CSV, XLSX, and XLS files of any size to MindsDB that runs locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/contribute/install"">pip</a>.</span>
<span>CSV, XLSX, XLS files are stored in the form of a table inside MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload files</span></h2>
<span>Follow the steps below to upload a file:</span>
<ol>
<li>Click on the <code>Add</code> dropdown and choose <code>Upload file</code>.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""666"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0a25773f735c4f147425651de94caca4"" style="""" width=""1042"" /></span></span></p>
<ol start=""2"">
<li>Upload a file and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""834"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_computer.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=bd588de4dd6fa52b36eec2761e3242b3"" style="""" width=""868"" /></span></span></p>
<ol start=""3"">
<li>Alternatively, upload a file as a link and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""804"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_url.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=3d2919867ba34c821c8a153a9ece4efe"" style="""" width=""886"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-files"">‚Äã</a></div><span class=""cursor-pointer"">Query files</span></h2>
<span>The CSV, XLSX, and XLS files may contain one or more sheets. Here is how to query data within MindsDB.</span>
<span>Query for the list of available sheets in the file uploaded under the name <code>my_file</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Query for the content of one of the sheets listed with the command above.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">.my_sheet;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671355/Upload+CSV+XLSX+XLS+files+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1671355","/x/u4AZ"
"1671372","current","MindsDB as a Federated Query Engine - MindsDB","491527","491782","page","69243","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:18.492Z","2025-10-24T14:03:18.492Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB supports federated querying, enabling users to access and analyze data across a wide variety of structured and unstructured data sources using SQL.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1082"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb-fqe.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=bf648451b271f0b84b3d75f96b7f6dc8"" style="""" width=""1682"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-query-pushdown-works-in-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">How Query Pushdown Works in MindsDB</span></h2>
<span>MindsDB acts as a federated query engine by translating and pushing down SQL queries to the native engines of connected data sources. Rather than retrieving data and processing queries within MindsDB, it delegates computation to the underlying data sources. This &ldquo;pushdown&rdquo; approach ensures:</span>
<ul>
<li>
<span>High performance: Queries leverage the indexing and processing capabilities of the native engines.</span>
</li>
<li>
<span>Low resource usage: MindsDB avoids executing resource-heavy and high-latency operations within the query engine, preventing bottlenecks in CPU, memory, or network.</span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-translation-limits"">‚Äã</a></div><span class=""cursor-pointer"">Query Translation Limits</span></h2>
<span>Each connected data source has its own SQL dialect, features, and constraints. While MindsDB SQL provides a unified interface, not all SQL expressions or data types can be translated across every database engine. In cases where a native data type or expression is not supported by the underlying engine:</span>
<ul>
<li>
<span>The query is passed from MindsDB to the data source in its current form, with unsupported data types handled as strings.</span>
</li>
<li>
<span>If the data source does not support the syntax, it may return an error.</span>
</li>
<li>
<span>Errors originating from the underlying data source are passed through to the user to provide the most accurate context.</span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#cross-database-join-limits"">‚Äã</a></div><span class=""cursor-pointer"">Cross-Database Join Limits</span></h2>
<span>MindsDB allows joining tables across disparate data sources. However, cross-database joins introduce complexity:</span>
<ul>
<li>
<span>Pushdown can occur partially, not for all joined data sources.</span>
</li>
<li>
<span>Join conditions for a particular data source must be executable by its underlying database engine.</span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#recap"">‚Äã</a></div><span class=""cursor-pointer"">Recap</span></h2>
<span>MindsDB&rsquo;s federated query engine enables seamless integration with diverse data systems, but effective use requires understanding the limitations of SQL translation and pushdown:</span>
<ul>
<li>
<span>Pushdown is preferred to optimize performance and avoid resource strain.</span>
</li>
<li>
<span>Not all SQL constructs are translatable, especially for vector stores or non-relational systems.</span>
</li>
<li>
<span>Errors may occur when a connected data source cannot parse the generated query.</span>
</li>
<li>
<span>Workarounds include query decomposition, using simpler expressions, and avoiding unsupported joins or vector logic.</span>
</li>
</ul>
<span>Understanding these nuances helps users debug query errors more effectively and make full use of MindsDB&rsquo;s federated query capabilities.</span></div>","/spaces/SOP/pages/1671372/MindsDB+as+a+Federated+Query+Engine+-+MindsDB","/pages/resumedraft.action?draftId=1671372","/x/zIAZ"
"1671389","current","MindsDB and Metabase - MindsDB","491527","491782","page","74395","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:46.925Z","2025-10-24T14:03:46.925Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Metabase is open-source software that facilitates data analysis. It lets you visualize your data easily and intuitively. Now that MindsDB supports the MySQL binary protocol, you can connect it to Metabase and see the forecasts by creating and training the models.</span>
<span>For more information, visit <a class=""link"" href=""https://www.metabase.com/"">Metabase</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB</span></h3>
<span>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#metabase"">‚Äã</a></div><span class=""cursor-pointer"">Metabase</span></h3>
<span>Now, let&rsquo;s set up the Metabase by following one of the approaches presented on
<a class=""link"" href=""https://www.metabase.com/start/oss/"">the Metabase Open Source Edition page</a>.</span>
<span>Here, we use the
<a class=""link"" href=""https://www.metabase.com/docs/latest/installation-and-operation/running-the-metabase-jar-file.html"">.jar approach</a>
for Metabase.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<span>Follow the steps below to connect your MindsDB to Metabase.</span>
<ol>
<li>Open your Metabase and navigate to the <em>Admin settings</em> by clicking the cog
in the bottom left corner.</li>
<li>Once there, click on <em>Databases</em> in the top navigation bar.</li>
<li>Click on <em>Add database</em> in the top right corner.</li>
<li>Fill in the form using the following data:</li>
</ol>
<div class=""tabs tabs tab-container""><ul><li class=""cursor-pointer""><div> Local MindsDB</div></li></ul><div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>Database type: `MySQL`</span></span>
<span class=""line""><span>Display name: `MindsDB`</span></span>
<span class=""line""><span>Host: `localhost`</span></span>
<span class=""line""><span>Port: `47335`</span></span>
<span class=""line""><span>Database name: `mindsdb`</span></span>
<span class=""line""><span>Username: `mindsdb`</span></span>
<span class=""line""><span>Password: *leave it empty*</span></span>
</code></pre></div></div></div></div></div>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""995"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/metabase_add_database.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=bb81786b7bc5cfe4041d7bd7cad2b62a"" style="""" width=""1920"" /></span></span></p>
<ol start=""5"">
<li>Click on <em>Save</em>.</li>
</ol>
<span>Now you&rsquo;re connected!</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""424"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/metabase_connected.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=ccc28ac83adf76a4968c69843cfb0efb"" style="""" width=""1920"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>Now that the connection between MindsDB and Metabase is established, let&rsquo;s do
some examples.</span>
<span>Most of the SQL statements that you usually run in your
<a class=""link"" href=""/connect/mindsdb_editor"">MindsDB SQL Editor</a> can be run in Metabase as well.
Let&rsquo;s start with something easy.</span>
<span>On your Metabase&rsquo;s home page, click on <em>New &gt; SQL query</em> in the top right corner
and then, select your MindsDB database.</span>
<span>Let&rsquo;s execute the following command in the editor.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW TABLES;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""994"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/metabase_run_query_show_tables.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=b8a514c8c84c42b4d50d65f5940f398a"" style="""" width=""1920"" /></span></span></p>
<span>Please note that creating a
<a class=""link"" href=""/sql/tutorials/home-rentals#connecting-the-data"">database connection</a> using
the <code>CREATE DATABASE</code> statement fails because of the curly braces (<code>{}</code>) being
used by JDBC as the escape sequences.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> example_db</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""994"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/metabase_run_query_failure.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=30132d758f4731ad5722ad37665af502"" style="""" width=""1920"" /></span></span></p>
<span>You can overcome this issue using the
<a class=""link"" href=""/connect/mindsdb_editor"">MindsDB SQL Editor</a> to create a database.</span>
<span>Now, getting back to the Metabase, let&rsquo;s run some queries on the database
created with the help of the <a class=""link"" href=""/connect/mindsdb_editor"">MindsDB SQL Editor</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_data</span><span style=""color: rgb(31,35,40);"">.home_rentals</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""994"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/metabase_run_query_home_rentals.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=1ace904e4d6e9543beffdb8848647997"" style="""" width=""1920"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1671389/MindsDB+and+Metabase+-+MindsDB","/pages/resumedraft.action?draftId=1671389","/x/3YAZ"
"1671412","current","Remove a Project - MindsDB","491527","491782","page","94783","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:27.619Z","2025-10-24T14:10:25.862Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>drop_project()</code> function removed a project from MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>drop_project()</code> method to remove a project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server.drop_project(</span><span style=""color: rgb(10,48,105);"">'project_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671412/Remove+a+Project+-+MindsDB","/pages/resumedraft.action?draftId=1671412","/x/9IAZ"
"1671431","current","Query - MindsDB","491527","491782","page","113061","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:40.005Z","2025-10-24T14:07:40.005Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">     --url</span><span style=""color: rgb(10,48,105);""> https://cloud.mindsdb.com/api/sql/query</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">     --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">     --data</span><span style=""color: rgb(10,48,105);""> '</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">     &quot;query&quot;: &quot;SELECT * FROM example_db.demo_data.home_rentals LIMIT 10;&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}</span></span>

</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1671431/Query+-+MindsDB","/pages/resumedraft.action?draftId=1671431","/x/B4EZ"
"1671450","current","List Views - MindsDB","491527","491782","page","113846","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:08:09.052Z","2025-10-24T14:11:12.170Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>list_views()</code> function is executed on a project and lists all views available in this project.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>list_views()</code> method to list all views in a project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.list_views()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1671450/List+Views+-+MindsDB","/pages/resumedraft.action?draftId=1671450","/x/GoEZ"
"1671483","current","Overview - MindsDB","491527","491782","page","115849","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:09:20.132Z","2025-10-24T14:11:18.814Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides Python SDK, enabling its integration into Python environments.</span>
<span>Follow these steps to get started:</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Set up the development environment</p><div><span>For Python, <a class=""link"" href=""/sdks/python/installation"">install the package</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Connect a data source</p><div><span>Connect a data source in <a class=""link"" href=""/sdks/python/create_database"">Python</a>.<br />
Explore all available <a class=""link"" href=""/integrations/data-overview"">data sources here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Configure an AI engine</p><div><span>Configure an AI engine in <a class=""link"" href=""/sdks/python/create_ml_engine"">Python</a>.<br />
Explore all available <a class=""link"" href=""/integrations/ai-overview"">AI engines here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>4</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Create and deploy an AI/ML model</p><div><span>Create and deploy an AI/ML model in <a class=""link"" href=""/sdks/python/create_model"">Python</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>5</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Query for predictions</p><div><span>Query for predictions in <a class=""link"" href=""/sdks/python/get-batch-predictions"">Python</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>6</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Automate customized workflows</p><div><span>Automate tasks by scheduling jobs in <a class=""link"" href=""/sdks/python/create_job"">Python</a>.</span></div></div></div></div></div>","/spaces/SOP/pages/1671483/Overview+-+MindsDB","/pages/resumedraft.action?draftId=1671483","/x/O4EZ"
"1703973","current","Docker for MindsDB - MindsDB","491527","491782","page","10203","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:29.644Z","2025-10-24T13:53:29.644Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides Docker images that facilitate running MindsDB in Docker containers.</span>
<div><div><span>As MindsDB integrates with numerous <a class=""link"" href=""/integrations/data-overview"">data sources</a> and <a class=""link"" href=""/integrations/ai-overview"">AI frameworks</a>, each integration requires a set of dependencies. Hence, MindsDB provides multiple Docker images for different tasks, as outlined below.</span><ul>
<li>
<span><code>mindsdb/mindsdb:latest</code> (or <code>mindsdb/mindsdb</code>)
It is the lightweight Docker image of MindsDB that comes with <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/default_handlers.txt"">these integrations preloaded</a>.</span>
</li>
<li>
<span><code>mindsdb/mindsdb:lightwood</code>
It is the Docker image of MindsDB that comes with <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/default_handlers.txt"">these integrations</a> and the Lightwood integration preloaded.</span>
</li>
<li>
<span><code>mindsdb/mindsdb:huggingface</code>
It is the Docker image of MindsDB that comes with <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/default_handlers.txt"">these integrations</a> and the Hugging Face integration preloaded.</span>
</li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure you have installed Docker, following the <a class=""link"" href=""https://docs.docker.com/install"">official Docker documentation</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<span>This setup of MindsDB uses one of the available Docker images, as listed above.</span>
<div><div><span>When running MindsDB in one container and the integration you want to connect to it (such as Ollama or PGVector) in another container, then use <code>http://host.docker.internal</code> instead of <code>localhost</code> when connecting this integration to MindsDB.</span></div></div>
<span>Follow the steps to set up MindsDB in a Docker container.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">Install MindsDB</span></h3>
<span>Run this command to create a Docker container with MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">-e </span><span style=""color: rgb(10,48,105);"">MINDSDB_APIS=http,mysql</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">-p </span><span style=""color: rgb(10,48,105);"">47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">mindsdb/mindsdb</span></span>
</code></pre></div></div></div>
<span>Where:</span>
<ul>
<li><code>docker run</code> is a native Docker command used to spin up a container.</li>
<li><code>--name mindsdb_container</code> defines a name for the container.</li>
<li><code>-e MINDSDB_APIS=http,mysql</code> defines the APIs to be exposed by the MindsDB instance. All available APIs include <code>http</code>, <code>mysql</code>, and <code>postgres</code>.</li>
<li><code>-p 47334:47334 -p 47335:47335</code> defines the ports where the APIs are exposed (HTTP and MySQL respectively).</li>
<li><code>mindsdb/mindsdb</code> is a Docker image provided by MindsDB. You can choose a different one from the list above.</li>
</ul>
<span>Once the container is created, you can use the following commands:</span>
<ul>
<li><code>docker stop mindsdb_container</code> to stop the container. <em>Note that this may not always be necessary because when turning off the host machine, the container will also be shut down.</em></li>
<li><code>docker start mindsdb_container</code> to restart a stopped container with all its previous changes (such as any dependencies that were installed) intact. <em>Note that <code>docker start</code> restarts a stopped container, while <code>docker run</code> creates a new container.</em></li>
</ul>
<div><div><span>If you don&rsquo;t want to follow the logs and get the prompt back, add the <code>-d</code> flag that stands for <em>detach</em>.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -d</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<div><div><span>If you want to persist your models and configurations in the host machine, run these commands:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">mkdir</span><span style=""color: rgb(10,48,105);""> mdb_data</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -v</span><span style=""color: rgb(31,35,40);""> $(</span><span style=""color: rgb(5,80,174);"">pwd</span><span style=""color: rgb(31,35,40);"">)</span><span style=""color: rgb(10,48,105);"">/mdb_data:/root/mdb_storage</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div><span>Where <code>-v $(pwd)/mdb_data:/root/mdb_storage</code> maps the newly created folder <code>mdb_data</code> on the host machine to the <code>/root/mdb_storage</code> inside the container.</span></div></div>
<span>Now you can access the MindsDB editor by going to <code>127.0.0.1:47334</code> in your browser.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""949"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb-editor.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=60396544895f74128933e18098e8258a"" style="""" width=""1917"" /></span></span></p>
<div><div><span>If you experience any issues related to MKL or your training process does not complete, please add the <code>MKL_SERVICE_FORCE_INTEL</code> environment variable, as below.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MKL_SERVICE_FORCE_INTEL=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<div><div><span>If you want to enable authentication for MindsDB, you do so by passing the <code>MINDSDB_USERNAME</code> and <code>MINDSDB_PASSWORD</code> environment variables when running the container.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_USERNAME='admin'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_PASSWORD='password'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-dependencies"">‚Äã</a></div><span class=""cursor-pointer"">Install dependencies</span></h3>
<span>MindsDB integrates with numerous data sources and AI frameworks. To use any of the integrations, you should ensure that the required dependencies are installed in the Docker container.</span>
<span><strong>Method 1</strong></span>
<span>Install dependencies directly from MindsDB editor. Go to <em>Settings</em> and <em>Manage Integrations</em>, select integrations you want to use and click on <em>Install</em>.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2101"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/install-dependencies-gui.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=3a56cbc1e76b7b7ed6140473ed7380e1"" style="""" width=""3688"" /></span></span></p>
<span><strong>Method 2</strong></span>
<span>Start the MindsDB Docker container:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> start</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span></span>
</code></pre></div></div></div>
<div><div><span>If you haven&rsquo;t specified a container name when spinning up a container with <code>docker run</code>, you can find it by running <code>docker ps</code>.</span></div></div>
<div><div><span>If you haven&rsquo;t yet created a container, use this command:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -d</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<span>Start an interactive shell in the container:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> exec</span><span style=""color: rgb(5,80,174);""> -it</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(10,48,105);""> sh</span></span>
</code></pre></div></div></div>
<span>Install the dependencies:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> .[handler_name]</span></span>
</code></pre></div></div></div>
<span>For example, run this command to install dependencies for the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/openai_handler"">OpenAI handler</a>:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> .[openai]</span></span>
</code></pre></div></div></div>
<span>Exit the interactive shell:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">exit</span></span>
</code></pre></div></div></div>
<span>Restart the container:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> restart</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#configuration"">‚Äã</a></div><span class=""cursor-pointer"">Configuration</span></h2>
<span>This is a configuration for MindsDB&rsquo;s Docker image that includes storage location, log level, debugging information, installed integrations, and API endpoints. These parameters can be customized by modifying a JSON file that stores default configuration.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#default-configuration"">‚Äã</a></div><span class=""cursor-pointer"">Default configuration</span></h3>
<span>The default configuration for MindsDB&rsquo;s Docker image is stored as a JSON code, as below.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;config_version&quot;</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">&quot;1.4&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;paths&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">        &quot;root&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/root/mdb_storage&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;debug&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">false</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;integrations&quot;</span><span style=""color: rgb(31,35,40);"">: {},</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">    &quot;api&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">        &quot;http&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;0.0.0.0&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;47334&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">        &quot;mysql&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;0.0.0.0&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;47335&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(17,99,41);"">            &quot;ssl&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#custom-configuration"">‚Äã</a></div><span class=""cursor-pointer"">Custom configuration</span></h3>
<span>To override the default configuration, you can mount a config file created in your host machine over <code>/root/mindsdb_config.json</code>, as below.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http</span><span style=""color: rgb(5,80,174);""> -d</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -v</span><span style=""color: rgb(31,35,40);""> $(</span><span style=""color: rgb(5,80,174);"">pwd</span><span style=""color: rgb(31,35,40);"">)</span><span style=""color: rgb(10,48,105);"">/mdb_config.json:/root/mindsdb_config.json</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div>
<div><div><span><strong>What&rsquo;s next?</strong></span><span>Now that you installed and started MindsDB locally in your Docker container, go ahead and find out how to create and train a model using the <a class=""link"" href=""/sql/create/model""><code>CREATE MODEL</code></a> statement.</span><span>Check out the <a class=""link"" href=""/use-cases/overview"">Use Cases</a> section to follow tutorials that cover Large Language Models, Chatbots, Time Series, Classification, and Regression models, Semantic Search, and more.</span></div></div></div>","/spaces/SOP/pages/1703973/Docker+for+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1703973","/x/JQAa"
"1703996","current","Instatus - MindsDB","491527","491782","page","22951","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:19.552Z","2025-10-24T14:00:19.552Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Instatus to MindsDB.</span>
<span><a class=""link"" href=""https://instatus.com/"">Instatus</a> is a cloud-based status page software that enables users to communicate status information using incidents and maintenances. It serves as a SaaS platform for creating status pages for services.</span>
<span>The Instatus Handler for MindsDB offers an interface to connect with Instatus via APIs and retrieve status pages.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Initialize the Instatus handler with the following parameter:</span>
<ul>
<li><code>api_key</code>: Instatus API key for authentication. Obtain it from <a class=""link"" href=""https://dashboard.instatus.com/developer"">Instatus Developer Dashboard</a>.</li>
</ul>
<span>Start by creating a database with the new instatus engine using the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_instatus</span><span style=""color: rgb(110,119,129);""> --- Display name for the database.</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'instatus'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(110,119,129);"">--- Name of the MindsDB handler.</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;your-instatus-api-key&gt;&quot;</span><span style=""color: rgb(110,119,129);""> --- Instatus API key to use for authentication.</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>To get a status page, use the <code>SELECT</code> statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">status</span><span style=""color: rgb(31,35,40);"">, subdomain</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_instatus</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">status_pages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '&lt;status-page-id&gt;'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To create a new status page, use the <code>INSERT</code> statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> mindsdb_instatus</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">status_pages</span><span style=""color: rgb(31,35,40);""> (email, </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);"">, subdomain, components, logoUrl, faviconUrl, websiteUrl, </span><span style=""color: rgb(207,34,46);"">language</span><span style=""color: rgb(31,35,40);"">, useLargeHeader, brandColor, okColor, disruptedColor, degradedColor, downColor, noticeColor, unknownColor, googleAnalytics, subscribeBySms, smsService, twilioSid, twilioToken, twilioSender, nexmoKey, nexmoSecret, nexmoSender, htmlInMeta, htmlAboveHeader, htmlBelowHeader, htmlAboveFooter, htmlBelowFooter, htmlBelowSummary, cssGlobal, launchDate, </span><span style=""color: rgb(207,34,46);"">dateFormat</span><span style=""color: rgb(31,35,40);"">, dateFormatShort, timeFormat)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'yourname@gmail.com'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'mindsdb'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'mindsdb-instatus'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'[&quot;Website&quot;, &quot;App&quot;, &quot;API&quot;]'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://instatus.com/sample.png'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://instatus.com/favicon-32x32.png'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'https://instatus.com'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'en'</span><span style=""color: rgb(31,35,40);"">, true, </span><span style=""color: rgb(10,48,105);"">'#111'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#33B17E'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#FF8C03'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#ECC94B'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#DC123D'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#70808F'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'#DFE0E1'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'UA-00000000-1'</span><span style=""color: rgb(31,35,40);"">, true, </span><span style=""color: rgb(10,48,105);"">'twilio'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'YOUR_TWILIO_SID'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'YOUR_TWILIO_TOKEN'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'YOUR_TWILIO_SENDER'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">null</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'MMMMMM d, yyyy'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'MMM yyyy'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'p'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The following fields are required when inserting new status pages:</span><ul>
<li><code>email</code> (e.g. &lsquo;<a class=""link"" href=""mailto:yourname@gmail.com"">yourname@gmail.com</a>&rsquo;)</li>
<li><code>name</code> (e.g &lsquo;mindsdb&rsquo;)</li>
<li><code>subdomain</code> (e.g. &lsquo;mindsdb-docs&rsquo;)</li>
<li><code>components</code> (e.g. &rsquo;[&ldquo;Website&rdquo;, &ldquo;App&rdquo;, &ldquo;API&rdquo;]&rsquo;)</li>
</ul><span>The other fields are optional.</span></div></div>
<span>To update an existing status page, use the <code>UPDATE</code> statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(5,80,174);""> mindsdb_instatus</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">status_pages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'mindsdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    status</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'UP'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    logoUrl </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'https://instatus.com/sample.png'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    faviconUrl </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'https://instatus.com/favicon-32x32.png'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    websiteUrl </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'https://instatus.com'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    language</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'en'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    translations </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;name&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;fr&quot;: &quot;nasa&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '&lt;status-page-id&gt;'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1703996/Instatus+-+MindsDB","/pages/resumedraft.action?draftId=1703996","/x/PAAa"
"1704021","current","IBM Db2 - MindsDB","491527","491782","page","47091","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:51.677Z","2025-10-24T14:01:51.677Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.ibm.com/db2"">IBM Db2</a>, the cloud-native database built to power low-latency transactions, real-time analytics and AI applications at scale.
The integration allows MindsDB to access data stored in the IBM Db2 database and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect IBM Db2 to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your IBM Db2 database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> db2_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'db2'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;db2inst1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>host</code>: The hostname, IP address, or URL of the IBM Db2 database.</li>
<li><code>user</code>: The username for the IBM Db2 database.</li>
<li><code>password</code>: The password for the IBM Db2 database.</li>
<li><code>database</code>: The name of the IBM Db2 database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>port</code>: The port number for connecting to the IBM Db2 database. Default is <code>50000</code>.</li>
<li><code>schema</code>: The database schema to use within the IBM Db2 database.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> db2_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run IBM Db2 native queries directly on the connected database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> db2_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    DINFO (DEPTNO, AVGSALARY, EMPCOUNT) </span><span style=""color: rgb(207,34,46);"">AS</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> OTHERS</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">WORKDEPT</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">AVG</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(5,80,174);"">OTHERS</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">SALARY</span><span style=""color: rgb(31,35,40);"">), </span><span style=""color: rgb(5,80,174);"">COUNT</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            FROM</span><span style=""color: rgb(31,35,40);""> EMPLOYEE OTHERS</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            GROUP BY</span><span style=""color: rgb(5,80,174);""> OTHERS</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">WORKDEPT</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        ),</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    DINFOMAX </span><span style=""color: rgb(207,34,46);"">AS</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> MAX</span><span style=""color: rgb(31,35,40);"">(AVGSALARY) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> AVGMAX </span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> DINFO)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(5,80,174);""> THIS_EMP</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">EMPNO</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">THIS_EMP</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">SALARY</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        DINFO</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">AVGSALARY</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">DINFO</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">EMPCOUNT</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">DINFOMAX</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">AVGMAX</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> EMPLOYEE THIS_EMP, DINFO, DINFOMAX</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(5,80,174);""> THIS_EMP</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">JOB</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'SALESREP'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    AND</span><span style=""color: rgb(5,80,174);""> THIS_EMP</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">WORKDEPT</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> DINFO</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">DEPTNO</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>db2_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the IBM Db2 database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the IBM Db2 database is active.</li>
<li>Confirm that host, user, password and database are correct. Try a direct connection using a client like DBeaver.</li>
<li>Ensure a stable network between MindsDB and the IBM Db2 database.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<span>This <a class=""link"" href=""https://www.ibm.com/docs/en/db2/11.5?topic=connect-common-db2-problems"">guide</a> of common connection Db2 connection issues provided by IBM might also be helpful.</span></div>","/spaces/SOP/pages/1704021/IBM+Db2+-+MindsDB","/pages/resumedraft.action?draftId=1704021","/x/VQAa"
"1704042","current","MariaDB SkySQL Setup Guide with MindsDB - MindsDB","491527","491782","page","72501","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:33.059Z","2025-10-24T14:03:33.059Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Find more information on MariaDB Sky SQL <a class=""link"" href=""https://cloud.MariaDB.com/"">here</a></span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#1-select-your-service-for-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">1. Select your service for MindsDB</span></h2>
<span>If you haven&rsquo;t already, identify the service to be enabled with MindsDB and make
sure it is running. Otherwise, skip to step 2.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#2-add-mindsdb-to-your-service-allowlist"">‚Äã</a></div><span class=""cursor-pointer"">2. Add MindsDB to your service Allowlist</span></h2>
<span>Access to MariaDB SkySQL services is <a class=""link"" href=""https://mariadb.com/products/skysql/docs/security/firewalls/ip-allowlist-services/"">restricted on a per-service basis</a>. Add the following IP addresses to allow MindsDB to connect to your MariaDB service, do this by clicking on the cog icon and navigating to Security Access. In the dialog, input as prompted &ndash; one by one &ndash; the following IPs:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>18.220.205.95</span></span>
<span class=""line""><span>3.19.152.46</span></span>
<span class=""line""><span>52.14.91.162</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#3-download-your-service-pem-file"">‚Äã</a></div><span class=""cursor-pointer"">3. Download your service .pem file</span></h2>
<span>A <a class=""link"" href=""https://mariadb.com/products/skysql/docs/connect/connection-parameters-portal/#certificate-authority-chain"">certificate authority chain</a> (.pem file) must be provided for proper TLS certificate validation.</span>
<span>From your selected service, click on the world globe icon (Connect to service). In the Login Credentials section, click Download. The <code>aws_skysql_chain.pem</code>
file will download onto your machine.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#4-publically-expose-your-service-pem-file"">‚Äã</a></div><span class=""cursor-pointer"">4. Publically Expose your service .pem File</span></h2>
<span>Select secure storage for the <code>aws_skysql_chain.pem</code> file that allows a working public URL or localpath. For example, you can store it in an S3 bucket.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#5-link-mindsdb-to-your-mariadb-skysql-service"">‚Äã</a></div><span class=""cursor-pointer"">5. Link MindsDB to your MariaDB SkySQL Service</span></h2>
<span>To print the query template, go to MindsDB Editor and add a new data source from the Connect tab, choose MariaDB SkySQL from the list. Fill in the values and run a query to complete the setup.</span>
<span>Here are the codes:</span>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> maria_datasource</span><span style=""color: rgb(110,119,129);"">            --- display name for the database</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MariaDB'</span><span style=""color: rgb(31,35,40);"">,                      </span><span style=""color: rgb(110,119,129);"">--- name of the MindsDB handler</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(31,35,40);"">,                              </span><span style=""color: rgb(110,119,129);"">--- host IP address or URL</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: ,                                 </span><span style=""color: rgb(110,119,129);"">--- port used to make TCP/IP connection</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(31,35,40);"">,                          </span><span style=""color: rgb(110,119,129);"">--- database name</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(31,35,40);"">,                              </span><span style=""color: rgb(110,119,129);"">--- database user</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(31,35,40);"">,                          </span><span style=""color: rgb(110,119,129);"">--- database password</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;ssl&quot;</span><span style=""color: rgb(31,35,40);"">: True</span><span style=""color: rgb(207,34,46);"">/</span><span style=""color: rgb(31,35,40);"">False,                        </span><span style=""color: rgb(110,119,129);"">--- optional, the `ssl` parameter value indicates whether SSL is enabled (`True`) or disabled (`False`)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;ssl_ca&quot;</span><span style=""color: rgb(31,35,40);"">: {                               </span><span style=""color: rgb(110,119,129);"">--- optional, SSL Certificate Authority</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(110,119,129);"">                                 --- either &quot;path&quot; or &quot;url&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;ssl_cert&quot;</span><span style=""color: rgb(31,35,40);"">: {                             </span><span style=""color: rgb(110,119,129);"">--- optional, SSL certificates</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(110,119,129);"">                                  --- either &quot;path&quot; or &quot;url&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;ssl_key&quot;</span><span style=""color: rgb(31,35,40);"">: {                              </span><span style=""color: rgb(110,119,129);"">--- optional, SSL keys</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; &quot;</span><span style=""color: rgb(110,119,129);"">                                 --- either &quot;path&quot; or &quot;url&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div></div></div>
<br />
<br />
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1704042/MariaDB+SkySQL+Setup+Guide+with+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1704042","/x/agAa"
"1704067","current","Standard Functions - MindsDB","491527","491782","page","79500","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:06.124Z","2025-10-24T14:04:06.124Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB supports standard SQL functions via DuckDB and MySQL engines.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#duckdb-functions"">‚Äã</a></div><span class=""cursor-pointer"">DuckDB Functions</span></h2>
<span>MindsDB executes functions on the underlying DuckDB engine. Therefore, <a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/overview"">all DuckDB functions</a> are supported within MindsDB out of the box.</span>
<ul>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/aggregates"">Aggregate Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/array"">Array Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/bitstring"">Bitstring Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/blob"">Blob Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/dateformat"">Date Format Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/date"">Date Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/datepart"">Date Part Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/enum"">Enum Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/interval"">Interval Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/lambda"">Lambda Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/list"">List Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/map"">Map Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/nested"">Nested Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/numeric"">Numeric Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/pattern_matching"">Pattern Matching</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/regular_expressions"">Regular Expressions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/struct"">Struct Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/text"">Text Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/time"">Time Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/timestamp"">Timestamp Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/timestamptz"">Timestamp with Time Zone Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/union"">Union Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/utility"">Utility Functions</a></li>
<li><a class=""link"" href=""https://duckdb.org/docs/stable/sql/functions/window_functions"">Window Functions</a></li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mysql-functions"">‚Äã</a></div><span class=""cursor-pointer"">MySQL Functions</span></h2>
<span>MindsDB executes MySQL-style functions on the underlying DuckDB engine. The following functions have been adapted to MySQL-style functions.</span>
<span>String functions:</span>
<ul>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_char""><code>CHAR</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_format""><code>FORMAT</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_instr""><code>INSTR</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_length""><code>LENGTH</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_locate""><code>LOCATE</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_substring-index""><code>SUBSTRING_INDEX</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/string-functions.html#function_unhex""><code>UNHEX</code></a></li>
</ul>
<span>Date and time functions:</span>
<ul>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_adddate""><code>ADDDATE</code></a></li>
<li>

</li>
<li>

</li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_curdate""><code>CURDATE</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_curtime""><code>CURTIME</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_date-add""><code>DATE_ADD</code></a></li>
<li>

</li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_date-sub""><code>DATE_SUB</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_datediff""><code>DATEDIFF</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_dayname""><code>DAYNAME</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_dayofmonth""><code>DAYOFMONTH</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_dayofweek""><code>DAYOFWEEK</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_dayofyear""><code>DAYOFYEAR</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_extract""><code>EXTRACT</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_from-days""><code>FROM_DAYS</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_from-unixtime""><code>FROM_UNIXTIME</code></a></li>
<li>

</li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/date-and-time-functions.html#function_timestampdiff""><code>TIMESTAMPDIFF</code></a></li>
</ul>
<span>Other functions:</span>
<ul>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/regexp.html#function_regexp-substr""><code>REGEXP_SUBSTR</code></a></li>
<li><a class=""link"" href=""https://dev.mysql.com/doc/refman/8.4/en/encryption-functions.html#function_sha2""><code>SHA2</code></a></li>
</ul></div>","/spaces/SOP/pages/1704067/Standard+Functions+-+MindsDB","/pages/resumedraft.action?draftId=1704067","/x/gwAa"
"1704182","current","Query a View - MindsDB","491527","491782","page","88174","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:54.841Z","2025-10-24T14:11:37.366Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>query()</code> function is executed on a view that resides in one of the projects.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">project_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM my_project.my_view LIMIT 100'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>You can query for newly added data using the functionality introduced by the <a class=""link"" href=""/mindsdb_sql/sql/create/jobs#last""><code>LAST</code> keyword</a> as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> server</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">databases</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">views</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">view_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">filter</span><span style=""color: rgb(31,35,40);"">(column_name</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'value'</span><span style=""color: rgb(31,35,40);"">).track(</span><span style=""color: rgb(10,48,105);"">'timestamp_column'</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);""># </span><span style=""color: rgb(207,34,46);"">first</span><span style=""color: rgb(207,34,46);""> call</span><span style=""color: rgb(207,34,46);""> returns</span><span style=""color: rgb(207,34,46);""> no</span><span style=""color: rgb(31,35,40);""> records</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> query</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">fetch</span><span style=""color: rgb(31,35,40);"">()</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);""># </span><span style=""color: rgb(207,34,46);"">second</span><span style=""color: rgb(207,34,46);""> call</span><span style=""color: rgb(207,34,46);""> returns</span><span style=""color: rgb(207,34,46);""> rows</span><span style=""color: rgb(207,34,46);""> with</span><span style=""color: rgb(31,35,40);""> timestamp_column greater than the </span><span style=""color: rgb(207,34,46);"">timestamp</span><span style=""color: rgb(31,35,40);""> of a previous </span><span style=""color: rgb(207,34,46);"">fetch</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> query</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">fetch</span><span style=""color: rgb(31,35,40);"">()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1704182/Query+a+View+-+MindsDB","/pages/resumedraft.action?draftId=1704182","/x/9gAa"
"1704236","current","MindsDB Schema - MindsDB","491527","491782","page","119818","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:59.505Z","2025-10-24T14:11:59.505Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Initially, MindsDB comprises three system databases and one default project, as follows:</span>
<ul>
<li><code>information_schema</code> stores metadata of all the objects such as handlers, databases, AI engines, models, jobs, and more.</li>
<li><code>log</code> stores log data of models and jobs.</li>
<li><code>files</code>, which is initially empty, stores all files uploaded to MindsDB.</li>
<li><code>mindsdb</code> is the default project for storing models, views, jobs, triggers, and agents.</li>
</ul>
<span>List all databases by running the following SQL commands:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW [FULL] DATABASES;</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">Database</span><span style=""color: rgb(31,35,40);"">             | </span><span style=""color: rgb(207,34,46);"">TYPE</span><span style=""color: rgb(31,35,40);"">    | ENGINE |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| information_schema   | </span><span style=""color: rgb(207,34,46);"">system</span><span style=""color: rgb(31,35,40);"">  | [NULL] |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">log</span><span style=""color: rgb(31,35,40);"">                  | </span><span style=""color: rgb(207,34,46);"">system</span><span style=""color: rgb(31,35,40);"">  | [NULL] |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| mindsdb              | project | [NULL] |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| files                | </span><span style=""color: rgb(207,34,46);"">data</span><span style=""color: rgb(31,35,40);"">    | files  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#the-information-schema-database"">‚Äã</a></div><span class=""cursor-pointer"">The <code>information_schema</code> Database</span></h2>
<span>The <code>information_schema</code> database contains all the system tables that correspond to MindsDB objects as follows:</span>
<table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>HANDLERS</code></td><td>Stores all (data and AI) handlers, which are <a class=""link"" href=""/integrations/data-overview"">data integrations</a> and <a class=""link"" href=""/integrations/ai-overview"">AI integrations</a> supported by MindsDB.</td></tr><tr><td><code>DATABASES</code></td><td>Stores all data sources connected to MindsDB. Note that corresponding handlers are required, and you can connect only the <a class=""link"" href=""/integrations/data-overview"">data sources supported by MindsDB</a> after <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">installing the required handler dependencies</a>.</td></tr><tr><td><code>ML_ENGINES</code></td><td>Stores all AI/ML engines configured at MindsDB. Note that corresponding handlers are required, and you can connect only the <a class=""link"" href=""/integrations/ai-overview"">AI/ML engines supported by MindsDB</a> after <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">installing the required handler dependencies</a>.</td></tr><tr><td><code>MODELS</code></td><td>Stores all models deployed within the MindsDB ecosystem. Note that you can create and deploy a model only after configuring the corresponding AI/ML engine.</td></tr><tr><td><code>VIEWS</code></td><td>Stores all views created in MindsDB.</td></tr><tr><td><code>JOBS</code></td><td>Stores all <a class=""link"" href=""/mindsdb_sql/sql/create/jobs"">jobs</a> that facilitate workflow automation.</td></tr><tr><td><code>TRIGGERS</code></td><td>Stores all <a class=""link"" href=""/mindsdb_sql/sql/create/trigger"">triggers</a> that facilitate workflow automation.</td></tr><tr><td><code>AGENTS</code></td><td>Stores all <a class=""link"" href=""/mindsdb_sql/agents/agent"">AI agents</a> created in MindsDB.</td></tr><tr><td><code>SKILLS</code></td><td>Stores all skills that can be assigned to <a class=""link"" href=""/mindsdb_sql/agents/agent"">AI agents</a>.</td></tr><tr><td><code>KNOWLEDGE_BASES</code></td><td>Stores all <a class=""link"" href=""/mindsdb_sql/agents/knowledge-bases"">knowledge bases</a> that can be assigned to AI agents as skills.</td></tr><tr><td><code>CHATBOTS</code></td><td>Stores all <a class=""link"" href=""/mindsdb_sql/agents/chatbot"">chatbots</a> that comprise an AI agent and a chat interface.</td></tr></tbody></table>
<div><div><span>Some of the objects, including <code>DATABASES</code>, <code>ML_ENGINES</code>, and <code>MODELS</code>, may contain sensitive information in the form of API keys or passwords. MindsDB hides this sensitive information by default.</span><span>If you want to expose this sensitive information in the output when querying these objects, set the <code>show_secrets</code> flag to <code>true</code>.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> SHOW_SECRETS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> TRUE;</span></span>
</code></pre></div></div></div><span>And to hide them back, set it to <code>false</code>.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> SHOW_SECRETS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> FALSE;</span></span>
</code></pre></div></div></div></div></div>
<span>Use the <code>SHOW</code> command to list all objects as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW object_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[FROM project_name]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[LIKE 'object_name_part%']</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[WHERE key = value];</span></span>
</code></pre></div></div></div>
<span>For instance, list all OpenAI models from the <code>mindsdb</code> project that contain <code>ai</code> in its name.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW MODELS</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> mindsdb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIKE</span><span style=""color: rgb(10,48,105);""> '%ai%'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'openai'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Another example of how to query for the available data and AI handlers:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW HANDLERS</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'data'</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">SHOW HANDLERS</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'ml'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Before you can connect a data source using a data handler or create a model using an AI handler, make sure that the <code>IMPORT_SUCCESS</code> column reads <em>true</em>. If it reads <em>false</em>, then <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">install the dependencies for this handler</a> before using it.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#the-mindsdb-project"">‚Äã</a></div><span class=""cursor-pointer"">The <code>mindsdb</code> Project</span></h2>
<span>MindsDB enables you to group all objects within <a class=""link"" href=""/sql/project"">projects</a>. Projects can store models, views, jobs, triggers, agents, skills, knowledge bases, and chatbots.</span>
<div><div><span>Projects store all objects except for handlers, connected data sources, and configured AI/ML engines.</span><span>Note that based on the available handlers, you can connect a data source to MindsDB or configure an AI/ML engine within MindsDB. Having done that, you can, for instance, create a view with data from the connected data source and store it inside the project, or create a model based on the configured AI/ML engine and store it inside the project.</span></div></div>
<span>MindsDB provides the default <code>mindsdb</code> project where all objects created without defining a project are stored.</span>
<span>Learn more about how to create and manage <a class=""link"" href=""/sql/project"">projects here</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#the-files-database"">‚Äã</a></div><span class=""cursor-pointer"">The <code>files</code> Database</span></h2>
<span>It is another default database that stores all the files uploaded to MindsDB.</span>
<span>Here is how you can <a class=""link"" href=""/sql/create/file"">upload files to MindsDB</a>.</span></div>","/spaces/SOP/pages/1704236/MindsDB+Schema+-+MindsDB","/pages/resumedraft.action?draftId=1704236","/x/LAEa"
"1736730","current","How to Contribute to MindsDB - MindsDB","491527","491782","page","3420","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:52:57.582Z","2025-10-24T13:52:57.582Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Thank you for your interest in contributing to MindsDB. MindsDB is free, open-source software and all types of contributions are welcome, whether they&rsquo;re documentation changes, bug reports, bug fixes, or new source code changes.</span>
<div><div><span>In order to contribute to MindsDB:</span><ul>
<li>fork the MindsDB GitHub repository,</li>
<li><a class=""link"" href=""/contribute/install"">install MindsDB locally</a>,</li>
<li>implement and test your changes,</li>
<li><strong>push your changes to the <code>develop</code> branch</strong>.</li>
</ul><div class=""leading-tight text-left""><p>Step-by-Step Guide</p></div><div><ol>
<li>
<span>Fork the MindsDB repository from <a class=""link"" href=""https://github.com/mindsdb/mindsdb"">MindsDB GitHub</a>.</span>
</li>
<li>
<span>Clone the MindsDB repository locally from your fork and go inside the repository folder.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> /path/mindsdb-repo-folder-name</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Fetch all other branches from the MindsDB repository with these commands:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> remote</span><span style=""color: rgb(10,48,105);""> add</span><span style=""color: rgb(10,48,105);""> upstream</span><span style=""color: rgb(10,48,105);""> https://github.com/mindsdb/mindsdb</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> fetch</span><span style=""color: rgb(10,48,105);""> upstream</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Switch to the <code>develop</code> branch.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> checkout</span><span style=""color: rgb(10,48,105);""> develop</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Create a new branch for your changes from the <code>develop</code> branch.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> checkout</span><span style=""color: rgb(5,80,174);""> -b</span><span style=""color: rgb(10,48,105);""> new-branch-name</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Make your changes on this branch.</span>
</li>
<li>
<span>Commit and push your changes to GitHub.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> add</span><span style=""color: rgb(5,80,174);""> *</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> commit</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> &quot;commit message&quot;</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> push</span><span style=""color: rgb(5,80,174);""> --set-upstream</span><span style=""color: rgb(10,48,105);""> origin</span><span style=""color: rgb(10,48,105);""> new-branch-name</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Go to GitHub and create a PR to the <code>develop</code> branch of the MindsDB repository.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""591"" src=""https://mintcdn.com/mindsdb/D7vB6Tj7fdk1mEwb/assets/contribute.png?fit=max&amp;auto=format&amp;n=D7vB6Tj7fdk1mEwb&amp;q=85&amp;s=78bcae45cee05809ad65ad50a7935224"" style="""" width=""1600"" /></span></span></p>
</li>
</ol></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-release-process"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Release Process</span></h2>
<span>The <code>main</code> branch of the <a class=""link"" href=""https://github.com/mindsdb/mindsdb"">MindsDB repository</a> contains the latest stable version of MindsDB and represents the GA (General Availability) release. Learn more about <a class=""link"" href=""/releases"">MindsDB release types here</a>.</span>
<span>MindsDB follows the <a class=""link"" href=""https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"">Gitflow branching model</a> to manage development and releases as follows.</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Development Phase</p><div><span>All code changes are first committed to the <code>develop</code> branch.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Release Preparation</p><div><span>When a release is approaching, a short-lived <code>release</code> branch is created from the <code>develop</code> branch.</span><ul>
<li>This branch is used for final testing and validation.</li>
<li>Pre-GA artifacts are built at this stage, including both the Python package and the Docker image, and shared for broader testing and feedback.</li>
</ul></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Release Finalization</p><div><span>After successful testing and validation:</span><ul>
<li>The <code>release</code> branch is merged into the <code>main</code> branch, making it an official GA release.</li>
<li>The final GA versions of the Python package and Docker image are released, while the pre-GA version are removed.</li>
</ul></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#contributor-testing-requirements"">‚Äã</a></div><span class=""cursor-pointer"">Contributor Testing Requirements</span></h2>
<span>As a contributor, you are responsible for writing the code according to the <a class=""link"" href=""/contribute/python-coding-standards"">Python Coding Standards</a> and thoroughly testing all features or fixes that you implement before they are merged into the <code>develop</code> branch.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#feature-branch-testing"">‚Äã</a></div><span class=""cursor-pointer"">Feature Branch Testing</span></h3>
<span>Before merging your changes, the following types of testing must be completed to validate your work in isolation:</span>
<ul>
<li>
<span>Unit Tests
Verify that individual components or functions behave as expected during development.</span>
</li>
<li>
<span>Integration Tests
Ensure that your new code works correctly with existing functionality and doesn&rsquo;t introduce regressions.</span>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#post-release-testing"">‚Äã</a></div><span class=""cursor-pointer"">Post-Release Testing</span></h3>
<span>After a release that includes your features or fixes is published, contributors are encouraged to:</span>
<ul>
<li>Test their changes in the released environment, and</li>
<li>Report any issues or unexpected behavior that may arise.</li>
</ul></div>","/spaces/SOP/pages/1736730/How+to+Contribute+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1736730","/x/GoAa"
"1736751","current","Querying Data Catalog for Integrations - MindsDB","491527","491782","page","14326","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:36.345Z","2025-10-24T13:59:36.345Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB exposes collected metadata from connected data sources via virtual tables in the <code>INFORMATION_SCHEMA</code> schema. These views allow users to inspect and query the Data Catalog using familiar SQL syntax.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#available-data-catalog-tables"">‚Äã</a></div><span class=""cursor-pointer"">Available Data Catalog Tables</span></h2>
<span>To filter results for a specific data integration, use <code>WHERE TABLE_SCHEMA = '&lt;integration_name&gt;'</code>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-tables"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_TABLES</code></span></h3>
<span>Provides high-level metadata about available tables in a given integration.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>TABLE_NAME</code> (string): Name of the table.</li>
<li><code>TABLE_TYPE</code> (string, optional): Type of table (e.g., <code>BASE TABLE</code>, <code>VIEW</code>).</li>
<li><code>TABLE_SCHEMA</code> (string, optional): Schema name or integration name.</li>
<li><code>TABLE_DESCRIPTION</code> (string, optional): Description of the table.</li>
<li><code>ROW_COUNT</code> (integer, optional): Estimated row count.</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_TABLES</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-columns"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_COLUMNS</code></span></h3>
<span>Returns detailed column-level metadata for all tables in the specified integration.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>TABLE_NAME</code> (string): Name of the table.</li>
<li><code>COLUMN_NAME</code> (string): Column name.</li>
<li><code>DATA_TYPE</code> (string): Data type of the column.</li>
<li><code>COLUMN_DESCRIPTION</code> (string, optional): Description of the column.</li>
<li><code>IS_NULLABLE</code> (boolean, optional): Whether nulls are allowed.</li>
<li><code>COLUMN_DEFAULT</code> (string, optional): Default value, if any.</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_COLUMNS</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-column-statistics"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_COLUMN_STATISTICS</code></span></h3>
<span>Provides statistical insights about each column&rsquo;s values and distribution.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>TABLE_NAME</code> (string): Name of the table.</li>
<li><code>COLUMN_NAME</code> (string): Column name.</li>
<li><code>MOST_COMMON_VALUES</code> (array of strings, optional)</li>
<li><code>MOST_COMMON_FREQUENCIES</code> (array of integers, optional)</li>
<li><code>NULL_PERCENTAGE</code> (float, optional)</li>
<li><code>MINIMUM_VALUE</code> (string, optional)</li>
<li><code>MAXIMUM_VALUE</code> (string, optional)</li>
<li><code>DISTINCT_VALUES_COUNT</code> (integer, optional)</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_COLUMN_STATISTICS</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-key-column-usage"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_KEY_COLUMN_USAGE</code></span></h3>
<span>Describes the primary key columns for tables in the integration.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>TABLE_NAME</code> (string): Name of the table.</li>
<li><code>COLUMN_NAME</code> (string): Column name.</li>
<li><code>ORDINAL_POSITION</code> (integer, optional)</li>
<li><code>CONSTRAINT_NAME</code> (string, optional)</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_KEY_COLUMN_USAGE</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-table-constraints"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_TABLE_CONSTRAINTS</code></span></h3>
<span>Lists table-level constraints, including primary and foreign keys.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>TABLE_NAME</code> (string): Name of the table.</li>
<li><code>CONSTRAINT_NAME</code> (string, optional)</li>
<li><code>CONSTRAINT_TYPE</code> (string): e.g., PRIMARY KEY, FOREIGN KEY</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_TABLE_CONSTRAINTS</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#information-schema-meta-handler-info"">‚Äã</a></div><span class=""cursor-pointer""><code>INFORMATION_SCHEMA.META_HANDLER_INFO</code></span></h3>
<span>Returns a textual summary of the integration implementation, including supported SQL features and capabilities.</span>
<span>Here are the available columns:</span>
<ul>
<li><code>HANDLER_INFO</code> (string): Description.</li>
</ul>
<span>Here is how to query it foe a specific data integration:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> INFORMATION_SCHEMA</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">META_HANDLER_INFO</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> TABLE_SCHEMA </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'integration_name'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1736751/Querying+Data+Catalog+for+Integrations+-+MindsDB","/pages/resumedraft.action?draftId=1736751","/x/L4Aa"
"1736770","current","Intercom - MindsDB","491527","491782","page","23681","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:21.404Z","2025-10-24T14:00:21.404Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span><a class=""link"" href=""https://intercom.com"">Intercom</a> is a software company that provides customer messaging and engagement tools for businesses. They offer products and services for customer support, marketing, and sales, allowing companies to communicate with their customers through various channels like chat, email, and more.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>To get started with the Intercom API, you need to initialize the API handler with the required access token for authentication. You can do this as follows:</span>
<ul>
<li><code>access_token</code>: Your Intercom access token for authentication.</li>
</ul>
<div><div><span>Check out <a class=""link"" href=""https://developers.intercom.com/docs/build-an-integration/learn-more/authentication/"">this guide</a> on how to get the intercom access token in order to access Intercom data.</span></div></div>
<span>To create a database using the Intercom engine, you can use a SQL-like syntax as shown below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> myintercom</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'intercom'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;access_token&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;your-intercom-access-token&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>You can retrieve data from Intercom using a <code>SELECT</code> statement. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> myintercom</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">articles</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>You can filter data based on specific criteria using a <code>WHERE</code> clause. Here&rsquo;s an example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> myintercom</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">articles</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(31,35,40);"">article</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(31,35,40);"">id</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To create a new article in Intercom, you can use the <code>INSERT</code> statement. Here&rsquo;s an example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> myintercom</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">articles</span><span style=""color: rgb(31,35,40);""> (title, </span><span style=""color: rgb(207,34,46);"">description</span><span style=""color: rgb(31,35,40);"">, body, author_id, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, parent_id, parent_type)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  'Thanks for everything'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  'Description of the Article'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  'Body of the Article'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  6840572</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  'published'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  6801839</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  'collection'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>You can update existing records in Intercom using the <code>UPDATE</code> statement. For instance:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(5,80,174);""> myintercom</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">articles</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> title </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Christmas is here!'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    body </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '&lt;p&gt;New gifts in store for the jolly season&lt;/p&gt;'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(31,35,40);"">article</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(31,35,40);"">id</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1736770/Intercom+-+MindsDB","/pages/resumedraft.action?draftId=1736770","/x/QoAa"
"1736793","current","Plaid - MindsDB","491527","491782","page","26103","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:38.907Z","2025-10-24T14:00:38.907Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Plaid to MindsDB.</span>
<span><a class=""link"" href=""https://plaid.com/"">Plaid</a> is a financial technology company that offers a platform and a set of APIs that facilitate the integration of financial services and data into applications and websites. Its services primarily focus on enabling developers to connect with and access financial accounts and data from various financial institutions.</span>
<span>Data from Plaid can be utilized within MindsDB to train AI models and make financial forecasts.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Plaid to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Plaid.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>client_id</code></li>
<li><code>secret</code></li>
<li><code>access_token</code></li>
<li><code>plaid_env</code></li>
</ul>
<div><div><span>You can get the <code>client_id</code>, <code>secret</code>, and <code>access_token</code> values <a class=""link"" href=""https://dashboard.plaid.com/team/keys"">here</a> once you sign in to your Plaid account.
And <a class=""link"" href=""https://plaid.com/docs/api/items/#itempublic_tokenexchange"">here</a> is how you generate the <code>access_token</code> value.</span></div></div>
<span>In order to make use of this handler and connect the Plaid app to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_plaid</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'plaid'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_CLIENT_ID&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_SECRET&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;access_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YOUR_PUBLIC_KEY&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;plaid_env&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;ENV&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>It creates a database that comes with two tables: <code>transactions</code> and <code>balance</code>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now you can query your data, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, merchant_name, authorized_date, amount, payment_channel</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_plaid</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">transactions</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> start_date</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '2022-01-01'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> end_date </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '2023-04-11'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>And if you want to use functions provided by the Plaid API, you can use the native queries syntax, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> my_plaid (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  get_transactions(</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    start_date</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '2022-01-01'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    end_date </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '2022-02-01'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  )</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/plaid_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1736793/Plaid+-+MindsDB","/pages/resumedraft.action?draftId=1736793","/x/WYAa"
"1736820","current","How to Hybrid Search Knowledge Bases - MindsDB","491527","491782","page","83087","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:23.141Z","2025-10-24T14:04:23.141Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Knowledge bases support two primary search methods: <a class=""link"" href=""/mindsdb_sql/knowledge_bases/query#semantic-search"">semantic search</a> and <a class=""link"" href=""/mindsdb_sql/knowledge_bases/query#metadata-filtering"">metadata/keyword search</a>. Each method has its strengths and ideal use cases.</span>
<span>Semantic similarity search uses vector embeddings to retrieve content that is semantically related to a given query. This is especially powerful when users are searching for concepts, ideas, or questions expressed in natural language.</span>
<span>However, semantic search may fall short when users are looking for specific keywords, such as acronyms, internal terminology, or custom identifiers. These types of terms are often not well-represented in the embedding model&rsquo;s training data. As a result, embedding-based semantic search might entirely miss results that do contain the exact keyword.</span>
<span>To address this gap, knowledge bases offer hybrid search, which combines the best of both worlds: semantic similarity and exact keyword matching. Hybrid search ensures that results relevant by meaning and results matching specific terms are both considered and ranked appropriately.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#enabling-hybrid-search"">‚Äã</a></div><span class=""cursor-pointer"">Enabling Hybrid Search</span></h2>
<span>To use hybrid search, you first need to <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create"">create a knowledge base</a> and <a class=""link"" href=""/mindsdb_sql/knowledge_bases/insert_data"">insert data into it</a>.</span>
<span>Hybrid search can be enabled at the time of querying the knowledge base by specifying the appropriate configuration options, as shown below.</span>

<span>The <code>hybrid_search</code> parameter enables hybrid search functionality. While the <code>hybrid_search_alpha</code> parameter allows you to control the balance between semantic and keyword relevance, with values varying between 0 (more importance on keyword relevance) and 1 (more importance on semantic relevance) and the default value of 0.5.</span>

<span>Knowledge bases provide optional <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#reranking-model"">reranking features</a> that users can decide to use in specific use cases. When the reranker is available, it is used to rerank results from both the full-text index search and the embedding-based semantic search. It estimates the relevance of each document and orders them from most to least relevant.</span>
<span>However, users can disable the reranker using <code>reranking = false</code>, which might be desirable for performance reasons or specific use cases. When reranking is disabled, the system still needs to combine the two search result sets. In this case, the final ranking of each document is computed as a weighted average of the embedding similarity score and the <a class=""link"" href=""https://en.wikipedia.org/wiki/Okapi_BM25"">BM25</a> keyword relevance score from the full-text search.</span>
<div><div><span><strong>Relevance-Based Document Selection for Reranking</strong></span><span>When retrieving documents from the full-text index, there is a practical limit on how many documents can be passed to the reranker, since reranking is typically computationally expensive. To ensure that only the most promising candidates are selected for reranking, we apply relevance heuristics during the keyword search stage.</span><span>One widely used heuristic is BM25, a ranking function that scores documents based on their keyword relevance to the user query. BM25 considers both the frequency of a keyword within a document and how common that keyword is across the entire corpus.</span><span>By scoring documents using BM25, the system can prioritize more relevant matches and limit reranker input to a smaller, high-quality subset of documents. This helps achieve a balance between performance and retrieval accuracy in hybrid search.</span></div></div>
<span>This is the so-called alpha reranking.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation-of-hybrid-search"">‚Äã</a></div><span class=""cursor-pointer"">Implementation of Hybrid Search</span></h2>
<span>Hybrid search in knowledge bases combines semantic similarity and keyword-based search methods into a unified search mechanism.</span>
<span>The diagram below illustrates the hybrid search process.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1820"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/kb_hybrid_search.jpg?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=907ac7ffb1eb290857c65e0256e440e3"" style="""" width=""1414"" /></span></span></p>
<span>When a user submits a query, it is simultaneously routed through two parallel search mechanisms: an embedding-based semantic search (left) and a full-text keyword search (right).</span>
<span>Below is a breakdown of how hybrid search works under the hood:</span>
<ul>
<li>
<span><strong>Semantic Search</strong> (path on the left)</span>
<span>It takes place in parallel with the keyword search. Semantic search starts by embedding the search query and searching against the content of the knowledge base. This results in a set of relevant documents found.</span>
</li>
<li>
<span><strong>Keyword Search</strong> (path on the right)</span>
<span>It takes place in parallel with the semantic search. The system performs a keyword-based search, using one or more keywords provided in the search query, over the content of the knowledge base. To ensure performance, especially at scale, when dealing with millions of documents, we rely on a full-text indexing system.</span>
<span>This index is typically built as an inverted index, mapping keywords to the documents in which they appear. It allows for efficient lookups and rapid retrieval of all entries that contain the given terms.</span>
<div><div><span>Storage of Full-Text Index</span><span>Just as embeddings are stored to support semantic similarity search, a full-text index must also be stored to enable efficient keyword-based retrieval. This index serves as the foundation for fast and scalable full-text search and is tightly integrated with the knowledge base.</span><span>Each knowledge base maintains its own dedicated full-text index, built and updated as documents are ingested or modified. Maintaining this index alongside the stored embeddings ensures that both semantic and keyword search capabilities are always available and performant, forming the backbone of hybrid search.</span></div></div>
<span>This step ensures that exact matches, like specific acronyms, ticket numbers, or product identifiers, can be found quickly, even if the semantic model wouldn&rsquo;t have surfaced them.</span>
</li>
<li>
<span><strong>Combining Results</strong></span>
<span>At this step, results from both searches are merged. Semantic search returned documents similar in meaning to the user&rsquo;s query using embeddings, while keyword search returned documents containing the keywords extracted from the user&rsquo;s query. This complete result set is passed to the reranker.</span>
</li>
<li>
<span><strong>Reranking</strong></span>
<span>The results are reranked, considering relevance scores from both search types, and ordered accordingly.</span>
<span>There are two mechanisms for reranking the results:</span>
<ul>
<li>
<span>Using the reranking model of the knowledge base</span>
<span>If the knowledge base was created with the reranking model provided, the hybrid search uses it to rerank the result set.</span>

<span>In this query, the hybrid search uses the reranking features enabled with the knowledge base.</span>
</li>
<li>
<span>Using the alpha reranking that can be further customized for hybrid search</span>
<span>Users can opt for using the alpha reranking that can be customized specifically for hybrid search. By setting the <code>hybrid_search_alpha</code> parameter to any value between 0 and 1, users can give importance to results from the keyword search (if the value is closer to 0) or the semantic search (if the value is closer to 1).</span>

<span>This query uses hybrid search with emphasis on results from the keyword search.</span>
<div><div><span>Relevance-Based Document Selection for Reranking</span><span>When retrieving documents from the full-text index, there is a practical limit on how many documents can be passed to the reranker, since reranking is typically computationally expensive. To ensure that only the most promising candidates are selected for reranking, we apply relevance heuristics during the keyword search stage.</span><span>One widely used heuristic is BM25, a ranking function that scores documents based on their keyword relevance to the user query. BM25 considers both the frequency of a keyword within a document and how common that keyword is across the entire corpus.</span><span>By scoring documents using BM25, the system can prioritize more relevant matches and limit reranker input to a smaller, high-quality subset of documents. This helps achieve a balance between performance and retrieval accuracy in hybrid search.</span></div></div>
</li>
</ul>
<span>Overall, the reranker ensures that highly relevant keyword matches appear alongside semantically similar results, offering users a balanced and accurate response.</span>
</li>
</ul></div>","/spaces/SOP/pages/1736820/How+to+Hybrid+Search+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=1736820","/x/dIAa"
"1736839","current","Query a Table - MindsDB","491527","491782","page","87026","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:48.932Z","2025-10-24T14:11:30.272Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>query()</code> function is executed on a data source connected to MindsDB and saved into a variable. It queries a table from this data source.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">my_data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM my_table LIMIT 100'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>You can query for newly added data using the functionality introduced by the <a class=""link"" href=""/mindsdb_sql/sql/create/jobs#last""><code>LAST</code> keyword</a> as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> server</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">databases</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tables</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">filter</span><span style=""color: rgb(31,35,40);"">(column_name</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'value'</span><span style=""color: rgb(31,35,40);"">).track(</span><span style=""color: rgb(10,48,105);"">'timestamp_column'</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);""># </span><span style=""color: rgb(207,34,46);"">first</span><span style=""color: rgb(207,34,46);""> call</span><span style=""color: rgb(207,34,46);""> returns</span><span style=""color: rgb(207,34,46);""> no</span><span style=""color: rgb(31,35,40);""> records</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> query</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">fetch</span><span style=""color: rgb(31,35,40);"">()</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);""># </span><span style=""color: rgb(207,34,46);"">second</span><span style=""color: rgb(207,34,46);""> call</span><span style=""color: rgb(207,34,46);""> returns</span><span style=""color: rgb(207,34,46);""> rows</span><span style=""color: rgb(207,34,46);""> with</span><span style=""color: rgb(31,35,40);""> timestamp_column greater than the </span><span style=""color: rgb(207,34,46);"">timestamp</span><span style=""color: rgb(31,35,40);""> of a previous </span><span style=""color: rgb(207,34,46);"">fetch</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> query</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">fetch</span><span style=""color: rgb(31,35,40);"">()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1736839/Query+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=1736839","/x/h4Aa"
"1736858","current","List Data Handlers - MindsDB","491527","491782","page","97136","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:37.852Z","2025-10-24T14:10:59.004Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Here is how you can fetch all available data handlers directly from Python code:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>mindsdb = server.get_project('mindsdb')</span></span>
<span class=""line""><span>data_handlers = mindsdb.query('SHOW HANDLERS WHERE type = \'data\'')</span></span>
<span class=""line""><span>print(data_handlers.fetch())</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1736858/List+Data+Handlers+-+MindsDB","/pages/resumedraft.action?draftId=1736858","/x/moAa"
"1736877","current","Delete Agent - MindsDB","491527","491782","page","103739","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:14.825Z","2025-10-24T14:06:14.825Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> DELETE</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents/my_agent</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1736877/Delete+Agent+-+MindsDB","/pages/resumedraft.action?draftId=1736877","/x/rYAa"
"1769502","current","MindsDB at AWS Marketplace - MindsDB","491527","491782","page","9849","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:28.215Z","2025-10-24T13:53:28.215Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB offers a streamlined setup process in cloud environments using its AWS Marketplace image.</span>
<div><div><span>Explore the MindsDB AWS Marketplace image <a class=""link"" href=""https://aws.amazon.com/marketplace/seller-profile?id=03a65520-86ca-4ab8-a394-c11eb54573a9"">here</a>.</span></div></div></div>","/spaces/SOP/pages/1769502/MindsDB+at+AWS+Marketplace+-+MindsDB","/pages/resumedraft.action?draftId=1769502","/x/HgAb"
"1769527","current","Bring Your Own Model - MindsDB","491527","491782","page","18072","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:53.462Z","2025-10-24T13:59:53.462Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>The Bring Your Own Model (BYOM) feature lets you upload your own models in the form of Python code and use them within MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-it-works"">‚Äã</a></div><span class=""cursor-pointer"">How It Works</span></h2>
<span>You can upload your custom model via the MindsDB editor by clicking <code>Add</code> and <code>Upload custom model</code>, like this:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""894"" src=""https://mintcdn.com/mindsdb/PepdSPcGoBKUq1N5/assets/byom_upload_custom_model.png?fit=max&amp;auto=format&amp;n=PepdSPcGoBKUq1N5&amp;q=85&amp;s=2cd24a57cd41e06b55499c540b879966"" style="""" width=""1784"" /></span></span></p>
<span>Here is the form that needs to be filled out in order to bring your model to MindsDB:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1818"" src=""https://mintcdn.com/mindsdb/PepdSPcGoBKUq1N5/assets/byom_empty_form.png?fit=max&amp;auto=format&amp;n=PepdSPcGoBKUq1N5&amp;q=85&amp;s=c50b62c350c9bf9ef584a48632497e3e"" style="""" width=""3204"" /></span></span></p>
<span>Let&rsquo;s briefly go over the files that need to be uploaded:</span>
<ul>
<li>
<span>The Python file stores an implementation of your model. It should contain the class with the implementation for the <code>train</code> and <code>predict</code> methods. Here is the sample format:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">class</span><span style=""color: rgb(149,56,0);""> CustomPredictor</span><span style=""color: rgb(31,35,40);"">():</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    def</span><span style=""color: rgb(130,80,223);""> train</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">df</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">target_col</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">args</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">None</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            &lt;</span><span style=""color: rgb(31,35,40);"">implementation goes here</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            return</span><span style=""color: rgb(10,48,105);""> ''</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">    def</span><span style=""color: rgb(130,80,223);""> predict</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">df</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            &lt;</span><span style=""color: rgb(31,35,40);"">implementation goes here</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            return</span><span style=""color: rgb(31,35,40);""> df</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div class=""leading-tight text-left""><p>Example</p></div><div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> os</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> pandas </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> pd</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> sklearn.cross_decomposition </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> PLSRegression</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> sklearn </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> preprocessing</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">class</span><span style=""color: rgb(149,56,0);""> CustomPredictor</span><span style=""color: rgb(31,35,40);"">():</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    def</span><span style=""color: rgb(130,80,223);""> train</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">df</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">target_col</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">args</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">None</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        print</span><span style=""color: rgb(31,35,40);"">(args, </span><span style=""color: rgb(10,48,105);"">'1111'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        self</span><span style=""color: rgb(31,35,40);"">.target_col </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> target_col</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        y </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        x </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df.drop(</span><span style=""color: rgb(149,56,0);"">columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        x_cols </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> list</span><span style=""color: rgb(31,35,40);"">(x.columns)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        x_scaler </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> preprocessing.StandardScaler().fit(x)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        y_scaler </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> preprocessing.StandardScaler().fit(y.values.reshape(</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">))</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        xs </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> x_scaler.transform(x)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        ys </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> y_scaler.transform(y.values.reshape(</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">))</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pls </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> PLSRegression(</span><span style=""color: rgb(149,56,0);"">n_components</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pls.fit(xs, ys)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        T </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pls.x_scores_</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        W </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pls.x_weights_</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        P </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pls.x_loadings_</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        R </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pls.x_rotations_</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        self</span><span style=""color: rgb(31,35,40);"">.x_cols </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> x_cols</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        self</span><span style=""color: rgb(31,35,40);"">.x_scaler </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> x_scaler</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        self</span><span style=""color: rgb(31,35,40);"">.P </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> P</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        def</span><span style=""color: rgb(130,80,223);""> calc_limit</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">df</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            res </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> None</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            for</span><span style=""color: rgb(31,35,40);""> column </span><span style=""color: rgb(207,34,46);"">in</span><span style=""color: rgb(31,35,40);""> df.columns:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                if</span><span style=""color: rgb(31,35,40);""> column </span><span style=""color: rgb(207,34,46);"">==</span><span style=""color: rgb(5,80,174);""> self</span><span style=""color: rgb(31,35,40);"">.target_col: </span><span style=""color: rgb(207,34,46);"">continue</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df.groupby(</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col).agg({column: [</span><span style=""color: rgb(10,48,105);"">'mean'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'min'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'max'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'std'</span><span style=""color: rgb(31,35,40);"">]})</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl.columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl.columns.get_level_values(</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'name'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> column</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'std'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[</span><span style=""color: rgb(10,48,105);"">'std'</span><span style=""color: rgb(31,35,40);"">].fillna(</span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'lower'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[</span><span style=""color: rgb(10,48,105);"">'mean'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);""> 3</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> tbl[</span><span style=""color: rgb(10,48,105);"">'std'</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'upper'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[</span><span style=""color: rgb(10,48,105);"">'mean'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(5,80,174);""> 3</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> tbl[</span><span style=""color: rgb(10,48,105);"">'std'</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'lower'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[[</span><span style=""color: rgb(10,48,105);"">&quot;lower&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;min&quot;</span><span style=""color: rgb(31,35,40);"">]].max(</span><span style=""color: rgb(149,56,0);"">axis</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">)  </span><span style=""color: rgb(110,119,129);""># lower &gt;= min</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl[</span><span style=""color: rgb(10,48,105);"">'upper'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[[</span><span style=""color: rgb(10,48,105);"">&quot;upper&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;max&quot;</span><span style=""color: rgb(31,35,40);"">]].min(</span><span style=""color: rgb(149,56,0);"">axis</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">)  </span><span style=""color: rgb(110,119,129);""># upper &lt;= max</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                tbl </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl[[</span><span style=""color: rgb(10,48,105);"">'name'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'lower'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'mean'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'upper'</span><span style=""color: rgb(31,35,40);"">]]</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                try</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                    res </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pd.concat([res, tbl])</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                except</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">                    res </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> tbl</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            return</span><span style=""color: rgb(31,35,40);""> res</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        trdf </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pd.DataFrame()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        trdf[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> y.values</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        trdf[</span><span style=""color: rgb(10,48,105);"">'T1'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> T.squeeze()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        limit </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> calc_limit(trdf).reset_index()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        self</span><span style=""color: rgb(31,35,40);"">.limit </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> limit</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        return</span><span style=""color: rgb(10,48,105);""> &quot;Trained predictor ready to be stored&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    def</span><span style=""color: rgb(130,80,223);""> predict</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">df</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        yt </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col].values</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        xt </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.x_cols]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        xt </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> self</span><span style=""color: rgb(31,35,40);"">.x_scaler.transform(xt)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        excess_cols </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> list</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(5,80,174);"">set</span><span style=""color: rgb(31,35,40);"">(df.columns) </span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(5,80,174);""> set</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.x_cols))</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pred_df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> df[excess_cols].copy()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pred_df[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> yt</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pred_df[</span><span style=""color: rgb(10,48,105);"">'T1'</span><span style=""color: rgb(31,35,40);"">] </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> (xt </span><span style=""color: rgb(207,34,46);"">@</span><span style=""color: rgb(5,80,174);""> self</span><span style=""color: rgb(31,35,40);"">.P).squeeze()</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        pred_df </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> pd.merge(pred_df, </span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.limit[[</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col, </span><span style=""color: rgb(10,48,105);"">'lower'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'upper'</span><span style=""color: rgb(31,35,40);"">]], </span><span style=""color: rgb(149,56,0);"">how</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'left'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(149,56,0);"">on</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">self</span><span style=""color: rgb(31,35,40);"">.target_col)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">‚Äã</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        return</span><span style=""color: rgb(31,35,40);""> pred_df</span></span>
</code></pre></div></div></div></div>
<ul>
<li>
<span>The optional requirements file, or <code>requirements.txt</code>, stores all dependencies along with their versions. Here is the sample format:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_1 </span><span style=""color: rgb(207,34,46);"">==</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_2 </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_3 </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(207,34,46);""> version</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">...</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div class=""leading-tight text-left""><p>Example</p></div><div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">pandas</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">scikit</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(31,35,40);"">learn</span></span>
</code></pre></div></div></div></div>
<span>Once you upload the above files, please provide an engine name.</span>
<span>Please note that your custom model is uploaded to MindsDB as an engine. Then you can use this engine to create a model.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""232"" src=""https://mintcdn.com/mindsdb/tkxKy44mj_2VlYcf/assets/byom_diagram.png?fit=max&amp;auto=format&amp;n=tkxKy44mj_2VlYcf&amp;q=85&amp;s=12e1e8bfac5f8a666f2456adcbddfc85"" style="""" width=""1501"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#configuration"">‚Äã</a></div><span class=""cursor-pointer"">Configuration</span></h2>
<span>The BYOM feature can be configured with the following environment variables:</span>
<ul>
<li>
<span><code>MINDSDB_BYOM_ENABLED</code></span>
<span>This environment variable defines whether the BYOM feature is enabled (<code>MINDSDB_BYOM_ENABLED=true</code>) or disabled (<code>MINDSDB_BYOM_ENABLED=false</code>). Note that when running MindsDB locally, it is enabled by default.</span>
</li>
<li>
<span><code>MINDSDB_BYOM_DEFAULT_TYPE</code></span>
<span>This environment variable defines the modes of operation of the BYOM feature.</span>
<ul>
<li>
<span><code>MINDSDB_BYOM_DEFAULT_TYPE=venv</code><br />
When using the <code>venv</code> mode, MindsDB creates a virtual environment and installs in it the packages listed in the <code>requirements.txt</code> file. This virtual environment is dedicated for the custom model. Note that when running MindsDB locally, it is the default mode.</span>
</li>
<li>
<span><code>MINDSDB_BYOM_DEFAULT_TYPE=inhouse</code><br />
When using the <code>inhouse</code> mode, there is no dedicated virtual environment for the custom model. It uses the environment of MindsDB, therefore, the <code>requirements.txt</code> file is not used with this mode.</span>
</li>
</ul>
</li>
<li>
<span><code>MINDSDB_BYOM_INHOUSE_ENABLED</code></span>
<span>This environment variable defines whether the <code>inhouse</code> mode is enabled (<code>MINDSDB_BYOM_INHOUSE_ENABLED=true</code>) or disabled (<code>MINDSDB_BYOM_INHOUSE_ENABLED=false</code>). Note that when running MindsDB locally, it is enabled by default.</span>
</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>We upload the custom model, as below:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1816"" src=""https://mintcdn.com/mindsdb/PepdSPcGoBKUq1N5/assets/byom_form.png?fit=max&amp;auto=format&amp;n=PepdSPcGoBKUq1N5&amp;q=85&amp;s=62543881b7deea0c7f26b57222b18ce2"" style="""" width=""3312"" /></span></span></p>
<span>Here we upload the <code>model.py</code> file that stores an implementation of the model and the <code>requirements.txt</code> file that stores all the dependencies.</span>
<span>Once the model is uploaded, it becomes an ML engine within MindsDB. Now we use this <code>custom_model_engine</code> to create a model as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL custom_model</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_integration</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> my_table)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT </span><span style=""color: rgb(207,34,46);"">target</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'custom_model_engine'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Let&rsquo;s query for predictions by joining the custom model with the data table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">feature_column</span><span style=""color: rgb(31,35,40);"">, model_target_column</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_integration</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> input</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(31,35,40);""> custom_model </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> model;</span></span>
</code></pre></div></div></div>
<div><div><span>Check out the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/byom_handler"">BYOM handler folder</a> to see the implementation details.</span></div></div></div>","/spaces/SOP/pages/1769527/Bring+Your+Own+Model+-+MindsDB","/pages/resumedraft.action?draftId=1769527","/x/NwAb"
"1769546","current","MediaWiki - MindsDB","491527","491782","page","23873","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:24.748Z","2025-10-24T14:00:24.748Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect MediaWiki to MindsDB.</span>
<span><a class=""link"" href=""https://www.mediawiki.org/wiki/MediaWiki"">MediaWiki</a> is a free and open-source wiki software platform that is designed to enable the creation and management of wikis. It was originally developed for and continues to power Wikipedia. MediaWiki is highly customizable and can be used to create a wide range of collaborative websites and knowledge bases.</span>
<span>Data from MediaWiki can be utilized within MindsDB to train AI models and chatbots using the wide range of available information.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect MediaWiki to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to MediaWiki.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler was implemented using <a class=""link"" href=""https://github.com/lehinevych/MediaWikiAPI"">MediaWikiAPI</a>, the Python wrapper for the MediaWiki API.</span>
<span>There are no connection arguments required to initialize the handler.</span>
<span>To connect the MediaWiki API to MindsDB, the following CREATE DATABASE statement can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mediawiki_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mediawiki'</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can query the MediaWiki API as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mediawiki_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">pages</span></span>
</code></pre></div></div></div>
<span>You can run more advanced queries to fetch specific pages in a defined order:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mediawiki_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">pages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> title </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Barack'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> pageid</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1769546/MediaWiki+-+MindsDB","/pages/resumedraft.action?draftId=1769546","/x/SgAb"
"1769569","current","Stripe - MindsDB","491527","491782","page","29927","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:52.672Z","2025-10-24T14:00:52.672Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Stripe to MindsDB.</span>
<span><a class=""link"" href=""https://stripe.com/"">Stripe</a> is a financial technology company that provides a set of software and payment processing solutions for businesses and individuals to accept payments over the internet. Stripe is one of the leading payment gateway and online payment processing platforms.</span>
<span>Data from Stripe can be utilized within MindsDB to train AI models and chatbots based on customers, products, and payment intents, and make relevant predictions and forecasts.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Stripe to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Stripe.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler was implemented using <a class=""link"" href=""https://github.com/stripe/stripe-python"">stripe-python</a>, the Python library for the Stripe API.</span>
<span>There is only one parameter required to set up the connection with Stripe:</span>
<ul>
<li><code>api_key</code>: a Stripe API key.</li>
</ul>
<div><div><span>You can find your API keys in the Stripe Dashboard. <a class=""link"" href=""https://stripe.com/docs/keys"">Read more</a>.</span></div></div>
<span>To connect to Stripe using MindsDB, the following CREATE DATABASE statement can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> stripe_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'stripe'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk_...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can query the data in your Stripe account (customers, for example) as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> stripe_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customers</span></span>
</code></pre></div></div></div>
<span>You can run more advanced queries to fetch specific customers in a defined order:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);"">  name</span><span style=""color: rgb(31,35,40);"">, email</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> stripe_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customers</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> currency </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'inr'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(207,34,46);""> name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported tables</span></h3>
<span>The following tables are supported by the Stripe handler:</span>
<ul>
<li><code>customers</code></li>
<li><code>products</code></li>
<li><code>payment_intents</code></li>
</ul></div>","/spaces/SOP/pages/1769569/Stripe+-+MindsDB","/pages/resumedraft.action?draftId=1769569","/x/YQAb"
"1769594","current","CockroachDB - MindsDB","491527","491782","page","40750","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:27.257Z","2025-10-24T14:01:27.257Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the CockroachDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.cockroachlabs.com/docs/"">CockroachDB</a> was architected for complex, high performant distributed writes and delivers scale-out read capability. CockroachDB delivers simple relational SQL transactions and obscures complexity away from developers. It is wire-compatible with PostgreSQL and provides a familiar and easy interface for developers.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect CockroachDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to CockroachDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>CockroachDB is wire-compatible with PostgreSQL. Therefore, its implementation extends the PostgreSQL handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the CockroachDB.</li>
<li><code>database</code> is the name of the database to connect to.</li>
<li><code>user</code> is the user to authenticate with the CockroachDB.</li>
<li><code>port</code> is the port to use when connecting.</li>
<li><code>password</code> is the password to authenticate the user.</li>
</ul>
<span>In order to make use of this handler and connect to the CockroachDB server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> cockroachdb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'cockroachdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;dbname&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> cockroachdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">public</span><span style=""color: rgb(31,35,40);"">.db;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1769594/CockroachDB+-+MindsDB","/pages/resumedraft.action?draftId=1769594","/x/egAb"
"1769615","current","MindsDB and Deepnote - MindsDB","491527","491782","page","72618","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:37.605Z","2025-10-24T14:03:37.605Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>We have worked with the team at Deepnote, and built native integration to Deepnote notebooks.
Please check:</span><ul>
<li><a class=""link"" href=""https://deepnote.com/project/Machine-Learning-With-SQL-8GDF7bc7SzKlhBLorqoIcw/%2Fmindsdb_demo.ipynb"">Deepnote Demo Guide</a></li>
<li><a class=""link"" href=""https://docs.deepnote.com/integrations/mindsdb"">Deepnote Integration Docs</a></li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1769615/MindsDB+and+Deepnote+-+MindsDB","/pages/resumedraft.action?draftId=1769615","/x/jwAb"
"1769638","current","MindsDB SQL Editor - MindsDB","491527","491782","page","75233","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:48.562Z","2025-10-24T14:03:48.562Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides a SQL Editor, so you don&rsquo;t need to download additional SQL clients to connect to MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-use-the-mindsdb-sql-editor"">‚Äã</a></div><span class=""cursor-pointer"">How to Use the MindsDB SQL Editor</span></h2>
<span>There are two ways you can use the Editor, as below.</span>
<div class=""tabs tabs tab-container""><ul><li class=""cursor-pointer""><div> Self-Hosted Local Deployment</div></li></ul><div><span>After setting up the MindsDB using <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a>, or pip
on
<a class=""link"" href=""/setup/self-hosted/pip/linux"">Linux</a>/<a class=""link"" href=""/setup/self-hosted/pip/windows"">Windows</a>/<a class=""link"" href=""/setup/self-hosted/pip/macos"">MacOS</a>,
or pip via <a class=""link"" href=""/setup/self-hosted/pip/source"">source code</a>, go to your terminal and
execute the following:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span></span>
</code></pre></div></div></div><span>On execution, we get:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">2022-05-06</span><span style=""color: rgb(10,48,105);""> 14:07:04,599</span><span style=""color: rgb(10,48,105);""> -</span><span style=""color: rgb(10,48,105);""> INFO</span><span style=""color: rgb(10,48,105);""> -</span><span style=""color: rgb(10,48,105);"">  -</span><span style=""color: rgb(10,48,105);""> GUI</span><span style=""color: rgb(10,48,105);""> available</span><span style=""color: rgb(10,48,105);""> at</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
</code></pre></div></div></div><span>Immediately after, your browser automatically opens the MindsDB SQL Editor. In
case if it doesn&rsquo;t, visit the URL
<a class=""link"" href=""http://127.0.0.1:47334/""><code>http://127.0.0.1:47334/</code></a> in your browser of
preference.</span></div></div>
<span>Here is a sneak peek of the MindsDB SQL Editor:</span>
<span><span style=""visibility: visible;""><img alt=""GUI"" class=""object-contain"" height=""998"" src=""https://mintcdn.com/mindsdb/tkxKy44mj_2VlYcf/assets/cloud/gui_query.png?fit=max&amp;auto=format&amp;n=tkxKy44mj_2VlYcf&amp;q=85&amp;s=04a68485cb290418eeecbe04064cd590"" style="""" width=""1919"" /></span></span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/1769638/MindsDB+SQL+Editor+-+MindsDB","/pages/resumedraft.action?draftId=1769638","/x/pgAb"
"1769657","current","Remove a Data Source - MindsDB","491527","491782","page","93150","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:18.571Z","2025-10-24T14:10:13.605Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>drop_database()</code> function enables you to remove a defined data source connection from MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>drop_database()</code> method to remove a database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server.drop_database(</span><span style=""color: rgb(10,48,105);"">'mysql_demo_db'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1769657/Remove+a+Data+Source+-+MindsDB","/pages/resumedraft.action?draftId=1769657","/x/uQAb"
"1769676","current","List Projects - MindsDB","491527","491782","page","97610","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:40.709Z","2025-10-24T14:11:08.466Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>list_projects()</code> function lists all available projects.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>list_projects()</code> method to lists all available projects:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server.list_projects()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1769676/List+Projects+-+MindsDB","/pages/resumedraft.action?draftId=1769676","/x/zAAb"
"1769695","current","List Data Sources - MindsDB","491527","491782","page","99072","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:50.560Z","2025-10-24T14:11:01.091Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>list_databases()</code> function lists all data sources connected to MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>list_databases()</code> method to list all databases:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server.list_databases()</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1769695/List+Data+Sources+-+MindsDB","/pages/resumedraft.action?draftId=1769695","/x/3wAb"
"1802245","current","DuckDB - MindsDB","491527","491782","page","43909","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:38.310Z","2025-10-24T14:01:38.310Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the DuckDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://duckdb.org/"">DuckDB</a> is an open-source analytical database system. It is designed for fast execution of analytical queries. There are no external dependencies and the DBMS runs completely embedded within a host process, similar to SQLite. DuckDB provides a rich SQL dialect with support for complex queries with transactional guarantees (ACID).</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect DuckDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to DuckDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using the <code>duckdb</code> Python client library.</span>
<div><div><span>The DuckDB handler is currently using the <code>0.7.1.dev187</code> pre-relase version of the Python client library. In case of issues, make sure your DuckDB database is compatible with this version. See the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/duckdb_handler/requirements.txt""><code>requirements.txt</code></a> for details.</span></div></div>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>database</code> is the name of the DuckDB database file. It can be set to <code>:memory:</code> to create an in-memory database.</li>
</ul>
<span>The optional arguments are as follows:</span>
<ul>
<li><code>read_only</code> is a flag that specifies whether the connection is in the read-only mode. This is required if multiple processes want to access the same database file at the same time.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the DuckDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> duckdb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'duckdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;db.duckdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> duckdb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1802245/DuckDB+-+MindsDB","/pages/resumedraft.action?draftId=1802245","/x/BYAb"
"1802268","current","Oracle - MindsDB","491527","491782","page","53474","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:11.241Z","2025-10-24T14:02:11.241Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.techopedia.com/definition/8711/oracle-database"">Oracle</a>, one of the most trusted and widely used relational database engines for storing, organizing and retrieving data by type while still maintaining relationships between the various types.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Oracle to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Oracle database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> oracle_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'oracle'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;service_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;FREEPDB1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;SYSTEM&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li>
<span><code>user</code>: The username for the Oracle database.</span>
</li>
<li>
<span><code>password</code>: The password for the Oracle database.</span>
</li>
<li>
<span><code>dsn</code>: The data source name (DSN) for the Oracle database.
OR</span>
</li>
<li>
<span><code>host</code>: The hostname, IP address, or URL of the Oracle server.
AND</span>
</li>
<li>
<span><code>sid</code>: The system identifier (SID) of the Oracle database.
OR</span>
</li>
<li>
<span><code>service_name</code>: The service name of the Oracle database.</span>
</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>port</code>: The port number for connecting to the Oracle database. Default is 1521.</li>
<li><code>disable_oob</code>: The boolean parameter to disable out-of-band breaks. Default is <code>false</code>.</li>
<li><code>auth_mode</code>: The authorization mode to use.</li>
<li><code>thick_mode</code>: Set to <code>true</code> to use thick mode for the connection. Thin mode is used by default. Oracle Client libraries required for thick mode.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> oracle_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run PL/SQL queries directly on the connected Oracle database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> oracle_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> employee_id, first_name, last_name, email, hire_date</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> oracle_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">hr</span><span style=""color: rgb(31,35,40);"">.employees</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(31,35,40);""> department_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 10</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ORDER BY</span><span style=""color: rgb(31,35,40);""> hire_date </span><span style=""color: rgb(207,34,46);"">DESC</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>oracle_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Oracle database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Oracle database is active.</li>
<li>Confirm that the connection parameters provided (DSN, host, SID, service_name) and the credentials (user, password) are correct.</li>
<li>Ensure a stable network between MindsDB and Oracle.</li>
</ol>
</li>
</ul></div></div>
<span>This <a class=""link"" href=""https://docs.oracle.com/en/database/oracle/oracle-database/19/ntqrf/database-connection-issues.html"">troubleshooting guide</a> provided by Oracle might also be helpful.</span></div>","/spaces/SOP/pages/1802268/Oracle+-+MindsDB","/pages/resumedraft.action?draftId=1802268","/x/HIAb"
"1802289","current","Snowflake - MindsDB","491527","491782","page","58356","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:25.655Z","2025-10-24T14:02:25.655Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.snowflake.com/en/"">Snowflake</a>, a cloud data warehouse used to store and analyze data.
The integration allows MindsDB to access data stored in the Snowflake database and enhance it with AI capabilities.</span>
<div><div><span><strong>Important!</strong></span><span>When querying data from Snowflake, MindsDB automatically converts column names to lower-case. To prevent this, users can provide an alias name as shown below.</span><span><strong>This update is introduced with the MindsDB version 25.3.4.1. It is not backward-compatible and has the following implications:</strong></span><ol>
<li>Queries to Snowflake will return column names in lower-case from now on.</li>
<li>The models created with Snowflake as a data source must be recreated.</li>
</ol><span><strong>How it works</strong></span><span>The below query presents how Snowflake columns are output when queried from MindsDB.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       CC_NAME,                 </span><span style=""color: rgb(110,119,129);"">-- converted to lower-case</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       CC_CLASS </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(10,48,105);""> `CC_CLASS`</span><span style=""color: rgb(31,35,40);"">,  </span><span style=""color: rgb(110,119,129);"">-- provided alias name in upper-case</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       CC_EMPLOYEES,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">       cc_employees</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> snowflake_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">TPCDS_SF100TCL</span><span style=""color: rgb(31,35,40);"">.CALL_CENTER;</span></span>
</code></pre></div></div></div><span>Here is the output:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------+----------+--------------+--------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| cc_name      | CC_CLASS | cc_employees | cc_employees |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------+----------+--------------+--------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| NY Metro     | large    | </span><span style=""color: rgb(5,80,174);"">597159671</span><span style=""color: rgb(31,35,40);"">    | </span><span style=""color: rgb(5,80,174);"">597159671</span><span style=""color: rgb(31,35,40);"">    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Mid Atlantic | medium   | </span><span style=""color: rgb(5,80,174);"">944879074</span><span style=""color: rgb(31,35,40);"">    | </span><span style=""color: rgb(5,80,174);"">944879074</span><span style=""color: rgb(31,35,40);"">    |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">--------------+----------+--------------+--------------+</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Snowflake to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Snowflake database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> snowflake_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'snowflake'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;account&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;tvuibdy-vm85921&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>account</code>: The Snowflake account identifier. This <a class=""link"" href=""https://docs.snowflake.com/en/user-guide/admin-account-identifier"">guide</a> will help you find your account identifier.</li>
<li><code>user</code>: The username for the Snowflake account.</li>
<li><code>password</code>: The password for the Snowflake account.</li>
<li><code>database</code>: The name of the Snowflake database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>warehouse</code>: The Snowflake warehouse to use for running queries.</li>
<li><code>schema</code>: The database schema to use within the Snowflake database. Default is <code>PUBLIC</code>.</li>
<li><code>role</code>: The Snowflake role to use.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Connect to the Snowflake database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> snowflake_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'snowflake'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;account&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;VHACDYL-LQ24981&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;DEMO_USER&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Demo_Userg1&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;DENO&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;warehouse&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;DEMO_HAREHOUSE&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> snowflake_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">sample_data</span><span style=""color: rgb(31,35,40);"">.orders;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run Snowflake SQL queries directly on the connected Snowflake database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> snowflake_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        employee_table.</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);""> EXCLUDE department_id,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        department_table.</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(31,35,40);""> RENAME department_name </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> department</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> employee_table </span><span style=""color: rgb(207,34,46);"">INNER JOIN</span><span style=""color: rgb(31,35,40);""> department_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        ON</span><span style=""color: rgb(5,80,174);""> employee_table</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">department_id</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> department_table</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">department_id</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ORDER BY</span><span style=""color: rgb(31,35,40);""> department, last_name, first_name;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Snowflake account.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Snowflake is active.</li>
<li>Confirm that account, user, password and database are correct. Try a direct Snowflake connection using a client like DBeaver.</li>
<li>Ensure a stable network between MindsDB and Snowflake.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<span>This <a class=""link"" href=""https://community.snowflake.com/s/article/Snowflake-Client-Connectivity-Troubleshooting"">troubleshooting guide</a> provided by Snowflake might also be helpful.</span></div>","/spaces/SOP/pages/1802289/Snowflake+-+MindsDB","/pages/resumedraft.action?draftId=1802289","/x/MYAb"
"1802312","current","Weaviate - MindsDB","491527","491782","page","69183","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:13.035Z","2025-10-24T14:03:13.035Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Weaviate for MindsDB.</span>
<span>Weaviate is an open-source vector database. It allows you to store data objects and vector embeddings from your favorite ML-models, and scale seamlessly into billions of data objects.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Weaviate to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Weaviate.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler uses <code>weaviate-client</code> python library connect to a weaviate instance.</span>
<span>The required arguments to establish a connection are:</span>
<ul>
<li><code>weaviate_url</code>: url of the weaviate database</li>
<li><code>weaviate_api_key</code>: API key to authenticate with weaviate (in case of cloud instance).</li>
<li><code>persistence_directory</code>: directory to be used in case of local storage</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-connection"">‚Äã</a></div><span class=""cursor-pointer"">Creating connection</span></h3>
<span>In order to make use of this handler and connect to a Weaviate server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> weaviate_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;weaviate&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;weaviate_url&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;https://sample.weaviate.network&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;weaviate_api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;api-key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> weaviate_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;weaviate&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;weaviate_url&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;https://localhost:8080&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> weaviate_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">            WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;weaviate&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;persistence_directory&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;db_path&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#dropping-connection"">‚Äã</a></div><span class=""cursor-pointer"">Dropping connection</span></h3>
<span>To drop the connection, use this command</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(31,35,40);""> weaviate_datasource;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-tables"">‚Äã</a></div><span class=""cursor-pointer"">Creating tables</span></h3>
<span>To insert data from a pre-existing table, use <code>CREATE</code></span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> weaviate_datascource</span><span style=""color: rgb(31,35,40);"">.test</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> sqlitedb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>As weaviate currently doesn&rsquo;t support json field.
So, this creates another table for the &ldquo;metadata&rdquo; field and a reference is created in the original table which points to
its metadata entry.</span>
<span>Weaviate follows GraphQL conventions where classes (which are table schemas) start with a capital letter and
properties start with a lowercase letter.</span>
<span>So whenever we create a table, the table&rsquo;s name gets capitalized.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#dropping-collections"">‚Äã</a></div><span class=""cursor-pointer"">Dropping collections</span></h3>
<span>To drop a Weaviate table use this command</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(5,80,174);""> weaviate_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tablename</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying-and-selecting"">‚Äã</a></div><span class=""cursor-pointer"">Querying and selecting</span></h3>
<span>To query database using a search vector, you can use <code>search_vector</code> or <code>embeddings</code> in <code>WHERE</code> clause</span>

<span>Basic query</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> from</span><span style=""color: rgb(5,80,174);""> weaviate_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test</span></span>
</code></pre></div></div></div>
<span>You can use <code>WHERE</code> clause on dynamic fields like normal SQL</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> weaviate_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">createtest</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> category </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;science&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#deleting-records"">‚Äã</a></div><span class=""cursor-pointer"">Deleting records</span></h3>
<span>You can delete entries using <code>DELETE</code> just like in SQL.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> weaviate_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">test</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">IN</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">3</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Update is not supported by mindsdb vector database</span></div>","/spaces/SOP/pages/1802312/Weaviate+-+MindsDB","/pages/resumedraft.action?draftId=1802312","/x/SIAb"
"1802331","current","How to Use Agents - MindsDB","491527","491782","page","71793","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:29.730Z","2025-10-24T14:09:36.877Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Agents enable conversation with data, including structured and unstructured data connected to MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#create-agents"">‚Äã</a></div><span class=""cursor-pointer"">Create Agents</span></h2>
<span>Here is the syntax for creating an agent:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">agent </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.agents.create(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'my_agent'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'gpt-4o'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-abc123'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'base_url'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'http://example.com'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'api_version'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'2024-02-01'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        data</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'knowledge_bases'</span><span style=""color: rgb(31,35,40);"">: [</span><span style=""color: rgb(10,48,105);"">'project_name.kb_name'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'tables'</span><span style=""color: rgb(31,35,40);"">: [</span><span style=""color: rgb(10,48,105);"">'datasource_conn_name.table_name'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        prompt_template</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'describe data'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>It creates an agent that uses the defined model and has access to the connected data. Here is how to list all available agents.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">agents </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.agents.list()</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(agents)</span></span>
</code></pre></div></div></div>
<span>The following sections explain all the agent parameters.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#model"">‚Äã</a></div><span class=""cursor-pointer""><code>model</code></span></h3>
<span>This parameter defines the underlying language model, including:</span>
<ul>
<li>
<span><code>provider</code>
It is a required parameter. It defines the model provider from the list below.</span>
</li>
<li>
<span><code>model_name</code>
It is a required parameter. It defines the model name from the list below.</span>
</li>
<li>
<span><code>api_key</code>
It is an optional parameter (applicable to selected providers), which stores the API key to access the model. Users can provide it either in this <code>api_key</code> parameter, or using <a class=""link"" href=""/mindsdb_sql/functions/from_env"">environment variables</a>.</span>
</li>
<li>
<span><code>base_url</code>
It is an optional parameter (applicable to selected providers), which stores the base URL for accessing the model. It is the root URL used to send API requests.</span>
</li>
<li>
<span><code>api_version</code>
It is an optional parameter (applicable to selected providers), which defines the API version.</span>
</li>
</ul>
<span>The available models and providers include the following.</span>
<div><div class=""leading-tight text-left""><p>Anthropic</p></div><div><span>Available models:</span><ul>
<li>claude-3-opus-20240229</li>
<li>claude-3-sonnet-20240229</li>
<li>claude-3-haiku-20240307</li>
<li>claude-2.1</li>
<li>claude-2.0</li>
<li>claude-instant-1.2</li>
</ul></div><div class=""leading-tight text-left""><p>Google</p></div><div><span>Available models:</span><ul>
<li>gemini-2.5-pro-preview-03-25</li>
<li>gemini-2.0-flash</li>
<li>gemini-2.0-flash-lite</li>
<li>gemini-1.5-flash</li>
<li>gemini-1.5-flash-8b</li>
<li>gemini-1.5-pro</li>
</ul></div><div class=""leading-tight text-left""><p>Ollama</p></div><div><span>Available models:</span><ul>
<li>gemma</li>
<li>llama2</li>
<li>mistral</li>
<li>mixtral</li>
<li>llava</li>
<li>neural-chat</li>
<li>codellama</li>
<li>dolphin-mixtral</li>
<li>qwen</li>
<li>llama2-uncensored</li>
<li>mistral-openorca</li>
<li>deepseek-coder</li>
<li>nous-hermes2</li>
<li>phi</li>
<li>orca-mini</li>
<li>dolphin-mistral</li>
<li>wizard-vicuna-uncensored</li>
<li>vicuna</li>
<li>tinydolphin</li>
<li>llama2-chinese</li>
<li>openhermes</li>
<li>zephyr</li>
<li>nomic-embed-text</li>
<li>tinyllama</li>
<li>openchat</li>
<li>wizardcoder</li>
<li>phind-codellama</li>
<li>starcoder</li>
<li>yi</li>
<li>orca2</li>
<li>falcon</li>
<li>starcoder2</li>
<li>wizard-math</li>
<li>dolphin-phi</li>
<li>nous-hermes</li>
<li>starling-lm</li>
<li>stable-code</li>
<li>medllama2</li>
<li>bakllava</li>
<li>codeup</li>
<li>wizardlm-uncensored</li>
<li>solar</li>
<li>everythinglm</li>
<li>sqlcoder</li>
<li>nous-hermes2-mixtral</li>
<li>stable-beluga</li>
<li>yarn-mistral</li>
<li>samantha-mistral</li>
<li>stablelm2</li>
<li>meditron</li>
<li>stablelm-zephyr</li>
<li>magicoder</li>
<li>yarn-llama2</li>
<li>wizard-vicuna</li>
<li>llama-pro</li>
<li>deepseek-llm</li>
<li>codebooga</li>
<li>mistrallite</li>
<li>dolphincoder</li>
<li>nexusraven</li>
<li>open-orca-platypus2</li>
<li>all-minilm</li>
<li>goliath</li>
<li>notux</li>
<li>alfred</li>
<li>megadolphin</li>
<li>xwinlm</li>
<li>wizardlm</li>
<li>duckdb-nsql</li>
<li>notus</li>
</ul></div><div class=""leading-tight text-left""><p>OpenAI</p></div><div><span>Available models:</span><ul>
<li>gpt-3.5-turbo</li>
<li>gpt-3.5-turbo-16k</li>
<li>gpt-3.5-turbo-instruct</li>
<li>gpt-4</li>
<li>gpt-4-32k</li>
<li>gpt-4-1106-preview</li>
<li>gpt-4-0125-preview</li>
<li>gpt-4.1</li>
<li>gpt-4.1-mini</li>
<li>gpt-4o</li>
<li>o4-mini</li>
<li>o3-mini</li>
<li>o1-mini</li>
</ul></div><div class=""leading-tight text-left""><p>Nvidia NIM</p></div><div><span>Available models:</span><ul>
<li>microsoft/phi-3-mini-4k-instruct</li>
<li>mistralai/mistral-7b-instruct-v0.2</li>
<li>writer/palmyra-med-70b</li>
<li>mistralai/mistral-large</li>
<li>mistralai/codestral-22b-instruct-v0.1</li>
<li>nvidia/llama3-chatqa-1.5-70b</li>
<li>upstage/solar-10.7b-instruct</li>
<li>google/gemma-2-9b-it</li>
<li>adept/fuyu-8b</li>
<li>google/gemma-2b</li>
<li>databricks/dbrx-instruct</li>
<li>meta/llama-3_1-8b-instruct</li>
<li>microsoft/phi-3-medium-128k-instruct</li>
<li>01-ai/yi-large</li>
<li>nvidia/neva-22b</li>
<li>meta/llama-3_1-70b-instruct</li>
<li>google/codegemma-7b</li>
<li>google/recurrentgemma-2b</li>
<li>google/gemma-2-27b-it</li>
<li>deepseek-ai/deepseek-coder-6.7b-instruct</li>
<li>mediatek/breeze-7b-instruct</li>
<li>microsoft/kosmos-2</li>
<li>microsoft/phi-3-mini-128k-instruct</li>
<li>nvidia/llama3-chatqa-1.5-8b</li>
<li>writer/palmyra-med-70b-32k</li>
<li>google/deplot</li>
<li>meta/llama-3_1-405b-instruct</li>
<li>aisingapore/sea-lion-7b-instruct</li>
<li>liuhaotian/llava-v1.6-mistral-7b</li>
<li>microsoft/phi-3-small-8k-instruct</li>
<li>meta/codellama-70b</li>
<li>liuhaotian/llava-v1.6-34b</li>
<li>nv-mistralai/mistral-nemo-12b-instruct</li>
<li>microsoft/phi-3-medium-4k-instruct</li>
<li>seallms/seallm-7b-v2.5</li>
<li>mistralai/mixtral-8x7b-instruct-v0.1</li>
<li>mistralai/mistral-7b-instruct-v0.3</li>
<li>google/paligemma</li>
<li>google/gemma-7b</li>
<li>mistralai/mixtral-8x22b-instruct-v0.1</li>
<li>google/codegemma-1.1-7b</li>
<li>nvidia/nemotron-4-340b-instruct</li>
<li>meta/llama3-70b-instruct</li>
<li>microsoft/phi-3-small-128k-instruct</li>
<li>ibm/granite-8b-code-instruct</li>
<li>meta/llama3-8b-instruct</li>
<li>snowflake/arctic</li>
<li>microsoft/phi-3-vision-128k-instruct</li>
<li>meta/llama2-70b</li>
<li>ibm/granite-34b-code-instruct</li>
</ul></div><div class=""leading-tight text-left""><p>Writer</p></div><div><span>Available models:</span><ul>
<li>palmyra-x5</li>
<li>palmyra-x4</li>
</ul></div></div>
<span>Users can define the model for the agent choosing one of the following options.</span>
<span><strong>Option 1.</strong> Use the <code>model</code> parameter to define the specification.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">        ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'gpt-4o'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-abc123'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'base_url'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'http://example.com'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'api_version'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'2024-02-01'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        ...</span></span>
</code></pre></div></div></div>
<span><strong>Option 2.</strong> Define the default model in the <a class=""link"" href=""/setup/custom-config"">MindsDB configuration file</a>.</span>
<span>If you define <code>default_llm</code> in the configuration file, you do not need to provide the <code>model</code> parameter when creating an agent. If provide both, then the values from the <code>model</code> parameter are used.</span>
<div><div><span>You can define the default models in the Settings of the MindsDB Editor GUI.</span></div></div>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">&quot;default_llm&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">      &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">      &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;got-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">      &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">      &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://example.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">      &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#data"">‚Äã</a></div><span class=""cursor-pointer""><code>data</code></span></h3>
<span>This parameter stores data connected to the agent, including knowledge bases and data sources connected to MindsDB.</span>
<span>The following parameters store the list of connected data.</span>
<ul>
<li>
<span><code>knowledge_bases</code> stores the list of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases</a> to be used by the agent.</span>
</li>
<li>
<span><code>tables</code> stores the list of tables from data sources connected to MindsDB.</span>
</li>
</ul>
<div><div><span>Note that you can insert all tables from a connected data source and all knowledge bases from a project using the <code>*</code> syntax.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">        ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        data</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'knowledge_bases'</span><span style=""color: rgb(31,35,40);"">: [</span><span style=""color: rgb(10,48,105);"">'project_name.*'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'tables'</span><span style=""color: rgb(31,35,40);"">: [</span><span style=""color: rgb(10,48,105);"">'datasource_conn_name.*'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">        ...</span></span>
</code></pre></div></div></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prompt-template"">‚Äã</a></div><span class=""cursor-pointer""><code>prompt_template</code></span></h3>
<span>This parameter stores instructions for the agent.</span>
<span>It is recommended to provide data description of the data sources listed in the <code>knowledge_bases</code> and <code>tables</code> parameters to help the agent locate relevant data for answering questions.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#timeout"">‚Äã</a></div><span class=""cursor-pointer""><code>timeout</code></span></h3>
<span>This parameter defines the time the agent can take to come back with an answer.</span>
<span>For example, when the <code>timeout</code> parameter is set to 10, the agent has 10 seconds to return an answer. If the agent takes longer than 10 seconds, it aborts the process and comes back with an answer indicating its failure to return an answer within the defined time interval.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#get-agents"">‚Äã</a></div><span class=""cursor-pointer"">Get Agents</span></h2>
<span>You can get an existing agent with the <code>get()</code> method.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">agent </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.agents.get(</span><span style=""color: rgb(10,48,105);"">'sales_agent'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-agents"">‚Äã</a></div><span class=""cursor-pointer"">Query Agents</span></h2>
<span>Query an agent to generate responses to questions.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">completion </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> agent.completion([{</span><span style=""color: rgb(10,48,105);"">'question'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'What is the average number of orders per customers?'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'answer'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">None</span><span style=""color: rgb(31,35,40);"">}])</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(completion.content)</span></span>
</code></pre></div></div></div>
<span>Here is how to query agents with enabled streaming, allowing users to view agent&rsquo;s thoughts when it is working on answering questions.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">completion </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> agent.completion_stream([{</span><span style=""color: rgb(10,48,105);"">'question'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'What is the average number of orders per customers?'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'answer'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">None</span><span style=""color: rgb(31,35,40);"">}])</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">for</span><span style=""color: rgb(31,35,40);""> chunk </span><span style=""color: rgb(207,34,46);"">in</span><span style=""color: rgb(31,35,40);""> completion:</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    print</span><span style=""color: rgb(31,35,40);"">(chunk)</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#update-agents"">‚Äã</a></div><span class=""cursor-pointer"">Update Agents</span></h2>
<span>Update existing agents with new data, model, or prompt.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">agent.data[</span><span style=""color: rgb(10,48,105);"">'tables'</span><span style=""color: rgb(31,35,40);"">].append(</span><span style=""color: rgb(10,48,105);"">'mysql_demo_db.car_sales'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">updated_agent </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.agents.update(</span><span style=""color: rgb(10,48,105);"">'my_agent'</span><span style=""color: rgb(31,35,40);"">, agent)</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(updated_agent)</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#delete-agents"">‚Äã</a></div><span class=""cursor-pointer"">Delete Agents</span></h2>
<span>Here is the syntax for deleting an agent:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">server.agents.drop(</span><span style=""color: rgb(10,48,105);"">'my_agent'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1802331/How+to+Use+Agents+-+MindsDB","/pages/resumedraft.action?draftId=1802331","/x/W4Ab"
"1802348","current","Use a Data Source - MindsDB","491527","491782","page","89815","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:00.353Z","2025-10-24T14:05:00.353Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>USE integration_name</code> statement provides an option to use the connected
datasources and <code>SELECT</code> from the database tables. Even if you are
connecting to MindsDB as MySQL database, you will still be able to <code>SELECT</code> from your database.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>To connect to your database <code>USE</code> the created datasource:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">USE</span><span style=""color: rgb(31,35,40);""> integration_name;</span></span>
</code></pre></div></div></div>
<span>Then, simply <code>SELECT</code> from the tables:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> table_name;</span></span>
</code></pre></div></div></div>
<span><span style=""visibility: visible;""><img alt=""Use datasource"" class=""object-contain"" height=""690"" src=""https://mintcdn.com/mindsdb/2W3ufVC_5_fCv4ZW/assets/sql/use.png?fit=max&amp;auto=format&amp;n=2W3ufVC_5_fCv4ZW&amp;q=85&amp;s=881691c7c47c535921c033b0648a3541"" style="""" width=""786"" /></span></span></div>","/spaces/SOP/pages/1802348/Use+a+Data+Source+-+MindsDB","/pages/resumedraft.action?draftId=1802348","/x/bIAb"
"1802365","current","Create Agent - MindsDB","491527","491782","page","103361","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:13.175Z","2025-10-24T14:06:13.175Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/agents</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;agent&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;name&quot;: &quot;my_agent&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;model&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;: &quot;openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;: &quot;gpt-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;: &quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;data&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;knowledge_bases&quot;: [&quot;my_project.my_kb&quot;],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;tables&quot;: [&quot;my_data_source.my_table&quot;]</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;prompt_template&quot;: &quot;my_project.my_kb stores documentation of MindsDB, my_data_source.my_table stores documentation of MindsDB&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1802365/Create+Agent+-+MindsDB","/pages/resumedraft.action?draftId=1802365","/x/fYAb"
"1802384","current","Update a Data Source - MindsDB","491527","491782","page","107895","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:45.334Z","2025-10-24T14:06:45.334Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>Updates an existing database connection.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> PUT</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/databases/{databaseName}</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --header</span><span style=""color: rgb(10,48,105);""> 'Content-Type: application/json'</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --data</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;database&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;engine&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;parameters&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;user&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;port&quot;: &quot;&lt;string&gt;&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;database&quot;: &quot;&lt;string&gt;&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1802384/Update+a+Data+Source+-+MindsDB","/pages/resumedraft.action?draftId=1802384","/x/kIAb"
"1802403","current","Create a Job - MindsDB","491527","491782","page","108520","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:58.798Z","2025-10-24T14:09:44.142Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_job()</code> and <code>create_job()</code> functions let you save either an existing job or a newly created job into a variable.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>get_job()</code> method to get an existing job:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_job </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.get_job(</span><span style=""color: rgb(10,48,105);"">'my_job'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Or, the <code>create_job()</code> method to create a job:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_job </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.create_job(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'job_name'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'select * from models'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    repeat_str</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> '1 hour'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Alternatively, you can create a job using this syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">with</span><span style=""color: rgb(31,35,40);""> project.jobs.create(</span><span style=""color: rgb(149,56,0);"">name</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'job_name'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(149,56,0);"">repeat_min</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> job:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      job.add_query(model.retrain())</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      job.add_query(model.predict(database.tables.tbl1))</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      job.add_query(kb.insert(database.tables.tbl1))</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      job.add_query(</span><span style=""color: rgb(10,48,105);"">'show models'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Where:</span>
<ul>
<li><code>name='job_name'</code> is the job name,</li>
<li><code>repeat_min=1</code> indicates periodicity of the job in minutes,</li>
<li><code>job.add_query(model.retrain())</code> adds a task to a job to retrain a model,</li>
<li><code>job.add_query(model.predict(database.tables.tbl1))</code> adds a task to a job to make predictions,</li>
<li><code>job.add_query(kb.insert(database.tables.tbl1))</code> adds a task to a job to insert data into a knowledge base,</li>
<li><code>job.add_query('show models')</code> adds a task to a job to run the statement provided as string value.</li>
</ul>
<span>Note that the <code>add_query()</code> method adds tasks to a job and takes either String or Query as an argument.</span>
<span>Note that this method enables a job to manipulate Knowledge Bases, Models, Tables, Views, and Queries, but not Databases, Handlers, Jobs, ML Engines, or Projects.</span></div>","/spaces/SOP/pages/1802403/Create+a+Job+-+MindsDB","/pages/resumedraft.action?draftId=1802403","/x/o4Ab"
"1835013","current","How Agents Work - MindsDB","491527","491782","page","6288","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:14.172Z","2025-10-24T13:53:14.172Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Agents enable conversation with data, including structured and unstructured data connected to MindsDB.</span>
<span>Connect your data to MindsDB by <a class=""link"" href=""/integrations/data-overview"">connecting databases or applications</a> or <a class=""link"" href=""/mindsdb_sql/sql/create/file"">uploading files</a>. Users can opt for using <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases</a> to store and retrieve data efficiently.</span>
<span>Create an agent, passing the connected data and defining the underlying model.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT my_agent</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    data</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;knowledge_bases&quot;</span><span style=""color: rgb(31,35,40);"">: [&quot;mindsdb.sales_kb&quot;, &quot;mindsdb.orders_kb&quot;],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;tables&quot;</span><span style=""color: rgb(31,35,40);"">: [&quot;postgres_conn.customers&quot;, &quot;mysql_conn.products&quot;]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    prompt_template</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        mindsdb.sales_kb stores sales analytics data</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        mindsdb.orders_kb stores order data</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        postgres_conn.customers stores customers data</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        mysql_conn.products stores products data</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Query an agent and ask question over the connected data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> answer</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_agent </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> question </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'What is the average number of orders per customers?'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Follow <a class=""link"" href=""/mindsdb_sql/agents/agent_syntax"">this doc page to learn more about the usage of agents</a>.</span></div></div></div>","/spaces/SOP/pages/1835013/How+Agents+Work+-+MindsDB","/pages/resumedraft.action?draftId=1835013","/x/BQAc"
"1835032","current","Tutorial to Get Started with MindsDB - MindsDB","491527","491782","page","8216","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:24.910Z","2025-10-24T13:53:24.910Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Before we start, install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<span>Get started with MindsDB in a few simple steps:</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Connect</p><div><span>Connect one or more data sources. Explore all available <a class=""link"" href=""/integrations/data-overview"">data sources here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Unify</p><div><span>Unify your data with <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Respond</p><div><span>Respond to questions over your data with <a class=""link"" href=""/mindsdb_sql/agents/agent"">AI agents</a>.</span></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#step-1-connect"">‚Äã</a></div><span class=""cursor-pointer"">Step 1. Connect</span></h2>
<span>MindsDB enables connecting data from various data sources and operating on data without moving it from its source. Learn more <a class=""link"" href=""/mindsdb-connect"">here</a>.</span>
<ul>
<li><strong>Connecting Structured Data</strong></li>
</ul>
<span>Use the <a class=""link"" href=""/mindsdb_sql/sql/create/database""><code>CREATE DATABASE</code></a> statement to connect a data source to MindsDB.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mysql_demo_db</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mysql'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;MindsDBUser123!&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;3306&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;public&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>This is the input data used in the following steps:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 3</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>The sample contains contains information about properties for rent.</span>
<ul>
<li><strong>Connecting Unstructured Data</strong></li>
</ul>
<span>Extract data from webpages using the <a class=""link"" href=""/integrations/app-integrations/web-crawler"">web crawler</a> or <a class=""link"" href=""/integrations/files/csv-xlsx-xls"">upload files</a> to MindsDB.</span>
<span>In this example, we fetch data from MindsDB Documentation webpage using the web crawler.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_web</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'web'</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(31,35,40);"">, text_content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'https://docs.mindsdb.com/'</span></span>
</code></pre></div></div></div>
<span>Now we save this data into a view which is saved in the default <code>mindsdb</code> project.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> mindsdb_docs</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(31,35,40);"">, text_content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> my_web</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">crawler</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(207,34,46);""> url</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'https://docs.mindsdb.com/'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">mindsdb_docs</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#step-2-unify"">‚Äã</a></div><span class=""cursor-pointer"">Step 2. Unify</span></h2>
<span>MindsDB enables unifying data from structured and unstructured data sources into a single, queryable interface. This unified view allows seamless querying and model-building across all data without consolidation into one system. Learn more <a class=""link"" href=""/mindsdb-unify"">here</a>.</span>
<span>Create a knowledge base to store all your data in a single location. Learn more about <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases here</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    embedding_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;text-embedding-3-large&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-openai-api-key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    reranking_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-openai-api-key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    content_columns </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> ['content'];</span></span>
</code></pre></div></div></div>
<span><a class=""link"" href=""/mindsdb_sql/knowledge_bases/insert_data"">Insert data</a> from Step 1 into the knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'number_of_rooms: '</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> number_of_rooms </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'number_of_bathrooms'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> number_of_bathrooms </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'sqft'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> sqft </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'location'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(207,34,46);""> location</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'days_on_market'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> days_on_market </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'neighborhood'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> neighborhood </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            'rental_price'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> rental_price</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                AS</span><span style=""color: rgb(31,35,40);""> content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> text_content </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">mindsdb_docs</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span><a class=""link"" href=""/mindsdb_sql/knowledge_bases/query"">Query the knowledge base</a> to search your data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'what is MindsDB'</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> content </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'rental price lower than 2000'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>In order to keep the knowledge base up-to-date with your data, use <a class=""link"" href=""/mindsdb_sql/sql/create/jobs"">jobs</a> to automate data inserts every time your data is modified.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> JOB update_kb (</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">  INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      SELECT</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'number_of_rooms: '</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> number_of_rooms </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'number_of_bathrooms'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> number_of_bathrooms </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'sqft'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> sqft </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'location'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(207,34,46);""> location</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'days_on_market'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> days_on_market </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'neighborhood'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> neighborhood </span><span style=""color: rgb(207,34,46);"">||</span><span style=""color: rgb(10,48,105);""> ', '</span><span style=""color: rgb(207,34,46);""> ||</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">              'rental_price'</span><span style=""color: rgb(207,34,46);""> ||</span><span style=""color: rgb(31,35,40);""> rental_price</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                  AS</span><span style=""color: rgb(31,35,40);""> content</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      WHERE</span><span style=""color: rgb(31,35,40);""> created_at </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(31,35,40);""> LATEST</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">EVERY </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(207,34,46);""> day</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#step-3-respond"">‚Äã</a></div><span class=""cursor-pointer"">Step 3. Respond</span></h2>
<span>MindsDB enables generating insightful and accurate responses from unified data using natural language. Learn more <a class=""link"" href=""/mindsdb-respond"">here</a>.</span>
<span>Create an <a class=""link"" href=""https://docs.mindsdb.com/mindsdb_sql/agents/agent"">agent</a> that can answer questions over your unified data from Step 2.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> AGENT my_agent</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-openai-api-key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    data</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;knowledge_bases&quot;</span><span style=""color: rgb(31,35,40);"">: [&quot;mindsdb.my_kb&quot;],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">         &quot;tables&quot;</span><span style=""color: rgb(31,35,40);"">: [&quot;mysql_demo_db.home_rentals&quot;]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    prompt_template </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mindsdb.my_kb stores data about mindsdb and home rentals,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                      mysql_demo_db.home_rentals stores data about home rentals'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Now you can ask questions over your data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_agent</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> question </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'what is MindsDB?'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Visit the <a class=""link"" href=""/mindsdb_sql/agents/agent_gui"">Respond tab in the MindsDB Editor</a> to chat with an agent.</span></div>","/spaces/SOP/pages/1835032/Tutorial+to+Get+Started+with+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1835032","/x/GAAc"
"1835053","current","Google Cloud SQL - MindsDB","491527","491782","page","46336","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:46.554Z","2025-10-24T14:01:46.554Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Google Cloud SQL data handler for MindsDB.</span>
<span><a class=""link"" href=""https://cloud.google.com/sql"">Cloud SQL</a> is a fully-managed database service that makes it easy to set up, maintain, manage, and administer your relational PostgreSQL, MySQL, and SQL Server databases in the cloud.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Google Cloud SQL to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Google Cloud SQL.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented using the existing MindsDB handlers for MySQL, PostgreSQL and SQL Server.</span>
<span>The required arguments to establish a connection are,</span>
<ul>
<li><code>host</code>: the host name or IP address of the Google Cloud SQL instance.</li>
<li><code>port</code>: the TCP/IP port of the Google Cloud SQL instance.</li>
<li><code>user</code>: the username used to authenticate with the Google Cloud SQL instance.</li>
<li><code>password</code>: the password to authenticate the user with the Google Cloud SQL instance.</li>
<li><code>database</code>: the database name to use when connecting with the Google Cloud SQL instance.</li>
<li><code>db_engine</code>: the database engine of the Google Cloud SQL instance. This can take one of three values: &lsquo;mysql&rsquo;, &lsquo;postgresql&rsquo; or &lsquo;mssql&rsquo;.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Google Cloud SQL instance, you need to create a datasource with the following syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> cloud_sql_mysql_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'cloud_sql'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;db_engine&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mysql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;53.170.61.16&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>To successfully connect to the Google Cloud SQL instance you have to make sure that the IP address of the machine you are using to connect is added to the authorized networks of the Google Cloud SQL instance. You can do this by following the steps below:</span>
<ol>
<li>Go to the <a class=""link"" href=""https://console.cloud.google.com/sql/instances"">Cloud SQL Instances</a> page.</li>
<li>Click on the instance you want to add authorized networks to.</li>
<li>Click on the <strong>Connections</strong> tab.</li>
<li>Click on <strong>Networking</strong> tab.</li>
<li>Click on <strong>Add network</strong>.</li>
<li>Enter the IP address of the machine you want to connect from.</li>
</ol>
<span>If you are using MindsDB cloud version you can use the following IP address: <code>18.220.205.95 3.19.152.46 52.14.91.162</code></span>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> cloud_sql_mysql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1835053/Google+Cloud+SQL+-+MindsDB","/pages/resumedraft.action?draftId=1835053","/x/LQAc"
"1835076","current","MariaDB - MindsDB","491527","491782","page","49529","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:57.417Z","2025-10-24T14:01:57.417Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://mariadb.org/"">MariaDB</a>, one of the most popular open source relational databases.
The integration allows MindsDB to access data from MariaDB and enhance MariaDB with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect MariaDB to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to MariaDB from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/mariadb_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mariadb_conn</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mariadb'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;host-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3307</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;db-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user-name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Or:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mariadb_conn</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mariadb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mariadb://user-name@host-name:3307&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>user</code>: The username for the MariaDB database.</li>
<li><code>password</code>: The password for the MariaDB database.</li>
<li><code>host</code>: The hostname, IP address, or URL of the MariaDB server.</li>
<li><code>port</code>: The port number for connecting to the MariaDB server.</li>
<li><code>database</code>: The name of the MariaDB database to connect to.</li>
</ul>
<span>Or:</span>
<ul>
<li><code>url</code>: You can specify a connection to MariaDB Server using a URI-like string, as an alternative connection option. You can also use <code>mysql://</code> as the protocol prefix</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>ssl</code>: Boolean parameter that indicates whether SSL encryption is enabled for the connection. Set to True to enable SSL and enhance connection security, or set to False to use the default non-encrypted connection.</li>
<li><code>ssl_ca</code>:  Specifies the path to the Certificate Authority (CA) file in PEM format.</li>
<li><code>ssl_cert</code>:  Specifies the path to the SSL certificate file. This certificate should be signed by a trusted CA specified in the <code>ssl_ca</code> file or be a self-signed certificate trusted by the server.</li>
<li><code>ssl_key</code>: Specifies the path to the private key file (in PEM format).</li>
<li><code>use_pure</code> (<code>True</code> by default): Whether to use pure Python or C Extension. If <code>use_pure=False</code> and the C Extension is not available, then Connector/Python will automatically fall back to the pure Python implementation.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The following usage examples utilize the connection to MariaDB made via the <code>CREATE DATABASE</code> statement and named <code>mariadb_conn</code>.</span>
<span>Retrieve data from a specified table by providing the integration and table name.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mariadb_conn</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the MariaDB database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure that the MariaDB server is running and accessible</li>
<li>Confirm that host, port, user, and password are correct. Try a direct MySQL connection.</li>
<li>Test the network connection between the MindsDB host and the MariaDB server.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces, reserved words or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1835076/MariaDB+-+MindsDB","/pages/resumedraft.action?draftId=1835076","/x/RAAc"
"1835103","current","Microsoft SQL Server - MindsDB","491527","491782","page","50836","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:03.005Z","2025-10-24T14:02:03.005Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with Microsoft SQL Server, a relational database management system developed by Microsoft.
The integration allows for advanced SQL functionalities, extending Microsoft SQL Server&rsquo;s capabilities with MindsDB&rsquo;s features.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">locally via Docker</a> or use <a class=""link"" href=""https://cloud.mindsdb.com/"">MindsDB Cloud</a>.</li>
<li>To connect Microsoft SQL Server to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#installation"">‚Äã</a></div><span class=""cursor-pointer"">Installation</span></h3>
<span>The MSSQL handler supports two connection methods:</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#option-1%3A-standard-connection-pymssql-recommended"">‚Äã</a></div><span class=""cursor-pointer"">Option 1: Standard Connection (pymssql - Recommended)</span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> mindsdb[mssql]</span></span>
</code></pre></div></div></div>
<span>This installs <code>pymssql</code>, which provides native FreeTDS-based connections. Works on all platforms.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#option-2%3A-odbc-connection-pyodbc"">‚Äã</a></div><span class=""cursor-pointer"">Option 2: ODBC Connection (pyodbc)</span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> mindsdb[mssql-odbc]</span></span>
</code></pre></div></div></div>
<span>This installs both <code>pymssql</code> and <code>pyodbc</code> for ODBC driver support.</span>
<span><strong>Additional requirements for ODBC:</strong></span>
<ul>
<li><strong>System ODBC libraries</strong>: On Linux, install <code>unixodbc</code> and <code>unixodbc-dev</code>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">sudo</span><span style=""color: rgb(10,48,105);""> apt-get</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> unixodbc</span><span style=""color: rgb(10,48,105);""> unixodbc-dev</span></span>
</code></pre></div></div></div>
</li>
<li><strong>Microsoft ODBC Driver for SQL Server</strong>:
<ul>
<li><strong>Linux</strong>:
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);""># Add Microsoft repository</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(10,48,105);""> https://packages.microsoft.com/keys/microsoft.asc</span><span style=""color: rgb(207,34,46);""> |</span><span style=""color: rgb(149,56,0);""> sudo</span><span style=""color: rgb(10,48,105);""> tee</span><span style=""color: rgb(10,48,105);""> /etc/apt/trusted.gpg.d/microsoft.asc</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(10,48,105);""> https://packages.microsoft.com/config/ubuntu/</span><span style=""color: rgb(31,35,40);"">$(</span><span style=""color: rgb(149,56,0);"">lsb_release</span><span style=""color: rgb(5,80,174);""> -rs</span><span style=""color: rgb(31,35,40);"">)</span><span style=""color: rgb(10,48,105);"">/prod.list</span><span style=""color: rgb(207,34,46);""> |</span><span style=""color: rgb(149,56,0);""> sudo</span><span style=""color: rgb(10,48,105);""> tee</span><span style=""color: rgb(10,48,105);""> /etc/apt/sources.list.d/mssql-release.list</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);""># Install ODBC Driver 18</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">sudo</span><span style=""color: rgb(10,48,105);""> apt-get</span><span style=""color: rgb(10,48,105);""> update</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">sudo</span><span style=""color: rgb(10,48,105);""> ACCEPT_EULA=Y</span><span style=""color: rgb(10,48,105);""> apt-get</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> -y</span><span style=""color: rgb(10,48,105);""> msodbcsql18</span></span>
</code></pre></div></div></div>
</li>
<li><strong>macOS</strong>: <code>brew install msodbcsql18</code></li>
<li><strong>Windows</strong>: Download from <a class=""link"" href=""https://learn.microsoft.com/en-us/sql/connect/odbc/download-odbc-driver-for-sql-server"">Microsoft</a></li>
</ul>
</li>
</ul>
<span>To verify installed drivers:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">odbcinst</span><span style=""color: rgb(5,80,174);""> -q</span><span style=""color: rgb(5,80,174);""> -d</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Microsoft SQL Server database from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mssql_datasource</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mssql'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">1433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sa&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;master&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>user</code>: The username for the Microsoft SQL Server.</li>
<li><code>password</code>: The password for the Microsoft SQL Server.</li>
<li><code>host</code> The hostname, IP address, or URL of the Microsoft SQL Server.</li>
<li><code>database</code> The name of the Microsoft SQL Server database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>port</code>: The port number for connecting to the Microsoft SQL Server. Default is 1433.</li>
<li><code>server</code>: The server name to connect to. Typically only used with named instances or Azure SQL Database.</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#odbc-connection"">‚Äã</a></div><span class=""cursor-pointer"">ODBC Connection</span></h3>
<span>The handler also supports ODBC connections via <code>pyodbc</code> for advanced scenarios like Windows Authentication or specific driver requirements.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h4>
<ol>
<li>Install: <code>pip install mindsdb[mssql-odbc]</code></li>
<li>Install system ODBC driver (see Installation section above)</li>
</ol>
<span>Basic ODBC Connection:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mssql_odbc_datasource</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mssql'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">1433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sa&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;master&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;driver&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;ODBC Driver 18 for SQL Server&quot;</span><span style=""color: rgb(110,119,129);"">  -- Specifying driver enables ODBC</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>ODBC-specific Parameters:</span>
<ul>
<li><code>driver</code>: The ODBC driver name (e.g., &ldquo;ODBC Driver 18 for SQL Server&rdquo;). When specified, enables ODBC mode.</li>
<li><code>use_odbc</code>: Set to <code>true</code> to explicitly use ODBC. Optional if <code>driver</code> is specified. If this is true default driver is set as <code>ODBC Driver 17 for SQL Server</code>.</li>
<li><code>encrypt</code>: Connection encryption: <code>&quot;yes&quot;</code> or <code>&quot;no&quot;</code>. Driver 18 defaults to <code>&quot;yes&quot;</code>.</li>
<li><code>trust_server_certificate</code>: Whether to trust self-signed certificates: <code>&quot;yes&quot;</code> or <code>&quot;no&quot;</code>.</li>
<li><code>connection_string_args</code>: Additional connection string arguments.</li>
</ul>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example%3A-azure-sql-database-with-encryption%3A"">‚Äã</a></div><span class=""cursor-pointer"">Example: Azure SQL Database with Encryption:</span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> azure_sql_datasource</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mssql'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;myserver.database.windows.net&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">1433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;adminuser&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;SecurePass123!&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mydb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;driver&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;ODBC Driver 18 for SQL Server&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;encrypt&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yes&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;trust_server_certificate&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;no&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example%3A-local-development-self-signed-certificate-%3A"">‚Äã</a></div><span class=""cursor-pointer"">Example: Local Development (Self-Signed Certificate):</span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> local_mssql</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mssql'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">1433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sa&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;YourStrong@Passw0rd&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;testdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;driver&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;ODBC Driver 18 for SQL Server&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;encrypt&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yes&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;trust_server_certificate&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yes&quot;</span><span style=""color: rgb(110,119,129);"">  -- Allow self-signed certs</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mssql_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run T-SQL queries directly on the connected Microsoft SQL Server database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> mssql_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">      SUM</span><span style=""color: rgb(31,35,40);"">(orderqty) total</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> Product p </span><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(31,35,40);""> SalesOrderDetail sd </span><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> p</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">productid</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> sd</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">productid</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> SalesOrderHeader sh </span><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> sd</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">salesorderid</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> sh</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">salesorderid</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> Customer c </span><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> sh</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customerid</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> c</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customerid</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">Name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'Racing Socks, L'</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> (companyname </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'Riding Cycles'</span><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>mssql_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#performance-optimization-for-large-datasets"">‚Äã</a></div><span class=""cursor-pointer"">Performance Optimization for Large Datasets</span></h3>
<span>The handler is optimized for efficient data processing, but for very large result sets (millions of rows):</span>
<ol>
<li><strong>Use SQL Server&rsquo;s filtering</strong>: Apply <code>WHERE</code> clauses to filter data on the server side</li>
<li><strong>Use pagination</strong>: Use <code>TOP</code>/<code>OFFSET-FETCH</code> in SQL Server or <code>LIMIT</code> in MindsDB queries</li>
<li><strong>Aggregate when possible</strong>: Use <code>GROUP BY</code>, <code>COUNT()</code>, <code>AVG()</code>, etc. to reduce data volume</li>
<li><strong>Index your tables</strong>: Ensure proper indexes on SQL Server for query performance</li>
</ol>
<span><strong>Example - Paginated Query:</strong></span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> mssql_datasource (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> TOP</span><span style=""color: rgb(5,80,174);""> 100000</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> large_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    ORDER BY</span><span style=""color: rgb(31,35,40);""> id</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    OFFSET </span><span style=""color: rgb(5,80,174);"">0</span><span style=""color: rgb(207,34,46);""> ROWS</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Microsoft SQL Server database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Microsoft SQL Server is active.</li>
<li>Confirm that host, port, user, and password are correct. Try a direct Microsoft SQL Server connection using a client like SQL Server Management Studio or DBeaver.</li>
<li>Ensure a stable network between MindsDB and Microsoft SQL Server.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>ODBC Driver Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Errors like &ldquo;Driver not found&rdquo;, &ldquo;Can&rsquo;t open lib &lsquo;ODBC Driver 17 for SQL Server&rsquo;&rdquo;, or &ldquo;pyodbc is not installed&rdquo;.</li>
<li><strong>Checklist</strong>:
<ol>
<li><strong>Verify pyodbc is installed</strong>: <code>pip list | grep pyodbc</code></li>
<li><strong>Check system ODBC libraries</strong>: <code>ldconfig -p | grep odbc</code> (Linux) should show libodbc.so</li>
<li><strong>Verify ODBC drivers</strong>: Run <code>odbcinst -q -d</code> to list installed drivers</li>
<li><strong>Match driver name exactly</strong>: Use the exact name from <code>odbcinst -q -d</code> (case-sensitive)</li>
<li><strong>For Driver 18 encryption errors</strong>: Add <code>&quot;encrypt&quot;: &quot;yes&quot;, &quot;trust_server_certificate&quot;: &quot;yes&quot;</code> for local/dev servers</li>
<li><strong>Test connection manually</strong>:
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> pyodbc</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(pyodbc.drivers())  </span><span style=""color: rgb(110,119,129);""># Should list available drivers</span></span>
</code></pre></div></div></div>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1835103/Microsoft+SQL+Server+-+MindsDB","/pages/resumedraft.action?draftId=1835103","/x/XwAc"
"1835126","current","PlanetScale - MindsDB","491527","491782","page","55051","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:14.531Z","2025-10-24T14:02:14.531Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the PlanetScale data handler for MindsDB.</span>
<span><a class=""link"" href=""https://planetscale.com/"">PlanetScale</a> is a MySQL-compatible, serverless database platform.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect PlanetScale to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to PlanetScale.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the PlanetScale database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> planetscale_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'planet_scale'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;planetscale_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;planetscale_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> planetscale_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1835126/PlanetScale+-+MindsDB","/pages/resumedraft.action?draftId=1835126","/x/dgAc"
"1835147","current","SAP HANA - MindsDB","491527","491782","page","56749","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:19.381Z","2025-10-24T14:02:19.381Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.sap.com/products/technology-platform/hana/what-is-sap-hana.html"">SAP HANA</a>, a multi-model database with a column-oriented in-memory design that stores data in its memory instead of keeping it on a disk.
The integration allows MindsDB to access data from SAP HANA and enhance SAP HANA with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SAP HANA to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to SAP HANA from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/hana_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sap_hana_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'hana'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;address&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;123e4567-e89b-12d3-a456-426614174000.hana.trial-us10.hanacloud.ondemand.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;443&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;encrypt&quot;</span><span style=""color: rgb(31,35,40);"">: true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>address</code>: The hostname, IP address, or URL of the SAP HANA database.</li>
<li><code>port</code>: The port number for connecting to the SAP HANA database.</li>
<li><code>user</code>: The username for the SAP HANA database.</li>
<li><code>password</code>: The password for the SAP HANA database.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li>&lsquo;database&rsquo;: The name of the database to connect to. This parameter is not used for SAP HANA Cloud.</li>
<li><code>schema</code>: The database schema to use. Defaults to the user&rsquo;s default schema.</li>
<li><code>encrypt</code>: The setting to enable or disable encryption. Defaults to `True&rsquo;</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration, schema and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sap_hana_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run Teradata SQL queries directly on the connected Teradata database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> sap_hana_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> customer, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">SUM</span><span style=""color: rgb(31,35,40);"">(sales)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        FROM</span><span style=""color: rgb(31,35,40);""> t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        GROUP BY</span><span style=""color: rgb(207,34,46);""> ROLLUP</span><span style=""color: rgb(31,35,40);"">(customer, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> customer, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">SUM</span><span style=""color: rgb(31,35,40);"">(sales)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        FROM</span><span style=""color: rgb(31,35,40);""> t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        GROUP BY</span><span style=""color: rgb(31,35,40);""> GROUPING </span><span style=""color: rgb(207,34,46);"">SETS</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        (customer, </span><span style=""color: rgb(207,34,46);"">year</span><span style=""color: rgb(31,35,40);"">),</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        (customer)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        )</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    UNION ALL</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> NULL</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">NULL</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">SUM</span><span style=""color: rgb(31,35,40);"">(sales)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        FROM</span><span style=""color: rgb(31,35,40);""> t1;    </span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>sap_hana_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the SAP HANA database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the SAP HANA database is active.</li>
<li>Confirm that address, port, user and password are correct. Try a direct connection using a client like DBeaver.</li>
<li>Ensure a stable network between MindsDB and SAP HANA.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/1835147/SAP+HANA+-+MindsDB","/pages/resumedraft.action?draftId=1835147","/x/iwAc"
"1835174","current","Remove a Job - MindsDB","491527","491782","page","94459","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:25.037Z","2025-10-24T14:10:21.204Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>drop_job()</code> function deletes a job from MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>drop_job()</code> method to remove a job:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.drop_job(</span><span style=""color: rgb(10,48,105);"">'job_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1835174/Remove+a+Job+-+MindsDB","/pages/resumedraft.action?draftId=1835174","/x/pgAc"
"1835193","current","Get a Job - MindsDB","491527","491782","page","109095","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:04.710Z","2025-10-24T14:07:04.710Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>Gets info about specific job.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/{projectName}/jobs/{jobName}</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1835193/Get+a+Job+-+MindsDB","/pages/resumedraft.action?draftId=1835193","/x/uQAc"
"1835219","current","Extend the Default MindsDB Configuration - MindsDB","491527","491782","page","118376","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:49.344Z","2025-10-24T14:11:49.344Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>To follow this guide, install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/pip/source"">PyPI</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#starting-mindsdb-with-extended-configuration"">‚Äã</a></div><span class=""cursor-pointer"">Starting MindsDB with Extended Configuration</span></h2>
<span>Start MindsDB locally with your custom configuration by providing a path to the <code>config.json</code> file that stores custom config parameters listed in this section.</span>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_CONFIG_PATH=/Users/username/path/config.json</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#available-config-parameters"">‚Äã</a></div><span class=""cursor-pointer"">Available Config Parameters</span></h3>
<span>Below are all of the custom configuration parameters that should be set according to your requirements and saved into the <code>config.json</code> file.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#permanent-storage"">‚Äã</a></div><span class=""cursor-pointer""><code>permanent_storage</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;permanent_storage&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;location&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;absent&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;bucket&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;s3_bucket_name&quot;</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;location&quot;: &quot;s3&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>permanent_storage</code> parameter defines where MindsDB stores copies of user files, such as uploaded files, models, and tab content. MindsDB checks the <code>permanent_storage</code> location to access the latest version of a file and updates it as needed.</span>
<span>The <code>location</code> specifies the storage type.</span>
<ul>
<li><code>absent</code> (default): Disables permanent storage and is recommended to use when MindsDB is running locally.</li>
<li><code>local</code>: Stores files in a local directory defined with <code>config['paths']['storage']</code>.</li>
<li><code>s3</code>: Stores files in an Amazon S3 bucket. This option requires the <code>bucket</code> parameter that specifies the name of the S3 bucket where files will be stored.</li>
</ul>
<span>If this parameter is not set, the path is determined by the <code>MINDSDB_STORAGE_DIR</code> environment variable. MindsDB defaults to creating a <code>mindsdb</code> folder in the operating system user&rsquo;s home directory.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#paths"">‚Äã</a></div><span class=""cursor-pointer""><code>paths</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;paths&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;root&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var&quot;,</span><span style=""color: rgb(110,119,129);""> # optional (alternatively, it can be defined in the MINDSDB_STORAGE_DIR environment variable)</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;content&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/content&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;storage&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/storage&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;static&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/static&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;tmp&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/tmp&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;cache&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/cache&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;locks&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/home/mindsdb/var/locks&quot;,</span><span style=""color: rgb(110,119,129);""> # optional</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>paths</code> parameter allows users to redefine the file paths for various groups of MindsDB files. If only the <code>root</code> path is defined, all other folders will be created within that directory. If this parameter is absent, the value is determined by the <code>MINDSDB_STORAGE_DIR</code> environment variable.</span>
<span>The <code>root</code> parameter defines the base directory for storing all MindsDB files, including models, uploaded files, tab content, and the internal SQLite database (if running locally).</span>
<span>The <code>content</code> parameter specifies the directory where user-related files are stored, such as uploaded files, created models, and tab content. The internal SQLite database (if running locally) is stored in the <code>root</code> directory instead.</span>
<span>If the <code>['permanent_storage']['location']</code> is set to <code>'local'</code>, then the <code>storage</code> parameter is used to store copies of user files.</span>
<span>The <code>static</code> parameter is used to store files for the graphical user interface (GUI) when MindsDB is run locally.</span>
<span>The <code>tmp</code> parameter designates a directory for temporary files. Note that the operating system&rsquo;s default temporary directory may also be used for some temporary files.</span>
<span>If the <code>['cache']['type']</code> is set to <code>'local'</code>, then the <code>cache</code> parameter defines the location for storing cached files for the most recent predictions. For example, if a model is queried with identical input, the result will be stored in the cache and returned directly on subsequent queries, instead of recalculating the prediction.</span>
<span>The <code>locks</code> parameter is used to store lock files to prevent race conditions when the <code>content</code> folder is shared among multiple applications. This directory helps ensure that file access is managed properly using <code>fcntl</code> locks. Note that this is not applicable for Windows OS.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#auth"">‚Äã</a></div><span class=""cursor-pointer""><code>auth</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;auth&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);"">{</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;http_auth_enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;username&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;username&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;password&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>auth</code> parameter controls the authentication settings for APIs in MindsDB.</span>
<span>If the <code>http_auth_enabled</code> parameter is set to <code>true</code>, then the <code>username</code> and <code>password</code> parameters are required. Otherwise these are optional.</span>
<span>In local instances of MindsDB, users can enable simple HTTP authentication based on bearer tokens, as follows:</span>
<ol>
<li>
<span>Enable the authentication for the HTTP API by setting the <code>http_auth_enabled</code> parameter to <code>true</code> and providing values for the <code>username</code> and <code>password</code> parameters. Alternatively, users can set the environment variables - <code>MINDSDB_USERNAME</code> and <code>MINDSDB_PASSWORD</code> - to store these values..</span>
</li>
<li>
<span>Bearer tokens are valid indefinitely.</span>
</li>
</ol>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#gui"">‚Äã</a></div><span class=""cursor-pointer""><code>gui</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;gui&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;autoupdate&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;open_on_start&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>gui</code> parameter controls the behavior of the MindsDB graphical user interface (GUI) updates.</span>
<span>The <code>autoupdate</code> parameter defines whether MindsDB automatically checks for and updates the GUI to the latest version when the application starts. If set to <code>true</code>, MindsDB will attempt to fetch the latest available version of the GUI. If set to <code>False</code>, MindsDB will not try to update the GUI on startup.</span>
<span>The <code>open_on_start</code> parameter defines whether MindsDB automatically opens the GUI on start. If set to <code>true</code>, MindsDB will open the GUI automatically. If set to <code>False</code>, MindsDB will not open the GUI on startup.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#api"">‚Äã</a></div><span class=""cursor-pointer""><code>api</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;api&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;http&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;host&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;127.0.0.1&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;port&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;47334&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;restart_on_failure&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_count&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 1,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_interval_seconds&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 60,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;a2wsgi&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;workers&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 15,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;send_queue_size&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 10</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;mysql&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;host&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;127.0.0.1&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;port&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;47335&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;database&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;mindsdb&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;ssl&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;restart_on_failure&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_count&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 1,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_interval_seconds&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 60</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>api</code> parameter contains the configuration settings for running MindsDB APIs.</span>
<span>Currently, the supported APIs are:</span>
<ul>
<li><code>http</code>: Configures the HTTP API. It requires the <code>host</code> and <code>port</code> parameters. Alternatively, configure HTTP authentication for your MindsDB instance by setting the environment variables <code>MINDSDB_USERNAME</code> and <code>MINDSDB_PASSWORD</code> before starting MindsDB, which is a recommended way for the production systems.</li>
<li><code>mysql</code>: Configures the MySQL API. It requires the <code>host</code> and <code>port</code> parameters and additionally the <code>database</code> and <code>ssl</code> parameters.</li>
</ul>
<div><div class=""leading-tight text-left""><p>HTTP API</p></div><div><span>Connection parameters for the HTTP API include:</span><ul>
<li>
<span><code>host</code>: Specifies the IP address or hostname where the API should run. For example, <code>&quot;127.0.0.1&quot;</code> indicates the API will run locally.</span>
</li>
<li>
<span><code>port</code>: Defines the port number on which the API will listen for incoming requests. The default ports are <code>47334</code> for HTTP, and <code>47335</code> for MySQL.</span>
</li>
<li>
<span><code>restart_on_failure</code>: If it is set to <code>true</code> (and <code>max_restart_count</code> is not reached), the restart of MindsDB will be attempted after the MindsDB process was killed - with code 9 on Linux and MacOS, or for any reason on Windows.</span>
</li>
<li>
<span><code>max_restart_count</code>: This defines how many times the restart attempts can be made. Note that 0 stands for no limit.</span>
</li>
<li>
<span><code>max_restart_interval_seconds</code>: This defines the time limit during which there can be no more than <code>max_restart_count</code> restart attempts. Note that 0 stands for no time limit, which means there would be a maximum of <code>max_restart_count</code> restart attempts allowed.</span>
<div><div><span>Here is a usage example of the restart features:</span><span>Assume the following values:</span><ul>
<li>max_restart_count = 2</li>
<li>max_restart_interval_seconds = 30 seconds</li>
</ul><span>Assume the following scenario:</span><ul>
<li>MindsDB fails at 1000s of its work - the restart attempt succeeds as there were no restarts in the past 30 seconds.</li>
<li>MindsDB fails at 1010s of its work - the restart attempt succeeds as there was only 1 restart (at 1000s) in the past 30 seconds.</li>
<li>MindsDB fails at 1020s of its work - the restart attempt fails as there were already max_restart_count=2 restarts (at 1000s and 1010s) in the past 30 seconds.</li>
<li>MindsDB fails at 1031s of its work - the restart attempt succeeds as there was only 1 restart (at 1010s) in the past 30 seconds.</li>
</ul></div></div>
</li>
<li>
<span><code>a2wsgi</code> is an WSGI wrapper with the following parameters: <code>workers</code> defines the number of requests that can be processed in parallel, and <code>send_queue_size</code> defines the buffer size.</span>
</li>
</ul></div><div class=""leading-tight text-left""><p>MySQL API</p></div><div><span>Connection parameters for the MySQL API include:</span><ul>
<li><code>host</code>: Specifies the IP address or hostname where the API should run. For example, <code>&quot;127.0.0.1&quot;</code> indicates the API will run locally.</li>
<li><code>port</code>: Defines the port number on which the API will listen for incoming requests. The default ports are <code>47334</code> for HTTP, and <code>47335</code> for MySQL.</li>
<li><code>database</code>: Specifies the name of the database that MindsDB uses. Users must connect to this database to interact with MindsDB through the respective API.</li>
<li><code>ssl</code>: Indicates whether SSL support is enabled for the MySQL API.</li>
<li><code>restart_on_failure</code>: If it is set to <code>true</code> (and <code>max_restart_count</code> is not reached), the restart of MindsDB will be attempted after the MindsDB process was killed - with code 9 on Linux and MacOS, or for any reason on Windows.</li>
<li><code>max_restart_count</code>: This defines how many times the restart attempts can be made. Note that 0 stands for no limit.</li>
<li><code>max_restart_interval_seconds</code>: This defines the time limit during which there can be no more than <code>max_restart_count</code> restart attempts. Note that 0 stands for no time limit, which means there would be a maximum of <code>max_restart_count</code> restart attempts allowed.</li>
</ul></div></div>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#cache"">‚Äã</a></div><span class=""cursor-pointer""><code>cache</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;cache&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;type&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;local&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;connection&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;redis://localhost:6379&quot;</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>cache</code> parameter controls how MindsDB stores the results of recent predictions to avoid recalculating them if the same query is run again. Note that recent predictions are cached for ML models, like Lightwood, but not in the case of large language models (LLMs), like OpenAI.</span>
<span>The <code>type</code> parameter specifies the type of caching mechanism to use for storing prediction results.</span>
<ul>
<li><code>none</code>: Disables caching. No prediction results are stored.</li>
<li><code>local</code> (default): Stores prediction results in the <code>cache</code> folder (as defined in the <code>paths</code> configuration). This is useful for repeated queries where the result doesn&rsquo;t change.</li>
<li><code>redis</code>: Stores prediction results in a Redis instance. This option requires the <code>connection</code> parameter, which specifies the Redis connection string.</li>
</ul>
<span>The <code>connection</code> parameter is required only if the <code>type</code> parameter is set to <code>redis</code>. It stores the Redis connection string.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#logging"">‚Äã</a></div><span class=""cursor-pointer""><code>logging</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;logging&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;handlers&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;console&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;formatter&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;default&quot;,</span><span style=""color: rgb(110,119,129);""> # optional, available values include default and json</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;level&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;INFO&quot;</span><span style=""color: rgb(110,119,129);""> # optional (alternatively, it can be defined in the MINDSDB_CONSOLE_LOG_LEVEL environment variable)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;file&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> False,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;level&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;INFO&quot;,</span><span style=""color: rgb(110,119,129);""> # optional (alternatively, it can be defined in the MINDSDB_FILE_LOG_LEVEL environment variable)</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;filename&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;app.log&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;maxBytes&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 524288,</span><span style=""color: rgb(110,119,129);""> # 0.5 Mb</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;backupCount&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 3</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The above parameters are implemented based on <a class=""link"" href=""https://docs.python.org/3/library/logging.config.html#logging-config-dictschema"">Python&rsquo;s Logging Dictionary Schema</a>.</span>
<span>The <code>logging</code> parameter defines the details of output logging, including the logging levels.</span>
<span>The <code>handler</code> parameter provides handlers used for logging into streams and files.</span>
<ul>
<li>
<span><code>console</code>: This parameter defines the setup for saving logs into a stream.</span>
<ul>
<li>If the <code>enabled</code> parameter is set to <code>true</code>, then the logging output is saved into a stream.</li>
<li>Users can define the <code>formatter</code> parameter that configures the format of the logs, where the available values include <code>default</code> and <code>json</code>.</li>
<li>Users can also define the logging level in the <code>level</code> parameter or in the <code>MINDSDB_CONSOLE_LOG_LEVEL</code> environment variable - one of <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code>.</li>
</ul>
</li>
<li>
<span><code>file</code>: This parameter defines the setup for saving logs into a file.</span>
<ul>
<li>If the <code>enabled</code> parameter is set to <code>true</code>, then the logging output is saved into a file.</li>
<li>Users can define the logging level in the <code>level</code> parameter or in the <code>MINDSDB_FILE_LOG_LEVEL</code> environment variable - one of <code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code>, <code>CRITICAL</code>.</li>
<li>Additionally, the <code>filename</code> parameter stores the name of the file that contains logs.</li>
<li>And the <code>maxBytes</code> and <code>backupCount</code> parameters determine the rollover process of the file - that is, if the file reached the size of <code>maxBytes</code>, then the file is closed and a new file is opened, where the number of files is defined by the <code>backupCount</code> parameter.</li>
</ul>
</li>
</ul>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#ml-task-queue"">‚Äã</a></div><span class=""cursor-pointer""><code>ml_task_queue</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;ml_task_queue&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;type&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;local&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;host&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;localhost&quot;,</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;port&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 6379,</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;db&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 0,</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;username&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;username&quot;,</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;password&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;password&quot;</span><span style=""color: rgb(110,119,129);""> # optional, used only if &quot;type&quot;: &quot;redis&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
</code></pre></div></div></div>
<span>The <code>ml_task_queue</code> parameter manages the queueing system for machine learning tasks in MindsDB. ML tasks include operations such as creating, training, predicting, fine-tuning, and retraining models. These tasks can be resource-intensive, and running multiple ML tasks simultaneously may lead to Out of Memory (OOM) errors or performance degradation. To address this, MindsDB uses a task queue to control task execution and optimize resource utilization.</span>
<span>The <code>type</code> parameter defines the type of task queue to use.</span>
<ul>
<li><code>local</code>: Tasks are processed immediately as they appear, without a queue. This is suitable for environments where resource constraints are not a concern.</li>
<li><code>redis</code>: Tasks are added to a Redis-based queue, and consumer process (which is run with <code>--ml_task_consumer</code>) ensures that tasks are executed only when sufficient resources are available.
<ul>
<li>Using a Redis queue requires additional configuration such as the <code>host</code>, <code>port</code>, <code>db</code>, <code>username</code>, and <code>password</code> parameters.</li>
<li>To use the Redis queue, start MindsDB with the following command to initiate a queue consumer process: <code>python3 -m mindsdb --ml_task_queue_consumer</code>. This process will monitor the queue and fetch tasks for execution only when sufficient resources are available.</li>
</ul>
</li>
</ul>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#url-file-upload"">‚Äã</a></div><span class=""cursor-pointer""><code>url_file_upload</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;url_file_upload&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;allowed_origins&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> [</span><span style=""color: rgb(10,48,105);"">&quot;https://example.com&quot;</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;disallowed_origins&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> [</span><span style=""color: rgb(10,48,105);"">&quot;http://example.com&quot;</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>The <code>url_file_upload</code> parameter restricts file uploads to trusted sources by specifying a list of allowed domains. This ensures that users can only upload files from the defined sources, such as S3 or Google Drive.</span>
<span>The <code>enabled</code> flag turns this feature on (<code>true</code>) or off (<code>false</code>).</span>
<span>The <code>allowed_origins</code> parameter lists allowed domains. If left empty, then any domain is allowed.</span>
<span>The <code>disallowed_origins</code> parameter lists domains that are not allowed. If left empty, then there are no restricted domains.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#web-crawling-allowed-sites"">‚Äã</a></div><span class=""cursor-pointer""><code>web_crawling_allowed_sites</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;web_crawling_allowed_sites&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> [],</span></span>
</code></pre></div></div></div>
<span>The <code>web_crawling_allowed_sites</code> parameter restricts web crawling operations to a specified list of allowed IPs or web addresses. This ensures that the application only accesses pre-approved and safe URLs (<code>&quot;web_crawling_allowed_sites&quot;: [&quot;https://example.com&quot;, &quot;https://api.mysite.com&quot;]</code>).</span>
<span>If left empty (<code>[]</code>), the application allows access to all URLs by default (marked with a wildcard in the open-source version).</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#default-llm"">‚Äã</a></div><span class=""cursor-pointer""><code>default_llm</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;default_llm&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;azure_openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;gpt-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://ai-6689.openai.azure.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;method&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;multi-class&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>The <code>default_llm</code> parameter specifies the default LLM that will be used with the <a class=""link"" href=""/mindsdb_sql/functions/llm_function""><code>LLM()</code> function</a>, the <a class=""link"" href=""/mindsdb_sql/functions/to_markdown_function""><code>TO_MARKDOWN()</code> function</a>, and as a default model for <a class=""link"" href=""/mindsdb_sql/agents/agent"">agents</a>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#default-embedding-model"">‚Äã</a></div><span class=""cursor-pointer""><code>default_embedding_model</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;default_embedding_model&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;azure_openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;text-embedding-3-large&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://ai-6689.openai.azure.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>The <code>default_embedding_model</code> parameter specifies the default embedding model used with knowledge bases. Learn more about the parameters following the <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#embedding-model"">documentation of the <code>embedding_model</code> of knowledge bases</a>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#default-reranking-model"">‚Äã</a></div><span class=""cursor-pointer""><code>default_reranking_model</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;default_reranking_model&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;azure_openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;gpt-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://ai-6689.openai.azure.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;method&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;multi-class&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>The <code>default_reranking_model</code> parameter specifies the default reranking model used with knowledge bases. Learn more about the parameters following the <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#reranking-model"">documentation of the <code>reranking_model</code> of knowledge bases</a>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#data-catalog"">‚Äã</a></div><span class=""cursor-pointer""><code>data_catalog</code></span></h4>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;data_catalog&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>This parameter enables the <a class=""link"" href=""/data_catalog/overview"">data catalog</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<span>First, create a <code>config.json</code> file.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;permanent_storage&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;location&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;absent&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;paths&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;root&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;/path/to/root/location&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;auth&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);"">{</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;http_auth_enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;username&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;username&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;password&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;gui&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;autoupdate&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;api&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;http&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;host&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;127.0.0.1&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;port&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;47334&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;restart_on_failure&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_count&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 1,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_interval_seconds&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 60</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;mysql&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;host&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;127.0.0.1&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;port&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;47335&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;database&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;mindsdb&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;ssl&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;restart_on_failure&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_count&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 1,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;max_restart_interval_seconds&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 60</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;cache&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;type&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;local&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;logging&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;handlers&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;console&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;formatter&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;default&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;level&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;INFO&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">            &quot;file&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> false</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;level&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;INFO&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;filename&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;app.log&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;maxBytes&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> 524288,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">                &quot;backupCount&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> 3</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;ml_task_queue&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">        &quot;type&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;local&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;url_file_upload&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;enabled&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(5,80,174);""> true</span><span style=""color: rgb(10,48,105);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;allowed_origins&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> [</span><span style=""color: rgb(10,48,105);"">&quot;https://example.com&quot;</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">           &quot;disallowed_origins&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> [</span><span style=""color: rgb(10,48,105);"">&quot;http://example.com&quot;</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    &quot;web_crawling_allowed_sites&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(31,35,40);""> []</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>Next, start MindsDB providing this <code>config.json</code> file.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(5,80,174);""> --config=/path-to-the-extended-config-file/config.json</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#modifying-config-values"">‚Äã</a></div><span class=""cursor-pointer"">Modifying Config Values</span></h2>
<span>Users can modify config values by directly editing the <code>config.json</code> file they created.</span></div>","/spaces/SOP/pages/1835219/Extend+the+Default+MindsDB+Configuration+-+MindsDB","/pages/resumedraft.action?draftId=1835219","/x/0wAc"
"1867805","current","Google Calendar - MindsDB","491527","491782","page","21711","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:15.741Z","2025-10-24T14:00:15.741Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Google Calendar to MindsDB.</span>
<span><a class=""link"" href=""https://calendar.google.com/calendar/"">Google Calendar</a> is an online calendar service and application developed by Google. It allows users to create, manage, and share events and appointments, as well as schedule and organize their personal, work, or team activities.</span>
<span>Data from Google Calendar can be utilized within MindsDB to train AI models, make predictions, and automate time management with AI.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Google Calendar to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Google Calendar.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>credentials_file</code> is a path to the JSON file that stores credentials to the Google account.</li>
</ul>
<div><div><span>Please note that a Google account with enabled Google Calendar is required. You can find more information <a class=""link"" href=""https://developers.google.com/calendar/api/quickstart/python"">here</a>.</span></div></div>
<span>In order to make use of this handler and connect the Google Calendar app to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_calendar</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'google_calendar'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'credentials_file'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'\path-to-your-file\credentials.json'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }; </span></span>
</code></pre></div></div></div>
<div><div><span>You need a Google account in order to use this integration. Here is how to get the credentials file:</span><ol>
<li>
<span>Create a Google Cloud Platform (GCP) Project:</span>
<span>1.1 Go to the GCP Console (<a class=""link"" href=""https://console.cloud.google.com/"">https://console.cloud.google.com/</a>).</span>
<span>1.2 If you haven&rsquo;t created a project before, you&rsquo;ll be prompted to do so now.</span>
<span>1.3 Give your new project a name.</span>
<span>1.4 Click <code>Create</code> to create the new project.</span>
</li>
<li>
<span>Enable the Google Calendar API:</span>
<span>2.1 In the GCP Console, select your project.</span>
<span>2.2 Navigate to <code>APIs &amp; Services</code> &gt; <code>Library</code>.</span>
<span>2.3 In the search bar, search for <code>Google Calendar API</code>.</span>
<span>2.4 Click on <code>Google Calendar API</code>, then click <code>Enable</code>.</span>
</li>
<li>
<span>Create credentials for the  Google Calendar API :</span>
<span>3.1 Navigate to <code>APIs &amp; Services</code> &gt; <code>Credentials</code>.</span>
<span>3.2 Click on the <code>Create Credentials</code> button and choose <code>OAuth client ID</code>.</span>
<span>3.3 If you haven&rsquo;t configured the OAuth consent screen before, you&rsquo;ll be prompted to do so now. Make sure to choose <code>External</code> for User Type, and add all the necessary scopes. Make sure to save the changes.
Now, create the OAuth client ID. Choose <code>Desktop app</code> for the Application Type and give it a name.</span>
<span>3.4 Click <code>Create</code>.</span>
</li>
<li>
<span>Download the JSON file:</span>
<span>4.1 After creating your credentials, click the download button (an icon of an arrow pointing down) on the right side of your client ID. This will download a JSON file, so you will use the location to it in the <code>credentials_file</code> param.</span>
</li>
</ol></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>This creates a database that comes with the <code>calendar</code> table.</span>
<span>Now you can use your Google Calendar data, like this:</span>
<ul>
<li>
<span>searching for events:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, created_at, author_username, </span><span style=""color: rgb(207,34,46);"">text</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_calendar</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">events</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> start_time </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '2023-02-16'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> end_time </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '2023-04-09'</span><span style=""color: rgb(207,34,46);""> LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>creating events:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_calendar</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">events</span><span style=""color: rgb(31,35,40);"">(start_time, end_time, summary, </span><span style=""color: rgb(207,34,46);"">description</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">location</span><span style=""color: rgb(31,35,40);"">, attendees, reminders, timeZone)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'2023-02-16 10:00:00'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'2023-02-16 11:00:00'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'MindsDB Meeting'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'Discussing the future of MindsDB'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'MindsDB HQ'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">''</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'Europe/Athens'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>updating one or more events:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(5,80,174);""> my_calendar</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">events</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> summary     </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'MindsDB Meeting'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    description</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'Discussing the future of MindsDB'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    location</span><span style=""color: rgb(207,34,46);"">    =</span><span style=""color: rgb(10,48,105);""> 'MindsDB HQ'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    attendees   </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> ''</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    reminders   </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> ''</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> event_id </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> event_id </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;                   </span><span style=""color: rgb(110,119,129);"">-- used to update events in a given range</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>deleting one or more events:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_calendar</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">events</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '1'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/google_calendar_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1867805/Google+Calendar+-+MindsDB","/pages/resumedraft.action?draftId=1867805","/x/HYAc"
"1867832","current","Hacker News - MindsDB","491527","491782","page","22144","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:17.802Z","2025-10-24T14:00:17.802Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Hacker News to MindsDB.</span>
<span><a class=""link"" href=""https://news.ycombinator.com/"">Hacker News</a> is an online platform and community for discussions related to technology, startups, computer science, entrepreneurship, and a wide range of other topics of interest to the tech and hacker communities. It was created by Y Combinator, a well-known startup accelerator.</span>
<span>Data from Hacker News, including articles and user comments, can be utilized within MindsDB to train AI models and chatbots with the knowledge and discussions shared at Hacker News.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the official Hacker News API. It provides a simple and easy-to-use interface to access the Hacker News API.</span>
<span>There are no connection arguments required.</span>
<span>In order to make use of this handler and connect the Hacker News to MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_hackernews</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'hackernews'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>It creates a database that comes with the <code>stories</code> and <code>comments</code> tables.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now you can query the articles, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_hackernews</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">stories</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 2</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>And here is how to fetch comments for a specific article:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_hackernews</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comments</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> item_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">35662571</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1867832/Hacker+News+-+MindsDB","/pages/resumedraft.action?draftId=1867832","/x/OIAc"
"1867853","current","YouTube - MindsDB","491527","491782","page","32685","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:59.740Z","2025-10-24T14:00:59.740Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect YouTube to MindsDB.</span>
<span><a class=""link"" href=""https://www.youtube.com/"">YouTube</a> is a popular online video-sharing platform and social media website where users
can upload, view, share, and interact with videos created by individuals and organizations from around the world.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB on your system or obtain access to cloud options.</li>
<li>To use YouTube with MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>There are two ways you can connect YouTube to MindsDB:</span>
<ol>
<li>Limited permissions: This option provides MindsDB with read-only access to YouTube, including viewing comments data.</li>
<li>Elevated permissions: This option provides MindsDB with full access to YouTube, including viewing comments data and posting replies to comments.</li>
</ol>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#option-1%3A-limited-permissions"">‚Äã</a></div><span class=""cursor-pointer"">Option 1: Limited permissions</span></h3>
<span>Establish a connection to YouTube from MindsDB by executing the below SQL command and following the Google authorization link provided as output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_youtube</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'youtube'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;youtube_api_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;your-youtube-api-key-token&gt;&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><span>Alternatively, you can connect YouTube to MindsDB via the form.</span><span>To do that, click on the <code>Add</code> button, choose <code>New Datasource</code>, search for <code>YouTube</code>, and follow the instructions in the form. After providing the connection name and the YouTube API token, click on the <code>Test Connection</code> button. Once the connection is established, click on the <code>Save and Continue</code> button.</span></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>youtube_api_token</code>: It is a Google API key used for authentication. Check out <a class=""link"" href=""https://blog.hubspot.com/website/how-to-get-youtube-api-key"">this guide</a> on how to create the API key to access YouTube data.</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#option-2%3A-elevated-permissions"">‚Äã</a></div><span class=""cursor-pointer"">Option 2: Elevated permissions</span></h3>
<span>Establish a connection to YouTube from MindsDB by executing the below SQL command and following the Google authorization link provided as output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_youtube</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'youtube'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;credentials_file&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;path-to-credentials-json-file&quot;</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">  -- alternatively, use the credentials_url parameter</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><span>Alternatively, you can connect YouTube to MindsDB via the form.</span><span>To do that, click on the <code>Add</code> button, choose <code>New Datasource</code>, search for <code>YouTube</code>, and follow the instructions in the form. After providing the connection name and the credentials file or URL, click on the <code>Test Connection</code> button and complete the authorization process in the pop-up window. Once the connection is established, click on the <code>Save and Continue</code> button.</span></div></div>
<span>Required connection parameters include one of the following:</span>
<ul>
<li><code>credentials_file</code>: It is a path to a file generated from the Google Cloud Console, as described below.</li>
<li><code>credentials_url</code>: It is a URL to a file generated from the Google Cloud Console, as described below.</li>
</ul>
<div class=""leading-tight text-left""><p>How to Generate the Credentials File</p></div><div><ol>
<li>
<span>Open the Google Cloud Console.</span>
</li>
<li>
<span>Create a new project.</span>
</li>
<li>
<span>Inside this project, go to APIs &amp; Services:</span>
<ul>
<li>
<span>Go to Enabled APIs &amp; services:</span>
<ul>
<li>Click on ENABLE APIS AND SERVICES from the top bar.</li>
<li>Search for YouTube Data API v3 and enable it.</li>
</ul>
</li>
<li>
<span>Go to OAuth consent screen:</span>
<ul>
<li>Click on GET STARTED.</li>
<li>Provide app name and support email.</li>
<li>Choose Audience based on who will be using the app.</li>
<li>Add the Contact Information (email address) of the developer.</li>
<li>Agree to the terms and click on CONTINUE.</li>
<li>Click on Create.</li>
<li>Click on Audience on the left sidebar and under Test users, add the email addresses of the users who will be testing the app. When you are ready to publish the app, you can come back here and click on PUBLISH APP and this app will become available to either the organization or the public based on the audience you have chosen.</li>
</ul>
</li>
<li>
<span>Go to Credentials:</span>
<ul>
<li>Click on CREATE CREDENTIALS from the top bar and choose OAuth client ID.</li>
<li>Choose type as <code>Web application</code> and provide a name. Under Authorized redirect URIs, enter URL where MindsDB has been deployed followed by <code>/verify-auth</code>. For example, if you are running MindsDB locally (on <code>https://localhost:47334</code>), enter <code>https://localhost:47334/verify-auth</code>.</li>
<li>Click on CREATE.</li>
<li>Download the JSON file that is required to connect YouTube to MindsDB.</li>
</ul>
</li>
</ul>
</li>
</ol></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Use the established connection to query the <code>comments</code> table.</span>
<span>You can query for one video&rsquo;s comments:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comments</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> video_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;raWFGQ20OfA&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Or for one channels&rsquo;s comments:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comments</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;UC-...&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>You can include ordering and limiting the output data:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comments</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> video_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;raWFGQ20OfA&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> display_name </span><span style=""color: rgb(207,34,46);"">ASC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Use the established connection to query the <code>channels</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">channels</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;UC-...&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here, the <code>channel_id</code> column is mandatory in the <code>WHERE</code> clause.</span>
<span>Use the established connection to query the <code>videos</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">videos</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> video_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;id&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here, the <code>video_id</code> column is mandatory in the <code>WHERE</code> clause.</span>
<span>With the connection option 2, you can insert replies to comments:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> mindsdb_youtube</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">comments</span><span style=""color: rgb(31,35,40);""> (comment_id, reply)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">&quot;comment_id&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;reply message&quot;</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1867853/YouTube+-+MindsDB","/pages/resumedraft.action?draftId=1867853","/x/TYAc"
"1867874","current","YugabyteDB - MindsDB","491527","491782","page","65309","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:46.248Z","2025-10-24T14:02:46.248Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the YugabyteDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.yugabyte.com/"">YugabyteDB</a> is a high-performance, cloud-native distributed SQL database that aims to support all PostgreSQL features. It is best fit for cloud-native OLTP (i.e. real-time, business-critical) applications that need absolute data correctness and require at least one of the following: scalability, high tolerance to failures, or globally-distributed deployments.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect YugabyteDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to YugabyteDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>psycopg2</code>, a Python library that allows you to use Python code to run SQL commands on the YugabyteDB database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
<li><code>schema</code> is the schema to which your table belongs.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the YugabyteDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> yugabyte_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'yugabyte'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;1234&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">5433</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;yugabyte&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your_schema_name&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> yugabyte_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>NOTE : If you are using YugabyteDB Cloud with MindsDB Cloud website you need to add below 3 static IPs of MindsDB Cloud to <code>allow IP list</code> for accessing it publicly.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>18.220.205.95</span></span>
<span class=""line""><span>3.19.152.46</span></span>
<span class=""line""><span>52.14.91.162</span></span>
</code></pre></div></div></div><span><span><span style=""visibility: visible;""><img alt=""public"" class=""rounded"" src=""https://github-production-user-asset-6210df.s3.amazonaws.com/75653580/238903548-1b054591-f5db-4a6d-a3d0-d048671e4cfa.png"" /></span></span></span></div></div></div>","/spaces/SOP/pages/1867874/YugabyteDB+-+MindsDB","/pages/resumedraft.action?draftId=1867874","/x/YoAc"
"1867899","current","MindsDB and Tableau - MindsDB","491527","491782","page","77181","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:56.254Z","2025-10-24T14:03:56.254Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Tableau lets you visualize your data easily and intuitively. Now that MindsDB
supports the MySQL binary protocol, you can connect it to Tableau and see the
forecasts.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<span>Follow the steps below to connect your MindsDB to Tableau.</span>
<span>First, create a new workbook in Tableau and open the <em>Connectors</em> tab in the
<em>Connect to Data</em> window.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""752"" src=""https://mintcdn.com/mindsdb/tkxKy44mj_2VlYcf/assets/connect_tableau.png?fit=max&amp;auto=format&amp;n=tkxKy44mj_2VlYcf&amp;q=85&amp;s=f63b96ce2d485d4d263183a70f06b321"" style="""" width=""1412"" /></span></span></p>
<span>Next, choose <em>MySQL</em> and provide the details of your MindsDB connection, such as
the IP, port, and database name. Optionally, you can provide a username and
password. Then, click <em>Sign In</em>.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""580"" src=""https://mintcdn.com/mindsdb/tkxKy44mj_2VlYcf/assets/connect_tableau_2.png?fit=max&amp;auto=format&amp;n=tkxKy44mj_2VlYcf&amp;q=85&amp;s=e32ba274a537b4e5e030e6067760f9f6"" style="""" width=""1004"" /></span></span></p>
<span>Here are the connection parameters:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>Host: `localhost`</span></span>
<span class=""line""><span>Port: `47335`</span></span>
<span class=""line""><span>Database name: `mindsdb`</span></span>
<span class=""line""><span>Username: `mindsdb`</span></span>
<span class=""line""><span>Password: *leave it empty*</span></span>
</code></pre></div></div></div>
<div><div><span>You can <a class=""link"" href=""/setup/custom-config#auth"">set up the authetication with user and password in the config file</a>.</span></div></div>
<span>Now you&rsquo;re connected!</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#overview-of-mindsdb-in-tableau"">‚Äã</a></div><span class=""cursor-pointer"">Overview of MindsDB in Tableau</span></h2>
<span>The content of your MindsDB is visible in the right-side pane.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""735"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/connect_tableau_3.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=f30b8d8907b70f9cc82c02c0fc9e1182"" style="""" width=""788"" /></span></span></p>
<span>All the predictors are listed under the <em>Table</em> section. You can also switch
between the integrations, such as <em>mindsdb</em> or <em>files</em>, in the <em>Database</em>
section using the drop-down.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""620"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/connect_tableau_4.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=f75cb5fa999a93f5eccc6ff8c84dca48"" style="""" width=""243"" /></span></span></p>
<span>Now, let&rsquo;s run some examples!</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#examples"">‚Äã</a></div><span class=""cursor-pointer"">Examples</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-1"">‚Äã</a></div><span class=""cursor-pointer"">Example 1</span></h3>
<span>Previewing one of the tables from the <em>mysql</em> integration:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""738"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/connect_tableau_5.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=72fcf93c55143bcad032dd880881ef90"" style="""" width=""1412"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-2"">‚Äã</a></div><span class=""cursor-pointer"">Example 2</span></h3>
<span>There is one technical limitation. Namely, we cannot join tables from different
databases/integrations in Tableau. To overcome this challenge, you can use
either views or custom SQL queries.</span>
<ul>
<li>Previewing a view that joins a data table with a predictor table:</li>
</ul>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""735"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/connect_tableau_6.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=931b15d05dbc4da9fe14801e60793d50"" style="""" width=""1407"" /></span></span></p>
<ul>
<li>Using a custom SQL query by clicking the <em>New Custom SQL</em> button in the
right-side pane:</li>
</ul>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""734"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/connect_tableau_7.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=a43c34ab3b66a94976ef97cd09434e1f"" style="""" width=""1410"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<div><div><span><strong>From Our Community</strong></span><span>Check out the articles and video guides created by our community:</span><ul>
<li>
<span>Article on <a class=""link"" href=""https://teslimodus.medium.com/predicting-visualizing-hourly-electricity-demand-in-the-us-with-mindsdb-and-tableau-126d1c74d860"">Predicting &amp; Visualizing Hourly Electricity Demand in the US with MindsDB and Tableau</a>
by <a class=""link"" href=""https://teslimodus.medium.com/"">Teslim Odumuyiwa</a></span>
</li>
<li>
<span>Article on <a class=""link"" href=""https://dev.to/tesprogram/predicting-visualizing-petroleum-production-with-mindsdb-and-tableau-373f"">Predicting &amp; Visualizing Petroleum Production with MindsDB and Tableau</a>
by <a class=""link"" href=""https://github.com/Tes-program"">Teslim Odumuyiwa</a></span>
</li>
<li>
<span>Article on <a class=""link"" href=""https://dev.to/tesprogram/predicting-visualizing-gas-prices-with-mindsdb-and-tableau-d1p"">Predicting &amp; Visualizing Gas Prices with MindsDB and Tableau</a>
by <a class=""link"" href=""https://github.com/Tes-program"">Teslim Odumuyiwa</a></span>
</li>
<li>
<span>Article on <a class=""link"" href=""https://dev.to/ephraimx/how-to-visualize-mindsdb-predictions-with-tableau-2bpd"">How To Visualize MindsDB Predictions with Tableau</a>
by <a class=""link"" href=""https://dev.to/ephraimx"">Ephraimx</a></span>
</li>
<li>
<span>Video guide on <a class=""link"" href=""https://www.youtube.com/watch?v=eUiBVrm85v4"">Connecting MindsDB to Tableau</a>
by <a class=""link"" href=""https://github.com/alissatroiano"">Alissa Troiano</a></span>
</li>
<li>
<span>Video guide on <a class=""link"" href=""https://youtu.be/4aio-8kNbOo"">Visualizing prediction result in Tableau</a> by
<a class=""link"" href=""https://github.com/Tes-program"">Teslim Odumuyiwa</a></span>
</li>
</ul></div></div>
<span>Have fun!</span></div>","/spaces/SOP/pages/1867899/MindsDB+and+Tableau+-+MindsDB","/pages/resumedraft.action?draftId=1867899","/x/e4Ac"
"1867936","current","How to Insert Data into Knowledge Bases - MindsDB","491527","491782","page","83589","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:24.846Z","2025-10-24T14:10:51.013Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Knowledge Bases (KBs) organize data across data sources, including databases, files, documents, webpages, enabling efficient search capabilities.</span>
<span>Here is what happens to data when it is inserted into the knowledge base.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""2355"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/kb_data_insertion.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0b15779acc8997d4744a7823b6eb70b2"" style="""" width=""2303"" /></span></span></p>
<span>Upon inserting data into the knowledge base, it is split into chunks, transformed into the embedding representation to enhance the search capabilities, and stored in a vector database.</span>
<div><div><span>Learn more about features of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases available via SQL API</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#insert-function"">‚Äã</a></div><span class=""cursor-pointer""><code>insert()</code> Function</span></h2>
<span>Here is the syntax for inserting data into a knowledge base:</span>
<ul>
<li>
<span>Inserting raw data:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb.insert([</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    {</span><span style=""color: rgb(10,48,105);"">'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'apartment'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'price'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">100000</span><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    {</span><span style=""color: rgb(10,48,105);"">'type'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'villa'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'price'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">500000</span><span style=""color: rgb(31,35,40);"">}</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">])</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Inserting data from data sources connected to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb.insert_query(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    server.databases.my_database.tables.my_table.filter(</span><span style=""color: rgb(149,56,0);"">type</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'my_type'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Inserting data from files uploaded to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb.insert_files([</span><span style=""color: rgb(10,48,105);"">'my_pdf_file'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'my_txt_file'</span><span style=""color: rgb(31,35,40);"">])</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Inserting data from webpages:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">kb.insert_webpages(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    [</span><span style=""color: rgb(10,48,105);"">'https://example.com'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    crawl_depth</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">2</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    filters</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(207,34,46);"">r</span><span style=""color: rgb(10,48,105);"">'</span><span style=""color: rgb(5,80,174);"">.</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(17,99,41);"">\/</span><span style=""color: rgb(10,48,105);"">blog</span><span style=""color: rgb(17,99,41);"">\/</span><span style=""color: rgb(5,80,174);"">.</span><span style=""color: rgb(207,34,46);"">*</span><span style=""color: rgb(10,48,105);"">'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    limit</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);"">10</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Where:</span>
<ul>
<li><code>urls</code>: Base URLs to crawl.</li>
<li><code>crawl_depth</code>: Depth for recursive crawling. Default is 1.</li>
<li><code>filters</code>: Regex patterns to include.</li>
<li><code>limit</code>: Max number of pages.</li>
</ul>
</li>
</ul>
<span>Upon execution, it inserts data into a knowledge base, using the embedding model to embed it into vectors before inserting into an underlying vector database.</span>
<div><div><span>The status of the insert operations is logged in the <code>information_schema.queries</code> table with the timestamp when it was ran.</span></div></div>
<div><div><span><strong>Handling duplicate data while inserting into the knowledge base</strong></span><span>Knowledge bases uniquely identify data rows using an ID column, which prevents from inserting duplicate data, as follows.</span><ul>
<li>
<span><strong>Case 1: Inserting data into the knowledge base without the <code>id_column</code> defined.</strong></span>
<span>When users do not define the <code>id_column</code> during the creation of a knowledge base, MindsDB generates the ID for each row using a hash of the content columns, as <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#id-column"">explained here</a>.</span>
<span><strong>Example:</strong></span>
<span>If two rows have exactly the same content in the content columns, their hash (and thus their generated ID) will be the same.</span>
<span>Note that duplicate rows are skipped and not inserted.</span>
<span>Since both rows in the below table have the same content, only one row will be inserted.</span>
<table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Alice</td><td>25</td></tr><tr><td>Alice</td><td>25</td></tr></tbody></table>
</li>
<li>
<span><strong>Case 2: Inserting data into the knowledge base with the <code>id_column</code> defined.</strong></span>
<span>When users define the <code>id_column</code> during the creation of a knowledge base, then the knowledge base uses that column&rsquo;s values as the row ID.</span>
<span><strong>Example:</strong></span>
<span>If the <code>id_column</code> has duplicate values, the knowledge base skips the duplicate row(s) during the insert.</span>
<span>The second row in the below table has the same <code>id</code> as the first row, so only one of these rows is inserted.</span>
<table><thead><tr><th>id</th><th>name</th><th>age</th></tr></thead><tbody><tr><td>1</td><td>Alice</td><td>25</td></tr><tr><td>1</td><td>Bob</td><td>30</td></tr></tbody></table>
</li>
</ul><span><strong>Best practice</strong></span><span>Ensure the <code>id_column</code> uniquely identifies each row to avoid unintentional data loss due to duplicate ID skipping.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#update-existing-data"">‚Äã</a></div><span class=""cursor-pointer"">Update Existing Data</span></h3>
<span>In order to update existing data in the knowledge base, insert data with the column ID that you want to update and the updated content.</span>
<span>Here is an example of usage. A knowledge base stores the following data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product           | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse    | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Laptop Stand      | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
</code></pre></div></div></div>
<span>A user updated <code>Laptop Stand</code> to <code>Aluminum Laptop Stand</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product               | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse        | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker     | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Aluminum Laptop Stand | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-----------------------+------------------------+</span></span>
</code></pre></div></div></div>
<div><div><span>Go to the <em>Complete Example</em> section below to find out how to access this sample data.</span></div></div>
<span>Here is how to propagate this change into the knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb.insert_query(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    server.databases.sample_data.tables.orders.filter(</span><span style=""color: rgb(149,56,0);"">order_id</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'Q7P'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>The knowledge base matches the ID value to the existing one and updates the data if required.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#insert-data-using-partitions"">‚Äã</a></div><span class=""cursor-pointer"">Insert Data using Partitions</span></h3>
<span>In order to optimize the performance of data insertion into the knowledge base, users can set up partitions and threads to insert batches of data in parallel. This also enables tracking the progress of data insertion process including cancelling and resuming it if required.</span>
<span>Here is an example.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    INSERT INTO my_kb</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT order_id, product, notes</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM sample_data.orders</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    USING</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        batch_size = 200,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        track_column = order_id,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        threads = 10,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        error = 'skip';</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>The parameters include the following:</span>
<ul>
<li>
<span><code>batch_size</code> defines the number of rows fetched per iteration to optimize data extraction from the source. It defaults to 1000.</span>
</li>
<li>
<span><code>threads</code> defines threads for running partitions. Note that if the <a class=""link"" href=""/setup/custom-config#overview-of-config-parameters"">ML task queue</a> is enabled, threads are used automatically. The available values for <code>threads</code> are:</span>
<ul>
<li>a number of threads to be used, for example, <code>threads = 10</code>,</li>
<li>a boolean value that defines whether to enable threads, setting <code>threads = true</code>, or disable threads, setting <code>threads = false</code>.</li>
</ul>
</li>
<li>
<span><code>track_column</code> defines the column used for sorting data before partitioning.</span>
</li>
<li>
<span><code>error</code> defines the error processing options. The available values include <code>raise</code>, used to raise errors as they come, or <code>skip</code>, used to subside errors. It defaults to <code>raise</code> if not provided.</span>
</li>
</ul>
<span>After executing the <code>INSERT INTO</code> statement with the above parameters, users can view the data insertion progress by querying the <code>information_schema.queries</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT * FROM information_schema.queries;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Users can cancel the data insertion process using the process ID from the <code>information_schema.queries</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT query_cancel(1);</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>If you want to cancel the data insertion process, look up the process ID value from the <code>information_schema.queries</code> table and pass it as an argument to the <code>query_cancel()</code> function. Note that canceling the query will not remove the already inserted data.</span>
<span>Users can resume the data insertion process using the process ID from the <code>information_schema.queries</code> table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT query_resume(1);</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>If you want to resume the data insertion process (which may have been interrupted by an error or cancelled by a user), look up the process ID value from the <code>information_schema.queries</code> table and pass it as an argument to the <code>query_resume()</code> function. Note that resuming the query will not remove the already inserted data and will start appending the remaining data.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#chunking-data"">‚Äã</a></div><span class=""cursor-pointer"">Chunking Data</span></h3>
<span>Upon inserting data into the knowledge base, the data chunking is performed in order to optimize the storage and search of data.</span>
<span>Each chunk is identified by its chunk ID of the following format: <code>&lt;id&gt;:&lt;chunk_number&gt;of&lt;total_chunks&gt;:&lt;start_char_number&gt;to&lt;end_char_number&gt;</code>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#text"">‚Äã</a></div><span class=""cursor-pointer"">Text</span></h4>
<span>Users can opt for defining the chunking parameters when creating a knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    params</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;preprocessing&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;text_chunking_config&quot;</span><span style=""color: rgb(31,35,40);""> : {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;chunk_size&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">2000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">                &quot;chunk_overlap&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">200</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>The <code>chunk_size</code> parameter defines the size of the chunk as the number of characters. And the <code>chunk_overlap</code> parameter defines the number of characters that should overlap between subsequent chunks.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#json"">‚Äã</a></div><span class=""cursor-pointer"">JSON</span></h4>
<span>Users can opt for defining the chunking parameters specifically for JSON data.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    params</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;preprocessing&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;json_chunking&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;json_chunking_config&quot;</span><span style=""color: rgb(31,35,40);""> : {</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">                ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">            }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>When the <code>type</code> of chunking is set to <code>json_chunking</code>, users can configure it by setting the following parameter values in the <code>json_chunking_config</code> parameter:</span>
<ul>
<li>
<span><code>flatten_nested</code><br />
It is of the <code>bool</code> data type with the default value of <code>True</code>.<br />
It defines whether to flatten nested JSON structures.</span>
</li>
<li>
<span><code>include_metadata</code><br />
It is of the <code>bool</code> data type with the default value of <code>True</code>.<br />
It defines whether to include original metadata in chunks.</span>
</li>
<li>
<span><code>chunk_by_object</code><br />
It is of the <code>bool</code> data type with the default value of <code>True</code>.<br />
It defines whether to chunk by top-level objects (<code>True</code>) or create a single document (<code>False</code>).</span>
</li>
<li>
<span><code>exclude_fields</code><br />
It is of the <code>List[str]</code> data type with the default value of an empty list.<br />
It defines the list of fields to exclude from chunking.</span>
</li>
<li>
<span><code>include_fields</code><br />
It is of the <code>List[str]</code> data type with the default value of an empty list.<br />
It defines the list of fields to include in chunking (if empty, all fields except excluded ones are included).</span>
</li>
<li>
<span><code>metadata_fields</code><br />
It is of the <code>List[str]</code> data type with the default value of an empty list.<br />
It defines the list of fields to extract into metadata for filtering (can include nested fields using dot notation). If empty, all primitive fields will be extracted (top-level fields if available, otherwise all primitive fields in the flattened structure).</span>
</li>
<li>
<span><code>extract_all_primitives</code><br />
It is of the <code>bool</code> data type with the default value of <code>False</code>.<br />
It defines whether to extract all primitive values (strings, numbers, booleans) into metadata.</span>
</li>
<li>
<span><code>nested_delimiter</code><br />
It is of the <code>str</code> data type with the default value of <code>&quot;.&quot;</code>.<br />
It defines the delimiter for flattened nested field names.</span>
</li>
<li>
<span><code>content_column</code><br />
It is of the <code>str</code> data type with the default value of <code>&quot;content&quot;</code>.<br />
It defines the name of the content column for chunk ID generation.</span>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#underlying-vector-store"">‚Äã</a></div><span class=""cursor-pointer"">Underlying Vector Store</span></h3>
<span>Each knowledge base has its underlying vector store that stores data inserted into the knowledge base in the form of embeddings.</span>
<span>Users can query the underlying vector store as follows.</span>
<ul>
<li>KB with the default ChromaDB vector store:</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT id, content, metadata, embeddings</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM &lt;kb_name&gt;_chromadb.storage_table;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<ul>
<li>KB with user-defined vector store (either <a class=""link"" href=""/integrations/vector-db-integrations/pgvector"">PGVector</a> or <a class=""link"" href=""/integrations/vector-db-integrations/chromadb"">ChromaDB</a>):</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.query(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    SELECT id, content, metadata, embeddings</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    FROM &lt;vector_store_connection_name&gt;.&lt;table_name&gt;;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    '''</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1867936/How+to+Insert+Data+into+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=1867936","/x/oIAc"
"1867953","current","Delete From a Table - MindsDB","491527","491782","page","86275","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:37.671Z","2025-10-24T14:10:03.617Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>delete()</code> function is executed on a table from a data source connected to MindsDB. It deletes rows from a table.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tables</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">delete</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">key</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(207,34,46);"">values</span><span style=""color: rgb(31,35,40);"">, ...)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1867953/Delete+From+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=1867953","/x/sYAc"
"1933314","current","SurrealDB - MindsDB","491527","491782","page","60237","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:32.593Z","2025-10-24T14:02:32.593Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the SurrealDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://surrealdb.com/"">SurrealDB</a> is an innovative NewSQL cloud database, suitable for serverless applications, jamstack applications, single-page applications, and traditional applications.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SurrealDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to SurrealDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler was implemented by using the python library <code>pysurrealdb</code>.</span>
<span>The required arguments to establish a connection are:</span>
<ul>
<li><code>host</code>: the host name of the Surrealdb connection</li>
<li><code>port</code>: the port to use when connecting</li>
<li><code>user</code>: the user to authenticate</li>
<li><code>password</code>: the password to authenticate the user</li>
<li><code>database</code>: database name to be connected</li>
<li><code>namespace</code>: namespace name to be connected</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>To establish a connection with our SurrealDB server which is running locally with the public cloud instance. We are going to use <code>ngrok tunneling</code> to connect cloud instance to the local SurrealDB server. You can follow this <a class=""link"" href=""https://docs.mindsdb.com/sql/create/database#making-your-local-database-available-to-mindsdb"">guide</a> for that.</span>
<span>Let&rsquo;s make the connection with the MindsDB public cloud</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> exampledb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'surrealdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;6.tcp.ngrok.io&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;17141&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;testdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;namespace&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;testns&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>Please change the <code>host</code> and <code>port</code> properties in the <code>PARAMETERS</code> clause based on the values which you got.</span>
<span>We can also query the <code>dev</code> table which we created with</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> exampledb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">dev</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1933314/SurrealDB+-+MindsDB","/pages/resumedraft.action?draftId=1933314","/x/AoAd"
"1933337","current","Navigating the MindsDB GUI - MindsDB","491527","491782","page","69375","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:20.151Z","2025-10-24T14:03:20.151Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB offers a user-friendly graphical interface that allows users to execute SQL commands, view their outputs, and easily navigate connected data sources, projects, and their contents.</span>
<span>Let&rsquo;s explore the features and usage of the MindsDB editor.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#accessing-the-mindsdb-gui-editor"">‚Äã</a></div><span class=""cursor-pointer"">Accessing the MindsDB GUI Editor</span></h2>
<span>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""963"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/mindsdb_editor.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=60775ba49740a3aabf9dcf6e1051da4c"" style="""" width=""1905"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exploring-the-mindsdb-gui-editor"">‚Äã</a></div><span class=""cursor-pointer"">Exploring the MindsDB GUI Editor</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-editor"">‚Äã</a></div><span class=""cursor-pointer"">Query Editor</span></h3>
<span>This is the primary component where users can input SQL commands and queries. It provides a code editor environment where users can write, edit, and execute SQL statements.</span>
<span>It is located in the top center of the MindsDB GUI.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""963"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/query_editor.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=840af33e5297a180d10deeb515a1504b"" style="""" width=""1905"" /></span></span></p>
<span>You can open multiple query editor tabs by clicking the plus button next to the current tab, like this:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""93"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/multiple_query_editor.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=f30069e6dbf98f3a09e13b9c3522645d"" style="""" width=""613"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#results-viewer"">‚Äã</a></div><span class=""cursor-pointer"">Results Viewer</span></h3>
<span>Once a query is executed, the results viewer displays the output of the query. It presents the results in a tabular format, showing rows and columns of data.</span>
<span>It is located in the bottom center of the MindsDB GUI.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""961"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/results_viewer.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=1a22ef1f3441dc1157c78506c5699ca6"" style="""" width=""1903"" /></span></span></p>
<span>MindsDB supports additional features such as the following:</span>
<ol>
<li>The <a class=""link"" href=""/sql/data-insights"">Data Insights</a> feature provides useful data visualization charts.</li>
<li>The Export feature lets you export the query output as a CSV or Markdown file.</li>
</ol>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#object-explorer"">‚Äã</a></div><span class=""cursor-pointer"">Object Explorer</span></h3>
<span>The object explorer provides an overview of the projects, models, views, connected data sources, and tables.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""289"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/object_explorer.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=bc6d9279ce799e484b4cd9763f84cb47"" style="""" width=""302"" /></span></span></p>
<span>Users can navigate through the available objects by expanding the tree structure items. Upon hovering over the tables, you can query their content using the provided <code>SELECT</code> statement, as below.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""297"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/object_explorer_query.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=f16513e8086fedd269d54359950e639b"" style="""" width=""622"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#model-progress-bar"">‚Äã</a></div><span class=""cursor-pointer"">Model Progress Bar</span></h3>
<span>MindsDB provides a custom SQL statement to create and deploy models as virtual tables. Upon executing the <a class=""link"" href=""/sql/create/model""><code>CREATE MODEL</code></a> statement, you can monitor the training progress at the bottom-left corner below the object explorer.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""961"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/create_model_1.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=89e36cba6180c93a05b1e3ed2a5a12ff"" style="""" width=""1069"" /></span></span></p>
<span>Once the model is ready, its status updates to complete.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""118"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_editor/create_model_2.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=3a3fe280601285a2c5ff38289851871e"" style="""" width=""297"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#add-new-data-sources"">‚Äã</a></div><span class=""cursor-pointer"">Add New Data Sources</span></h3>
<span>You can connect a data source to MindsDB by clicking the <code>Add</code> button and choosing <code>New Datasource</code>. It takes you to a page that lists all available data sources, including, databases, data warehouses, applications, and more. Here, you can search for a data source you want to connect to and follow the instructions.</span>
<span>For more information, visit the <strong>Data Sources</strong> section of the docs.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload Files</span></h3>
<span>You can upload a file to MindsDB by clicking the <code>Add</code> button and choosing <code>Upload File</code>. It takes you to a form where you can upload a file and give it a name.</span>
<span>For more information, visit <a class=""link"" href=""/sql/create/file"">our docs here</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-custom-models"">‚Äã</a></div><span class=""cursor-pointer"">Upload Custom Models</span></h3>
<span>MindsDB offers a way to upload your custom model in the form of Python code and incorporate it into the MindsDB ecosystem. You can do that by clicking the <code>Add</code> button and choosing <code>Upload custom model</code>.</span>
<span>For more information, visit <a class=""link"" href=""/custom-model/byom"">our docs here</a>.</span></div>","/spaces/SOP/pages/1933337/Navigating+the+MindsDB+GUI+-+MindsDB","/pages/resumedraft.action?draftId=1933337","/x/GYAd"
"1933354","current","Remove a File - MindsDB","491527","491782","page","93922","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:21.464Z","2025-10-24T14:09:58.826Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>In MindsDB, files are treated as tables. These are stored in the default <code>files</code> database. To delete a file, you must save this <code>files</code> database into a variable and then, run the <code>tables.drop()</code> function on it.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">files </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> server</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">get_database</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'files'</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tables</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(207,34,46);"">drop</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'file_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1933354/Remove+a+File+-+MindsDB","/pages/resumedraft.action?draftId=1933354","/x/KoAd"
"1933373","current","MindsDB's MCP Server with Anthropic's MCP Connector - MindsDB","491527","491782","page","100641","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:00.137Z","2025-10-24T14:06:00.137Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This tutorial walks you through the usage of MindsDB&rsquo;s MCP Server with <a class=""link"" href=""https://docs.anthropic.com/en/docs/agents-and-tools/mcp-connector"">Anthropic&rsquo;s MCP Connector</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<span>Follow the steps below to connect MindsDB&rsquo;s MCP Server to Anthropic.</span>
<ol>
<li>
<span>Start MindsDB&rsquo;s MCP Server following <a class=""link"" href=""/mcp/usage"">this guide</a>.</span>
</li>
<li>
<span>Expose the local instance of MindsDB via <a class=""link"" href=""https://ngrok.com/"">ngrok</a> or similar tools.</span>
</li>
<li>
<span>Get the Anthropic API key and download the <code>anthropic</code> package.</span>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#chat-with-data"">‚Äã</a></div><span class=""cursor-pointer"">Chat with Data</span></h2>
<span>Here is how to connect MindsDB&rsquo;s MCP Server to Anthropic.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> anthropic</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">client </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> anthropic.Anthropic(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    api_key</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;anthropic-api-key&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">response </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> client.beta.messages.create(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    model</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;claude-sonnet-4-20250514&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    max_tokens</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> 1000</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    messages</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        {</span><span style=""color: rgb(10,48,105);"">&quot;role&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;content&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;What tools do you have available?&quot;</span><span style=""color: rgb(31,35,40);"">}</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    mcp_servers</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;url&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://5a52-88-203-84-191.ngrok-free.app/mcp/sse&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb-mcp&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            &quot;authorization_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;YOUR_MINDSDB_TOKEN&gt;&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    betas</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span><span style=""color: rgb(10,48,105);"">&quot;mcp-client-2025-04-04&quot;</span><span style=""color: rgb(31,35,40);"">]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">print</span><span style=""color: rgb(31,35,40);"">(response)</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>BetaMessage(id='msg_01SrYiUsK7Jb4a5BA2nszKsc', container=None, content=[BetaTextBlock(citations=None, text=&quot;I have access to two tools for working with MindsDB:\n\n1. **mindsdb-mcp_query** - Execute SQL queries against MindsDB\n   - Parameters:\n     - `query` (required): The SQL query to execute\n     - `context` (optional): Additional context parameters for the query\n   - Returns: Query results or error information\n\n2. **mindsdb-mcp_list_databases** - List all databases and their tables in MindsDB\n   - Parameters: None required\n   - Returns: A list of all databases and their associated tables\n\nThese tools allow me to help you explore your MindsDB instance, run SQL queries, and work with your data and ML models. Would you like me to start by showing you what databases are available, or do you have a specific query you'd like to run?&quot;, type='text')], model='claude-sonnet-4-20250514', role='assistant', stop_reason='end_turn', stop_sequence=None, type='message', usage=BetaUsage(cache_creation=None, cache_creation_input_tokens=0, cache_read_input_tokens=0, input_tokens=572, output_tokens=183, server_tool_use=None, service_tier='standard'))</span></span>
</code></pre></div></div></div>
<span>Follow the <a class=""link"" href=""https://docs.anthropic.com/en/docs/agents-and-tools/mcp-connector"">MCP Connector docs from Anthropic</a> to learn more.</span></div>","/spaces/SOP/pages/1933373/MindsDB+s+MCP+Server+with+Anthropic+s+MCP+Connector+-+MindsDB","/pages/resumedraft.action?draftId=1933373","/x/PYAd"
"1933396","current","MindsDB's MCP Server Usage and Tools - MindsDB","491527","491782","page","102474","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:06.289Z","2025-10-24T14:06:06.289Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span><strong>MindsDB</strong> is an MCP server that enables your MCP applications to answer questions over large-scale federated data spanning databases, data warehouses, and SaaS applications.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#start-mindsdb-as-an-mcp-server"">‚Äã</a></div><span class=""cursor-pointer"">Start MindsDB as an MCP Server</span></h2>
<span>Follow the steps below to use MindsDB as an MCP server.</span>
<ol>
<li>
<span>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
</li>
<li>
<span><a class=""link"" href=""/mindsdb_sql/sql/create/database"">Connect your data source</a> and/or <a class=""link"" href=""/mindsdb_sql/sql/create/file"">upload files</a> to MindsDB in order to ask questions over your data.</span>
<div class=""leading-tight text-left""><p>Sample Data</p></div><div><span>You can use our sample dataset that stores the sales manager data.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sales_manager_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;postgres&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sales_manager_data&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div></div>
</li>
<li>
<span>Start MindsDB MCP server, either with or without authentication.</span>
<ul>
<li>
<span>Start MindsDB MCP server without authentication to connect it to <a class=""link"" href=""/mcp/cursor_usage"">Cursor</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Start MindsDB MCP server with authentication to connect it to <a class=""link"" href=""/mcp/openai"">OpenAI</a> or <a class=""link"" href=""/mcp/anthropic"">Anthropic</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_USERNAME=admin</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_PASSWORD=password123</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div>
<span>Then get an auth token from MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(5,80,174);""> -d</span><span style=""color: rgb(10,48,105);""> '{&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;password123&quot;}'</span><span style=""color: rgb(5,80,174);""> -H</span><span style=""color: rgb(10,48,105);""> &quot;Content-Type: application/json&quot;</span><span style=""color: rgb(10,48,105);""> http://localhost:47334/api/login</span></span>
</code></pre></div></div></div>
<span>This will return a token that you can use in your MCP client.</span>
</li>
</ul>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mcp-tools"">‚Äã</a></div><span class=""cursor-pointer"">MCP Tools</span></h2>
<span>MindsDB MCP API exposes a set of tools that enable users to interact with their data and extract valuable insights.</span>
<span><strong>1. List Databases</strong></span>
<span>The <code>list_databases</code> tool lists all data sources connected to MindsDB.</span>
<span><strong>2. Query</strong></span>
<span>The <code>query</code> tool executes queries on the federated data to extract data relevant to answering a given question.</span></div>","/spaces/SOP/pages/1933396/MindsDB+s+MCP+Server+Usage+and+Tools+-+MindsDB","/pages/resumedraft.action?draftId=1933396","/x/VIAd"
"1933427","current","Insert Into Knowledge Base - MindsDB","491527","491782","page","111931","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:20.807Z","2025-10-24T14:07:20.807Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> PUT</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/knowledge_bases/my_kb</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  -H</span><span style=""color: rgb(10,48,105);""> &quot;Content-Type: application/json&quot;</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  -d</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;knowledge_base&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;rows&quot;: [</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;order_id&quot;: &quot;123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;product&quot;: &quot;Widget A&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;notes&quot;: &quot;Great product, would buy again&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;order_id&quot;: &quot;124&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;product&quot;: &quot;Widget B&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">          &quot;notes&quot;: &quot;Poor quality&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      ],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;query&quot;: &quot;SELECT * FROM sample_data.orders&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">}'</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1933427/Insert+Into+Knowledge+Base+-+MindsDB","/pages/resumedraft.action?draftId=1933427","/x/c4Ad"
"1933460","current","Installation - MindsDB","491527","491782","page","114850","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:08:54.540Z","2025-10-24T14:10:39.868Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Python SDK enables you to connect to the MindsDB server from Python using HTTP API. Read along to see how to install and test the MindsDB Python SDK.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#simple-installation"">‚Äã</a></div><span class=""cursor-pointer"">Simple Installation</span></h2>
<span>To install the MindsDB Python SDK, run the below command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> mindsdb_sdk</span></span>
</code></pre></div></div></div>
<span>Here is the expected output:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1226"" src=""https://mintcdn.com/mindsdb/PwWStDnrPJllqmj0/assets/pythonsdk_install_output.png?fit=max&amp;auto=format&amp;n=PwWStDnrPJllqmj0&amp;q=85&amp;s=63087b949f5423fd5f717eca780344b4"" style="""" width=""926"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#advanced-installation"">‚Äã</a></div><span class=""cursor-pointer"">Advanced Installation</span></h2>
<span>Instead of using the <code>pip install mindsdb_sdk</code> command, you can install it by cloning the <a class=""link"" href=""https://github.com/mindsdb/mindsdb_python_sdk"">Python SDK repository</a>. Then you should create a virtual environment, install all dependencies from the <code>requirements.txt</code> file, and run tests as instructed below.</span>
<span>To test all the components, go to the project directory (<code>mindsdb_sdk</code>) and run the below command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">env</span><span style=""color: rgb(10,48,105);""> PYTHONPATH=./</span><span style=""color: rgb(10,48,105);""> pytest</span></span>
</code></pre></div></div></div>
<span>To generate the API documentation, run the below commands:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(10,48,105);""> sphinx</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> docs</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">make</span><span style=""color: rgb(10,48,105);""> html</span></span>
</code></pre></div></div></div>
<span>The documentation is generated in the <code>docs/build/html</code> folder.</span></div>","/spaces/SOP/pages/1933460/Installation+-+MindsDB","/pages/resumedraft.action?draftId=1933460","/x/lIAd"
"1966081","current","MindsDB, an AI Data Solution - MindsDB","491527","491782","page","3155","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:52:55.990Z","2025-10-24T13:52:55.990Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enables humans, AI, agents, and applications to get highly accurate answers across sprawled and large scale data sources.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""969"" src=""https://mintcdn.com/mindsdb/csqPZpl2MaxdJ3zL/assets/cloud/main_mdb.png?fit=max&amp;auto=format&amp;n=csqPZpl2MaxdJ3zL&amp;q=85&amp;s=3c8a1cebae358394e3c227e50983678b"" style="""" width=""1566"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#core-philosophy"">‚Äã</a></div><span class=""cursor-pointer"">Core Philosophy</span></h2>
<span>MindsDB is built around three fundamental capabilities that form the foundation of MindsDB, enabling seamless integration, organization, and utilization of data.</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Connect</p><div><span>Connect data from <a class=""link"" href=""/integrations/data-overview"">hundreds of data sources</a> that integrate with MindsDB, including databases, data warehouses, applications, and vector databases.</span><span>Learn more <a class=""link"" href=""/mindsdb-connect"">here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Unify</p><div><span>Unify and organize data from one or multiple (structured and unstructured) data sources, by creating
<a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases</a>, <a class=""link"" href=""/mindsdb_sql/sql/create/view"">views</a> and <a class=""link"" href=""/mindsdb_sql/sql/create/jobs"">jobs</a>.</span><span>Learn more <a class=""link"" href=""/mindsdb-unify"">here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Respond</p><div><span>Generate accurate, context-aware responses from unified data using <a class=""link"" href=""/mindsdb_sql/agents/agent"">agents</a> or <a class=""link"" href=""/mcp/overview"">MCP API</a>, making insights easily accessible across applications and teams.</span><span>Learn more <a class=""link"" href=""/mindsdb-respond"">here</a>.</span></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">Install MindsDB</span></h2>
<span>MindsDB is an open-source server that can be deployed anywhere, including local machines and clouds, and customized to fit the purpose.</span>
<ul>
<li>Use <a class=""link"" href=""/setup/self-hosted/docker-desktop"">MindsDB via Docker Desktop</a>. This is the fastest and recommended way to get started.</li>
<li>Use <a class=""link"" href=""/setup/self-hosted/docker"">MindsDB via Docker</a>. This provides greater flexibility in customizing the MindsDB instance by rebuilding Docker images.</li>
<li>Use <a class=""link"" href=""/setup/cloud/aws-marketplace"">MindsDB via AWS Marketplace</a>. This enables running MindsDB in cloud.</li>
<li>Use <a class=""link"" href=""/contribute/install"">MindsDB via PyPI</a>. This option enables contributions to MindsDB.</li>
</ul></div>","/spaces/SOP/pages/1966081/MindsDB+an+AI+Data+Solution+-+MindsDB","/pages/resumedraft.action?draftId=1966081","/x/AQAe"
"1966098","current","Data Catalog - MindsDB","491527","491782","page","14865","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:39.028Z","2025-10-24T13:59:39.028Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>The <strong>Data Catalog</strong> in MindsDB plays a key role in enhancing the context available to <a class=""link"" href=""/mindsdb_sql/agents/agent"">agents</a> when querying data sources. By automatically indexing and storing metadata, such as table names, column types, constraints, and statistics, the catalog empowers agents to understand the structure and semantics of the data, leading to more accurate and efficient query generation.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#why-it-matters"">‚Äã</a></div><span class=""cursor-pointer"">Why It Matters</span></h3>
<span>When agents interpret natural language questions or generate SQL queries, access to metadata improves their ability to:</span>
<ul>
<li>Understand relationships between tables and fields.</li>
<li>Infer joins, filters, and aggregations more intelligently.</li>
<li>Avoid syntax errors due to missing or unknown schema information.</li>
</ul>
<span>This metadata layer provides agents with the necessary context to avoid making uninformed queries.</span></div>","/spaces/SOP/pages/1966098/Data+Catalog+-+MindsDB","/pages/resumedraft.action?draftId=1966098","/x/EgAe"
"1966117","current","GitLab - MindsDB","491527","491782","page","20609","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:09.348Z","2025-10-24T14:00:09.348Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect GitLab repository to MindsDB.
<a class=""link"" href=""https://about.gitlab.com/"">GitLab</a> is a DevSecOps Platform. Data from GitLab, including issues and MRs, can be utilized within MindsDB to make relevant predictions or automate the issue/MR creation.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect GitLab to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to GitLab.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler was implemented using the <a class=""link"" href=""https://github.com/python-gitlab/python-gitlab"">python-gitlab</a> library.
python-gitlab is a Python library that wraps GitLab API.</span>
<span>The GitLab handler is initialized with the following parameters:</span>
<ul>
<li><code>repository</code>: a required name of a GitLab repository to connect to.</li>
<li><code>api_key</code>: an optional GitLab API key to use for authentication.</li>
</ul>
<span>Here is how to connect MindsDB to a GitLab repository:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_gitlab</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'gitlab'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;repository&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;gitlab-org/gitlab&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">,    </span><span style=""color: rgb(110,119,129);"">-- optional GitLab API key</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The <code>mindsdb_gitlab</code> connection contains two tables: <code>issues</code> and <code>merge_requests</code>.</span>
<span>Now, you can use this established connection to query this table as:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_gitlab</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">issues</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>You can run more advanced queries to fetch specific issues in a defined order:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> number</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, creator, assignee, title, created, labels </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_gitlab</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">issues</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;opened&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  ORDER BY</span><span style=""color: rgb(31,35,40);""> created </span><span style=""color: rgb(207,34,46);"">ASC</span><span style=""color: rgb(31,35,40);"">, creator </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>And the same goes for merge requests:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> number</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, creator, reviewers, title, created, has_conflicts</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_gitlab</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">merge_requests</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;merged&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  ORDER BY</span><span style=""color: rgb(31,35,40);""> created </span><span style=""color: rgb(207,34,46);"">ASC</span><span style=""color: rgb(31,35,40);"">, creator </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/gitlab_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1966117/GitLab+-+MindsDB","/pages/resumedraft.action?draftId=1966117","/x/JQAe"
"1966142","current","Apache Ignite - MindsDB","491527","491782","page","37650","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:14.907Z","2025-10-24T14:01:14.907Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Apache Ignite data handler for MindsDB.</span>
<span><a class=""link"" href=""https://ignite.apache.org/docs/latest/"">Apache Ignite</a> is a distributed database for high-performance computing with in-memory speed.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Ignite to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Ignite.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using the <code>pyignite</code> library, the Apache Ignite thin (binary protocol) client for Python.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the Apache Ignite cluster&rsquo;s node.</li>
<li><code>port</code> is the TCP/IP port of the Apache Ignite cluster&rsquo;s node. Must be an integer.</li>
</ul>
<span>There are several optional arguments that can be used as well,</span>
<ul>
<li><code>username</code> is the username used to authenticate with the Apache Ignite cluster. This parameter is optional. Default: None.</li>
<li><code>password</code> is the password to authenticate the user with the Apache Ignite cluster. This parameter is optional. Default: None.</li>
<li><code>schema</code> is the schema to use for the connection to the Apache Ignite cluster. This parameter is optional. Default: PUBLIC.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to an Apache Ignite database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> ignite_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'ignite'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">10800</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_schema&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> ignite_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Currently, a connection can be established only to a single node in the cluster. In the future, we&rsquo;ll configure the client to automatically fail over to another node if the connection to the current node fails or times out by providing the hosts and ports for many nodes as explained <a class=""link"" href=""https://ignite.apache.org/docs/latest/thin-clients/python-thin-client"">here</a>.</span></div></div></div>","/spaces/SOP/pages/1966142/Apache+Ignite+-+MindsDB","/pages/resumedraft.action?draftId=1966142","/x/PgAe"
"1966165","current","ElasticSearch - MindsDB","491527","491782","page","44886","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:41.611Z","2025-10-24T14:01:41.611Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.elastic.co/"">ElasticSearch</a>, a distributed, multitenant-capable full-text search engine with an HTTP web interface and schema-free JSON documents..
The integration allows MindsDB to access data from ElasticSearch and enhance ElasticSearch with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect ElasticSearch to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to ElasticSearch.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to ElasticSearch from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/elasticsearch_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> elasticsearch_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'elasticsearch'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   'cloud_id'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'xyz'</span><span style=""color: rgb(31,35,40);"">,                               </span><span style=""color: rgb(110,119,129);"">-- optional, if hosts are provided</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   'hosts'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'https://xyz.xyz.gcp.cloud.es.io:123'</span><span style=""color: rgb(31,35,40);"">,  </span><span style=""color: rgb(110,119,129);"">-- optional, if cloud_id is provided</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'xyz'</span><span style=""color: rgb(31,35,40);"">,                                </span><span style=""color: rgb(110,119,129);"">-- optional, if user and password are provided</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   'user'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'elastic'</span><span style=""color: rgb(31,35,40);"">,                               </span><span style=""color: rgb(110,119,129);"">-- optional, if api_key is provided</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   'password'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'xyz'</span><span style=""color: rgb(110,119,129);"">                                -- optional, if api_key is provided</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>The connection parameters include the following:</span>
<ul>
<li><code>cloud_id</code>: The Cloud ID provided with the ElasticSearch deployment. Required only when <code>hosts</code> is not provided.</li>
<li><code>hosts</code>: The ElasticSearch endpoint provided with the ElasticSearch deployment. Required only when <code>cloud_id</code> is not provided.</li>
<li><code>api_key</code>: The API key that you generated for the ElasticSearch deployment. Required only when <code>user</code> and <code>password</code> are not provided.</li>
<li><code>user</code> and <code>password</code>: The user and password used to authenticate. Required only when <code>api_key</code> is not provided.</li>
</ul>
<div><div><span>If you want to connect to the local instance of ElasticSearch, use the below statement:</span><span>Required connection parameters include the following (at least one of these parameters should be provided):</span><ul>
<li><code>hosts</code>: The IP address and port where ElasticSearch is deployed.</li>
<li><code>user</code>: The user used to autheticate access.</li>
<li><code>password</code>: The password used to autheticate access.</li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified index by providing the integration name and index name:</span>


<div><div><span>At the moment, the Elasticsearch SQL API has certain limitations that have an impact on the queries that can be issued via MindsDB. The most notable of these limitations are listed below:</span><ol>
<li>Only <code>SELECT</code> queries are supported at the moment.</li>
<li>Array fields are not supported.</li>
<li>Nested fields cannot be queried directly. However, they can be accessed using the <code>.</code> operator.</li>
</ol><span>For a detailed guide on the limitations of the Elasticsearch SQL API, refer to the <a class=""link"" href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-limitations.html"">official documentation</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Elasticsearch server.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Elasticsearch server is active.</li>
<li>Confirm that server, cloud ID and credentials are correct.</li>
<li>Ensure a stable network between MindsDB and Elasticsearch.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>Transport Error</code> or <code>Request Error</code></span><ul>
<li><strong>Symptoms</strong>: Errors related to the issuing of unsupported queries to Elasticsearch.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure the query is a <code>SELECT</code> query.</li>
<li>Avoid querying array fields.</li>
<li>Access nested fields using the <code>.</code> operator.</li>
<li>Refer to the <a class=""link"" href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-limitations.html"">official documentation</a> for more information if needed.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing index names containing special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<span>This <a class=""link"" href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/troubleshooting.html"">troubleshooting guide</a> provided by Elasticsearch might also be helpful.</span></div>","/spaces/SOP/pages/1966165/ElasticSearch+-+MindsDB","/pages/resumedraft.action?draftId=1966165","/x/VQAe"
"1966194","current","Upload Parquet files to MindsDB - MindsDB","491527","491782","page","67007","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:54.797Z","2025-10-24T14:02:54.797Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can upload Parquet files of any size to MindsDB that runs locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/contribute/install"">pip</a>.</span>
<span>Parquet files are stored in the form of a table inside MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#upload-files"">‚Äã</a></div><span class=""cursor-pointer"">Upload files</span></h2>
<span>Follow the steps below to upload a file:</span>
<ol>
<li>Click on the <code>Add</code> dropdown and choose <code>Upload file</code>.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""666"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=0a25773f735c4f147425651de94caca4"" style="""" width=""1042"" /></span></span></p>
<ol start=""2"">
<li>Upload a file and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""834"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_computer.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=bd588de4dd6fa52b36eec2761e3242b3"" style="""" width=""868"" /></span></span></p>
<ol start=""3"">
<li>Alternatively, upload a file as a link and provide a name used to access it within MindsDB.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""804"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/files/upload_file_from_url.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=3d2919867ba34c821c8a153a9ece4efe"" style="""" width=""886"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#query-files"">‚Äã</a></div><span class=""cursor-pointer"">Query files</span></h2>
<span>Here is how to query data within MindsDB.</span>
<span>Query for the content of the file uploaded under the name <code>my_file</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_file</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1966194/Upload+Parquet+files+to+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=1966194","/x/cgAe"
"1966211","current","Sample Database - MindsDB","491527","491782","page","68328","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:02.213Z","2025-10-24T14:03:02.213Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides a read-only PostgreSQL database pre-loaded with various datasets. These datasets are curated to cover a wide range of scenarios and use cases, allowing you to experiment with different features of MindsDB.</span>
<span>Our publicly accessible PostgreSQL database is designed for testing and playground purposes. By using these datasets, you can quickly get started with MindsDB, understand how it works, and see how it can be applied to real-world problems.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>To connect to our read-only PostgreSQL database and access the example datasets, use the following connection parameters:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">CREATE</span><span style=""color: rgb(5,80,174);""> DATABASE</span><span style=""color: rgb(31,35,40);""> postgresql_conn </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">WITH</span><span style=""color: rgb(5,80,174);""> ENGINE</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'postgres'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">PARAMETERS</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5432&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span><span style=""color: rgb(130,7,30);"">;</span></span>
</code></pre></div></div></div>
<span>Below is the list of all avaiable datasets as tables.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#data-tables"">‚Äã</a></div><span class=""cursor-pointer"">Data Tables</span></h2>
<span>Here are the tables converted into Markdown format:</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#fraud-detection-dataset"">‚Äã</a></div><span class=""cursor-pointer"">Fraud Detection Dataset</span></h3>
<span>This <code>fraud_detection</code> table contains data on mobile money transactions where each step represents an hour of simulation.</span>
<table><thead><tr><th>step</th><th>type</th><th>amount</th><th>nameOrig</th><th>oldbalanceOrg</th><th>newbalanceOrig</th><th>nameDest</th><th>oldbalanceDest</th><th>newbalanceDest</th><th>isFraud</th><th>isFlaggedFraud</th></tr></thead><tbody><tr><td>1</td><td>PAYMENT</td><td>9839.64</td><td>C1231006815</td><td>170136.0</td><td>160296.36</td><td>M1979787155</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td></tr><tr><td>1</td><td>PAYMENT</td><td>1864.28</td><td>C1666544295</td><td>21249.0</td><td>19384.72</td><td>M2044282225</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td></tr><tr><td>1</td><td>TRANSFER</td><td>181.0</td><td>C1305486145</td><td>181.0</td><td>0.0</td><td>C553264065</td><td>0.0</td><td>0.0</td><td>1</td><td>0</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://www.kaggle.com/datasets/ealaxi/paysim1"">this link</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#customer-churn-dataset"">‚Äã</a></div><span class=""cursor-pointer"">Customer Churn Dataset</span></h3>
<span>This <code>customer_churn</code> table contains data of a U.S. bank customer churn.</span>
<table><thead><tr><th>RowNumber</th><th>CustomerId</th><th>Surname</th><th>CreditScore</th><th>Geography</th><th>Gender</th><th>Age</th><th>Tenure</th><th>Balance</th><th>NumOfProducts</th><th>HasCrCard</th><th>IsActiveMember</th><th>EstimatedSalary</th><th>Exited</th></tr></thead><tbody><tr><td>1</td><td>15634602</td><td>Hargrave</td><td>619</td><td>France</td><td>Female</td><td>42</td><td>2</td><td>0</td><td>1</td><td>1</td><td>1</td><td>101348.88</td><td>1</td></tr><tr><td>2</td><td>15647311</td><td>Hill</td><td>608</td><td>Spain</td><td>Female</td><td>41</td><td>1</td><td>83807.86</td><td>1</td><td>0</td><td>1</td><td>112542.58</td><td>0</td></tr><tr><td>3</td><td>15619304</td><td>Onio</td><td>502</td><td>France</td><td>Female</td><td>42</td><td>8</td><td>159660.8</td><td>3</td><td>1</td><td>0</td><td>113931.57</td><td>1</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://www.kaggle.com/datasets/shantanudhakadd/bank-customer-churn-prediction"">this link</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#customer-support-chat-dataset"">‚Äã</a></div><span class=""cursor-pointer"">Customer Support Chat Dataset</span></h3>
<span>This <code>customer_support_chat</code> table contains data of chat with customer support, which can be used to train Large Language Models (LLMs) for Fine Tuning and Domain Adaptation.</span>
<table><thead><tr><th>flags</th><th>instruction</th><th>category</th><th>intent</th><th>response</th></tr></thead><tbody><tr><td>B</td><td>question about cancelling order Order Number</td><td>ORDER</td><td>cancel_order</td><td>I&rsquo;ve understood you have a question regarding canceling order Order Number, and I&rsquo;m here to provide you with the information you need. Please go ahead and ask your question, and I&rsquo;ll do my best to assist you.</td></tr><tr><td>BQZ</td><td>i have a question about cancelling order Order Number</td><td>ORDER</td><td>cancel_order</td><td>I&rsquo;ve been informed that you have a question about canceling order Order Number. I&rsquo;m here to assist you! Please go ahead and let me know what specific question you have, and I&rsquo;ll provide you with all the information and guidance you need. Your satisfaction is my top priority.</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://huggingface.co/datasets/bitext/Bitext-customer-support-llm-chatbot-training-dataset"">this link</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#bank-customer-transactions-dataset"">‚Äã</a></div><span class=""cursor-pointer"">Bank Customer Transactions Dataset</span></h3>
<span>This <code>bank_customer_transactions</code> table contains data of customer transactions with demographic and shopping behavior information.</span>
<table><thead><tr><th>Customer ID</th><th>Name</th><th>Surname</th><th>Gender</th><th>Birthdate</th><th>Transaction Amount</th><th>Date</th><th>Merchant Name</th><th>Category</th></tr></thead><tbody><tr><td>752858</td><td>Sean</td><td>Rodriguez</td><td>F</td><td>2002-10-20</td><td>35.47</td><td>2023-04-03</td><td>Smith-Russell</td><td>Cosmetic</td></tr><tr><td>26381</td><td>Michelle</td><td>Phelps</td><td></td><td>1985-10-24</td><td>2552.72</td><td>2023-07-17</td><td>Peck, Spence and Young</td><td>Travel</td></tr><tr><td>305449</td><td>Jacob</td><td>Williams</td><td>M</td><td>1981-10-25</td><td>115.97</td><td>2023-09-20</td><td>Steele Inc</td><td>Clothing</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://www.kaggle.com/datasets/bkcoban/customer-transactions"">this link</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#telecom-customer-churn-dataset"">‚Äã</a></div><span class=""cursor-pointer"">Telecom Customer Churn Dataset</span></h3>
<span>This <code>telecom_customer_churn</code> table contains data on customer activities, preferences, and behaviors.</span>
<table><thead><tr><th>age</th><th>gender</th><th>security_no</th><th>region_category</th><th>membership_category</th><th>joining_date</th><th>joined_through_referral</th><th>referral_id</th><th>preferred_offer_types</th><th>medium_of_operation</th><th>internet_option</th><th>last_visit_time</th><th>days_since_last_login</th><th>avg_time_spent</th><th>avg_transaction_value</th><th>avg_frequency_login_days</th><th>points_in_wallet</th><th>used_special_discount</th><th>offer_application_preference</th><th>past_complaint</th><th>complaint_status</th><th>feedback</th><th>churn_risk_score</th></tr></thead><tbody><tr><td>18</td><td>F</td><td>XW0DQ7H</td><td>Village</td><td>Platinum Membership</td><td>17-08-2017</td><td>No</td><td>xxxxxxxx</td><td>Gift Vouchers/Coupons</td><td>?</td><td>Wi-Fi</td><td>16:08:02</td><td>17</td><td>300.63</td><td>53005.25</td><td>17</td><td>781.75</td><td>Yes</td><td>Yes</td><td>No</td><td>Not Applicable</td><td>Products always in Stock</td><td>0</td></tr><tr><td>32</td><td>F</td><td>5K0N3X1</td><td>City</td><td>Premium Membership</td><td>28-08-2017</td><td>?</td><td>CID21329</td><td>Gift Vouchers/Coupons</td><td>Desktop</td><td>Mobile_Data</td><td>12:38:13</td><td>16</td><td>306.34</td><td>12838.38</td><td>10</td><td></td><td>Yes</td><td>No</td><td>Yes</td><td>Solved</td><td>Quality Customer Care</td><td>0</td></tr><tr><td>44</td><td>F</td><td>1F2TCL3</td><td>Town</td><td>No Membership</td><td>11-11-2016</td><td>Yes</td><td>CID12313</td><td>Gift Vouchers/Coupons</td><td>Desktop</td><td>Wi-Fi</td><td>22:53:21</td><td>14</td><td>516.16</td><td>21027</td><td>22</td><td>500.69</td><td>No</td><td>Yes</td><td>Yes</td><td>Solved in Follow-up</td><td>Poor Website</td><td>1</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://huggingface.co/datasets/d0r1h/customer_churn"">this link</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#house-sales-dataset"">‚Äã</a></div><span class=""cursor-pointer"">House Sales Dataset</span></h3>
<span>This <code>house_sales</code> table contains data on houses sold throughout the years.</span>
<table><thead><tr><th>saledate</th><th>ma</th><th>type</th><th>bedrooms</th><th>created_at</th></tr></thead><tbody><tr><td>2007-09-30</td><td>441854</td><td>house</td><td>2</td><td>2007-02-02 15:41:51.922127</td></tr><tr><td>2007-12-31</td><td>441854</td><td>house</td><td>2</td><td>2007-02-23 22:36:08.540248</td></tr><tr><td>2008-03-31</td><td>441854</td><td>house</td><td>2</td><td>2007-02-25 19:23:52.585358</td></tr></tbody></table>
<span>To learn more about this dataset, please visit <a class=""link"" href=""https://www.kaggle.com/datasets/"">this link</a>.</span></div>","/spaces/SOP/pages/1966211/Sample+Database+-+MindsDB","/pages/resumedraft.action?draftId=1966211","/x/gwAe"
"1966250","current","Create Knowledge Base - MindsDB","491527","491782","page","110251","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:10.925Z","2025-10-24T14:07:10.925Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> POST</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/knowledge_bases</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  -H</span><span style=""color: rgb(10,48,105);""> &quot;Content-Type: application/json&quot;</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  -d</span><span style=""color: rgb(10,48,105);""> '{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;knowledge_base&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;name&quot;: &quot;my_kb&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;storage&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;: &quot;my_kb_chromadb&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;table&quot;: &quot;default_collection&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;embedding_model&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;: &quot;openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;: &quot;text-embedding-3-small&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;: &quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;reranking_model&quot;: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;: &quot;openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;: &quot;gpt-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;: &quot;sk-xxx&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      },</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;content_columns&quot;: [&quot;notes&quot;],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;metadata_columns&quot;: [&quot;product&quot;],</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;id_column&quot;: &quot;order_id&quot;</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    }</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  }'</span></span>

</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/1966250/Create+Knowledge+Base+-+MindsDB","/pages/resumedraft.action?draftId=1966250","/x/qgAe"
"1998849","current","MindsDB Installation for Development - MindsDB","491527","491782","page","4312","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:52:59.945Z","2025-10-24T13:52:59.945Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>If you want to contribute to the development of MindsDB, you need to install from source.</span>
<div><div><span>If you do not want to contribute to the development of MindsDB but simply install and use it, then <a class=""link"" href=""/setup/self-hosted/docker"">install MindsDB via Docker</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-mindsdb-for-development"">‚Äã</a></div><span class=""cursor-pointer"">Install MindsDB for Development</span></h2>
<span>Here are the steps to install MindsDB from source. You can either
follow the steps below or visit the provided link.</span>
<div><div><span>Before installing MindsDB from source, ensure that you use one of the following Python versions: <code>3.10.x</code>, <code>3.11.x</code>, <code>3.12.x</code>, <code>3.13.x</code>.</span></div></div>
<ol>
<li>
<span>Fork the <a class=""link"" href=""https://github.com/mindsdb/mindsdb"">MindsDB repository from GitHub</a>.</span>
</li>
<li>
<span>Clone the fork locally:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">git</span><span style=""color: rgb(10,48,105);""> clone</span><span style=""color: rgb(10,48,105);""> https://github.com/</span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(10,48,105);"">usernam</span><span style=""color: rgb(31,35,40);"">e</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(10,48,105);"">/mindsdb.git</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Create a virtual environment:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> venv</span><span style=""color: rgb(10,48,105);""> mindsdb-venv</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Activate the virtual environment:</span>
<span>Windows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">.</span><span style=""color: rgb(31,35,40);"">\</span><span style=""color: rgb(10,48,105);"">mindsdb-venv</span><span style=""color: rgb(31,35,40);"">\</span><span style=""color: rgb(10,48,105);"">Scripts</span><span style=""color: rgb(31,35,40);"">\</span><span style=""color: rgb(10,48,105);"">activate</span></span>
</code></pre></div></div></div>
<span>macOS/Linux:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">source</span><span style=""color: rgb(10,48,105);""> mindsdb-venv/bin/activate</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Install MindsDB with its local development dependencies:</span>
<span>Install dependencies:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">cd</span><span style=""color: rgb(10,48,105);""> mindsdb</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> .</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">pip</span><span style=""color: rgb(10,48,105);""> install</span><span style=""color: rgb(5,80,174);""> -r</span><span style=""color: rgb(10,48,105);""> requirements/requirements-dev.txt</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Start MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span></span>
</code></pre></div></div></div>
<div><div><span>By default, MindsDB starts the <code>http</code> and <code>mysql</code> APIs. You can define which APIs to start using the <code>api</code> flag as below.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(5,80,174);""> --api</span><span style=""color: rgb(10,48,105);""> http,mysql</span></span>
</code></pre></div></div></div><span>If you want to start MindsDB without the graphical user interface (GUI), use the <code>--no_studio</code> flag as below.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">python</span><span style=""color: rgb(5,80,174);""> -m</span><span style=""color: rgb(10,48,105);""> mindsdb</span><span style=""color: rgb(5,80,174);""> --no_studio</span></span>
</code></pre></div></div></div></div></div>
</li>
</ol>
<div><div><span>Alternatively, you can use a makefile to install dependencies and start MindsDB:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);""> make</span><span style=""color: rgb(10,48,105);""> install_mindsdb</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);""> make</span><span style=""color: rgb(10,48,105);""> run_mindsdb</span></span>
</code></pre></div></div></div></div></div>
<span>Now you should see the following message in the console:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>...</span></span>

<span class=""line""><span>mindsdb.api.http.initialize:  - GUI available at http://127.0.0.1:47334/</span></span>
<span class=""line""><span>mindsdb.api.mysql.mysql_proxy.mysql_proxy: Starting MindsDB Mysql proxy server on tcp://127.0.0.1:47335</span></span>
<span class=""line""><span>mindsdb.api.mysql.mysql_proxy.mysql_proxy: Waiting for incoming connections...</span></span>
<span class=""line""><span>mindsdb: mysql API: started on 47335</span></span>
<span class=""line""><span>mindsdb: http API: started on 47334</span></span>
</code></pre></div></div></div>
<span>You can access the MindsDB Editor at <code>localhost:47334</code>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#install-dependencies"">‚Äã</a></div><span class=""cursor-pointer"">Install dependencies</span></h2>
<span>The dependencies for many of the data or ML integrations are not installed by default.</span>
<span>If you want to use a data or AI/ML integration whose dependencies are not available by default, install it by running this command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>pip install .[handler_name]</span></span>
</code></pre></div></div></div>
<div><div><span>You can find all available <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers"">handlers here</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you installed and started MindsDB locally, go ahead and find out how to create and train a model using the <a class=""link"" href=""/sql/create/model""><code>CREATE MODEL</code></a> statement.</span>
<span>Check out the <a class=""link"" href=""/use-cases/overview"">Use Cases</a> section to follow tutorials that cover Large Language Models, Chatbots, Time Series, Classification, and Regression models, Semantic Search, and more.</span></div>","/spaces/SOP/pages/1998849/MindsDB+Installation+for+Development+-+MindsDB","/pages/resumedraft.action?draftId=1998849","/x/AYAe"
"1998872","current","Unify - MindsDB","491527","491782","page","5971","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:12.507Z","2025-10-24T13:53:12.507Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enables unifying data from structured and unstructured data sources into a single, queryable interface. This unified view allows seamless querying and model-building across all data without consolidation into one system.</span>
<ul>
<li>
<span><strong>Federated query engine</strong> <br />
Query across multiple data sources as if they were a single database.</span>
</li>
<li>
<span><strong>Structured and unstructured data support</strong> <br />
Unify relational data, documents, vector data, and more in one place.</span>
</li>
<li>
<span><strong>No data transformation required</strong> <br />
Use data in its native format without the need for preprocessing.</span>
</li>
</ul>
<span>This documentation includes the following content.</span>
<div><a href=""/mindsdb_sql/knowledge_bases/overview""><div class=""px-6 py-5 relative""><div><h2>Knowledge Bases</h2><div>Index and organize unstructured data for efficient retrieval.</div></div></div></a><a href=""/mindsdb_sql/sql/create/view""><div class=""px-6 py-5 relative""><div><h2>Views</h2><div>Simplify data access by creating unified views across different sources.</div></div></div></a><a href=""/mindsdb_sql/sql/create/project""><div class=""px-6 py-5 relative""><div><h2>Projects</h2><div>Organize views, knowledge bases, and models into projects.</div></div></div></a><a href=""/mindsdb_sql/functions/custom_functions""><div class=""px-6 py-5 relative""><div><h2>Functions</h2><div>Operate on data using functions.</div></div></div></a><a href=""/mindsdb_sql/sql/create/jobs""><div class=""px-6 py-5 relative""><div><h2>Jobs</h2><div>Schedule tasks with jobs.</div></div></div></a><a href=""/mindsdb_sql/sql/create/trigger""><div class=""px-6 py-5 relative""><div><h2>Triggers</h2><div>Set up triggering events on data.</div></div></div></a></div></div>","/spaces/SOP/pages/1998872/Unify+-+MindsDB","/pages/resumedraft.action?draftId=1998872","/x/GIAe"
"1998885","current","GitHub - MindsDB","491527","491782","page","20201","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:07.222Z","2025-10-24T14:00:07.222Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect GitHub repository to MindsDB.</span>
<span><a class=""link"" href=""https://github.com/"">GitHub</a> is a web-based platform and service that is primarily used for version control and collaborative software development. It provides a platform for developers and teams to host, review, and manage source code for software projects.</span>
<span>Data from GitHub, including issues and PRs, can be utilized within MindsDB to make relevant predictions or automate the issue/PR creation.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect GitHub to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to GitHub.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <code>pygithub</code> library, a Python library that wraps GitHub API v3.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>repository</code> is the GitHub repository name.</li>
<li><code>api_key</code> is an optional GitHub API key to use for authentication.</li>
<li><code>github_url</code> is an optional GitHub URL to connect to a GitHub Enterprise instance.</li>
</ul>
<div><div><span>Check out <a class=""link"" href=""https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens"">this guide</a> on how to create the GitHub API key.</span><span>It is recommended to use the API key to avoid the <code>API rate limit exceeded</code> error.</span></div></div>
<span>Here is how to connect the MindsDB GitHub repository:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_github</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'github'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;repository&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mindsdb/mindsdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The <code>mindsdb_github</code> connection contains two tables: <code>issues</code> and <code>pull_requests</code>.</span>
<span>Here is how to query for all issues:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_github</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">issues</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>You can run more advanced queries to fetch specific issues in a defined order:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> number</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, creator, assignees, title, labels</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_github</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">issues</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'open'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>And the same goes for pull requests:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> number</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, title, creator, head, commits</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb_github</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">pull_requests</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'open'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/github_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/1998885/GitHub+-+MindsDB","/pages/resumedraft.action?draftId=1998885","/x/JYAe"
"1998910","current","Firebird - MindsDB","491527","491782","page","45544","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:43.294Z","2025-10-24T14:01:43.294Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Firebird data handler for MindsDB.</span>
<span><a class=""link"" href=""https://firebirdsql.org/en/about-firebird/"">Firebird</a> is a relational database offering many ANSI SQL standard features that runs on Linux, Windows, and a variety of Unix platforms. Firebird offers excellent concurrency, high performance, and powerful language support for stored procedures and triggers. It has been used in production systems, under a variety of names, since 1981.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Firebird to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Firebird.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using the <code>fdb</code> library, the Python driver for Firebird.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code> is the host name or IP address of the Firebird server.</li>
<li><code>database</code> is the port to use when connecting with the Firebird server.</li>
<li><code>user</code> is the username to authenticate the user with the Firebird server.</li>
<li><code>password</code> is the password to authenticate the user with the Firebird server.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Firebird server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> firebird_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'firebird'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;C:\Users\minura\Documents\mindsdb\example.fdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sysdba&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> firebird_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_tbl</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1998910/Firebird+-+MindsDB","/pages/resumedraft.action?draftId=1998910","/x/PoAe"
"1998931","current","Vitess - MindsDB","491527","491782","page","64510","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:44.564Z","2025-10-24T14:02:44.564Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Vitess data handler for MindsDB.</span>
<span><a class=""link"" href=""https://vitess.io/"">Vitess</a> is a database solution for deploying, scaling, and managing large clusters of open-source database instances. It currently supports MySQL and Percona Server for MySQL. It&rsquo;s architected to run as effectively in a public or private cloud architecture as it does on dedicated hardware. It combines and extends many important SQL features with the scalability of a NoSQL database.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Vitess to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Vitess.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Vitess server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> vitess_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;vitess&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> { </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;localhost&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">33577</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;commerce&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> vitess_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">product</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1998931/Vitess+-+MindsDB","/pages/resumedraft.action?draftId=1998931","/x/U4Ae"
"1998952","current","Insert Into a Table - MindsDB","491527","491782","page","86987","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:40.918Z","2025-10-24T14:10:37.359Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>insert()</code> function is executed on a table from a data source connected to MindsDB. It inserts data into a table.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">my_table</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">insert</span><span style=""color: rgb(31,35,40);"">(table_to_be_inserted)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1998952/Insert+Into+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=1998952","/x/aIAe"
"1998972","current","Upload a File - MindsDB","491527","491782","page","90386","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:04.652Z","2025-10-24T14:11:47.278Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>In MindsDB, files are treated as tables. These are stored in the default <code>files</code> database. To upload a file, you must save this <code>files</code> database into a variable and then, run the <code>create_table()</code> function on it.</span>
<div><div><span>Note that the trailing whitespaces on column names are erased upon uploading a file to MindsDB.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>files_db = server.get_database('files')</span></span>
<span class=""line""><span>files_db.create_table('file_name', data_frame)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/1998972/Upload+a+File+-+MindsDB","/pages/resumedraft.action?draftId=1998972","/x/fIAe"
"1998989","current","Create a Trigger - MindsDB","491527","491782","page","92758","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:15.175Z","2025-10-24T14:05:15.175Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>Triggers enable users to define event-based actions. For example, if a table is updated, then run a query to update predictions.</span>
<div><div><span>Currently, you can create triggers on the following data sources:</span><ul>
<li><a class=""link"" href=""/integrations/data-integrations/mongodb"">MongoDB</a> (available for MongoDB Atlas Database),</li>
<li><a class=""link"" href=""/integrations/app-integrations/slack"">Slack</a>,</li>
<li><a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/solace_handler"">Solace</a>,</li>
<li><a class=""link"" href=""/integrations/data-integrations/postgresql"">PostgreSQL</a> (requires write access).</li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax for creating a trigger:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TRIGGER</span><span style=""color: rgb(130,80,223);""> trigger_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> integration_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">[COLUMNS column_name1, column_name2, ...]</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    sql_code</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">) </span></span>
</code></pre></div></div></div>
<span>By creating a trigger on a data source, every time this data source is updated or new data is inserted, the <code>sql_code</code> provided in the statement will be executed.</span>
<span>You can create a trigger either on a table&hellip;</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TRIGGER</span><span style=""color: rgb(130,80,223);""> trigger_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> integration_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    sql_code</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">) </span></span>
</code></pre></div></div></div>
<span>&hellip;or on one or more columns of a table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TRIGGER</span><span style=""color: rgb(130,80,223);""> trigger_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> integration_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">COLUMNS column_name1, column_name2</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    sql_code</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">) </span></span>
</code></pre></div></div></div>
<span>Here is how to list all triggers:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW TRIGGERS;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>Firstly, connect Slack to MindsDB following <a class=""link"" href=""/integrations/app-integrations/slack#set-up-a-slack-app-and-generate-tokens"">this instruction</a> and connect the Slack app to a channel.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mindsdb_slack</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'slack'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xoxb-...&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;app_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xapp-...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Create a model that will be used to answer chat questions every time new messages arrive. Here we use the <a class=""link"" href=""/integrations/ai-engines/openai"">OpenAI engine</a>, but you can use any <a class=""link"" href=""/integrations/ai-overview#large-language-models"">other LLM</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL chatbot_model</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT answer</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'openai_engine'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    prompt_template </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'answer the question: {{text}}'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is how to generate answers to Slack messages using the model:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">text</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> question, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">answer</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> chatbot_model m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> mindsdb_slack</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span><span style=""color: rgb(31,35,40);""> s</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">channel_id</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'slack-bot-channel-id'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">user</span><span style=""color: rgb(207,34,46);""> !=</span><span style=""color: rgb(10,48,105);""> 'U07J30KPAUF'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">created_at</span><span style=""color: rgb(207,34,46);""> &gt;</span><span style=""color: rgb(207,34,46);""> LAST</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Let&rsquo;s analyze this query:</span>
<ul>
<li>We select the question from the Slack connection and the answer generated by the model.</li>
<li>We join the model with the <code>messages</code> table.</li>
<li>In the <code>WHERE</code> clause:
<ul>
<li>We provide the channel name where the app/bot is integrated.</li>
<li>We exclude the messages sent by the app/bot. You can find the user ID of the app/bot by querying the <code>mindsdb_slack.users</code> table.</li>
<li>We use the <code>LAST</code> keyword to ensure that the model generates answers only to the newly sent messages.</li>
</ul>
</li>
</ul>
<span>Finally, create a trigger that will insert an answer generated by the model every time when new messages are sent to the channel.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TRIGGER</span><span style=""color: rgb(130,80,223);""> slack_trigger</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ON</span><span style=""color: rgb(5,80,174);""> mindsdb_slack</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    INSERT INTO</span><span style=""color: rgb(5,80,174);""> mindsdb_slack</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span><span style=""color: rgb(31,35,40);""> (channel_id, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        SELECT</span><span style=""color: rgb(10,48,105);""> 'slack-bot-channel-id'</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> channel_id, answer </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> text</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        FROM</span><span style=""color: rgb(31,35,40);""> chatbot_model m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        JOIN</span><span style=""color: rgb(31,35,40);""> TABLE_DELTA s</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        WHERE</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">user</span><span style=""color: rgb(207,34,46);""> !=</span><span style=""color: rgb(10,48,105);""> 'slack-bot-id'</span><span style=""color: rgb(31,35,40);""> # this </span><span style=""color: rgb(207,34,46);"">is</span><span style=""color: rgb(207,34,46);""> to</span><span style=""color: rgb(31,35,40);""> prevent the bot </span><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> replying </span><span style=""color: rgb(207,34,46);"">to</span><span style=""color: rgb(31,35,40);""> its own messages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">        AND</span><span style=""color: rgb(5,80,174);""> s</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">channel_id</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'slack-bot-channel-id'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Let&rsquo;s analyze this statement:</span>
<ul>
<li>We create a trigger named <code>slack_trigger</code>.</li>
<li>The trigger is created on the <code>mindsdb_slack.messages</code> table. Therefore, every time when data is added or updated, the trigger will execute its code.</li>
<li>We provide the code to be executed by the trigger every time the triggering event takes place.
<ul>
<li>We insert an answer generated by the model into the <code>messages</code> table.</li>
<li>The <code>TABLE_DELTA</code> stands for the table on which the trigger has been created.</li>
<li>We exclude the messages sent by the app/bot. You can find the user ID of the app/bot by querying the <code>mindsdb_slack.users</code> table.</li>
</ul>
</li>
</ul></div>","/spaces/SOP/pages/1998989/Create+a+Trigger+-+MindsDB","/pages/resumedraft.action?draftId=1998989","/x/jYAe"
"1999015","current","List Files - MindsDB","491527","491782","page","108189","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:51.766Z","2025-10-24T14:06:51.766Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>List all files uploaded to MindsDB.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/files</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1999015/List+Files+-+MindsDB","/pages/resumedraft.action?draftId=1999015","/x/p4Ae"
"1999034","current","Get a View - MindsDB","491527","491782","page","113681","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:08:05.531Z","2025-10-24T14:08:05.531Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>SELECT from VIEW</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/{projectName}/views/{viewName}</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/1999034/Get+a+View+-+MindsDB","/pages/resumedraft.action?draftId=1999034","/x/uoAe"
"2031617","current","Benefits of MindsDB - MindsDB","491527","491782","page","4365","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:01.567Z","2025-10-24T13:53:01.567Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB facilitates development of AI-powered apps by bridging the gap between data and AI. Thanks to its numerous integrations with data sources (including databases, vector stores, and applications) and AI frameworks (including LLMs and AutoML), you can mix and match between the available integrations to create custom AI workflows with MindsDB.</span>
<span>Here are some prominent benefits of using MindsDB:</span>
<ol>
<li>
<span><strong>Unified AI Deployment and Management</strong><br />
MindsDB integrates directly with the database, warehouse, or stream. This eliminates the need to build and maintain custom, complex data pipelines or separate systems for AI/ML deployment.</span>
</li>
<li>
<span><strong>Automated AI Workflows</strong><br />
MindsDB automates the entire AI workflow to execute on time-based or event-based triggers. No need to build custom automation logic to get predictions, move data, or (re)train models.</span>
</li>
<li>
<span><strong>Turn every developer into an AI Engineer</strong><br />
MindsDB enables developers to leverage their existing SQL skills, accelerating the adoption of AI across teams and departments, turning every developer into an AI Engineer.</span>
</li>
<li>
<span><strong>Enhanced Scalability and Performance</strong><br />
Whether in your private cloud or using MindsDB&rsquo;s managed service, MindsDB enables you to handle large-scale AI/ML workloads efficiently. MindsDB can scale to meet the demands of your use case, ensuring optimal performance and responsiveness.</span>
</li>
</ol></div>","/spaces/SOP/pages/2031617/Benefits+of+MindsDB+-+MindsDB","/pages/resumedraft.action?draftId=2031617","/x/AQAf"
"2031636","current","Build an Application Handler - MindsDB","491527","491782","page","10853","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:15.600Z","2025-10-24T13:59:15.600Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, you&rsquo;ll find how to add new application integrations to MindsDB.</span>
<div><div><span><strong>Prerequisite</strong></span><span>You should have the latest version of the MindsDB repository installed locally. Follow <a class=""link"" href=""/contribute/install"">this guide</a> to learn how to install MindsDB for development.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what-are-api-handlers%3F"">‚Äã</a></div><span class=""cursor-pointer"">What are API Handlers?</span></h2>
<span>Application handlers act as a bridge between MindsDB and any application that provides APIs. You use application handlers to create databases using the <a class=""link"" href=""/sql/create/databases""><code>CREATE DATABASE</code></a> statement. So you can reach data from any application that has its handler implemented within MindsDB.</span>
<div><div><span><strong>Database Handlers</strong></span><span>To learn more about handlers and how to implement a database handler, visit our <a class=""link"" href=""/contribute/data-handlers"">doc page here</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-an-application-handler"">‚Äã</a></div><span class=""cursor-pointer"">Creating an Application Handler</span></h2>
<span>You can create your own application handler within MindsDB by inheriting from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L150""><code>APIHandler</code></a> class.</span>
<span>By providing the implementation for some or all of the methods contained in the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L150""><code>APIHandler</code></a> class, you can interact with the application APIs.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#core-methods"">‚Äã</a></div><span class=""cursor-pointer"">Core Methods</span></h3>
<span>Apart from the <code>__init__()</code> method, there are five core methods that must be implemented. We recommend checking actual examples in the codebase to get an idea of what goes into each of these methods, as they can change a bit depending on the nature of the system being integrated.</span>
<span>Let&rsquo;s review the purpose of each method.</span>
<table><thead><tr><th>Method</th><th>Purpose</th></tr></thead><tbody><tr><td><a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L164""><code>_register_table()</code></a></td><td>It registers the data resource in memory. For example, if you are using Twitter API it registers the <code>tweets</code> resource from <code>/api/v2/tweets</code>.</td></tr><tr><td><a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L23""><code>connect()</code></a></td><td>It performs the necessary steps to connect/authenticate to the underlying system.</td></tr><tr><td><a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L39""><code>check_connection()</code></a></td><td>It evaluates if the connection is alive and healthy.</td></tr><tr><td><a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L47""><code>native_query()</code></a></td><td>It parses any <em>native</em> statement string and acts upon it (for example, raw syntax commands).</td></tr><tr><td><code>call_application_api()</code></td><td>It calls the application API and maps the data to pandas DataFrame. This method handles the pagination and data mapping.</td></tr></tbody></table>
<span>Authors can opt for adding private methods, new files and folders, or any combination of these to structure all the necessary work that will enable the core methods to work as intended.</span>
<div><div><span><strong>Other Common Methods</strong></span><span>Under the  <a class=""link"" href=""main/mindsdb/integrations/utilities""><code>mindsdb.integrations.utilities</code></a> library, contributors can find various methods that may be useful while implementing new handlers.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#api-table"">‚Äã</a></div><span class=""cursor-pointer"">API Table</span></h3>
<span>Once the data returned from the API call is registered using the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L164""><code>_register_table()</code></a> method, you can use it to map to the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L93""><code>APITable</code></a> class.
The <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L93""><code>APITable</code></a> class provides CRUD methods.</span>
<table><thead><tr><th>Method</th><th>Purpose</th><th /></tr></thead><tbody><tr><td><code>select()</code></td><td>It implements the mappings from the ast.Select and calls the actual API through the <code>call_application_api</code>.</td><td></td></tr><tr><td><code>insert()</code></td><td>It implements the mappings from the ast.Insert and calls the actual API through the <code>call_application_api</code>.</td><td></td></tr><tr><td><code>update()</code></td><td>It implements the mappings from the ast.Update and calls the actual API through the <code>call_application_api</code>.</td><td></td></tr><tr><td><code>delete()</code></td><td>It implements the mappings from the ast.Delete and calls the actual API through the <code>call_application_api</code>.</td><td></td></tr><tr><td><code>add()</code></td><td>Adds new rows to the data dictionary.</td><td></td></tr><tr><td><code>list()</code></td><td>List data based on certain conditions by providing FilterCondition, limits, sorting and target fields.</td><td></td></tr><tr><td><code>get_columns()</code></td><td>It maps the data columns returned by the API.</td><td></td></tr></tbody></table>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h3>
<span>Each application handler should inherit from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L150""><code>APIHandler</code></a> class.</span>
<span>Here is a step-by-step guide:</span>
<ul>
<li>
<span>Implementing the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/api_handler.py#L155""><code>__init__()</code></a> method:</span>
<span>This method initializes the handler.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(5,80,174);""> __init__</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">name</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">str</span><span style=""color: rgb(31,35,40);"">):</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    super</span><span style=""color: rgb(31,35,40);"">().</span><span style=""color: rgb(5,80,174);"">__init__</span><span style=""color: rgb(31,35,40);"">(name)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; constructor</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        name (str): the handler name</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">    self</span><span style=""color: rgb(31,35,40);"">._tables </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {}</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L23""><code>connect()</code></a> method:</span>
<span>The <code>connect()</code> method sets up the connection.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> connect</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerStatusResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Set up any connections required by the handler</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Should return output of check_connection() method after attempting</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    connection. Should switch self.is_connected.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerStatusResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L39""><code>check_connection()</code></a> method:</span>
<span>The <code>check_connection()</code> method performs the health check for the connection.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> check_connection</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">) -&gt; HandlerStatusResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot; Check connection to the handler</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerStatusResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/libs/base.py#L47""><code>native_query()</code></a> method:</span>
<span>The <code>native_query()</code> method runs commands of the native API syntax.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> native_query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">query</span><span style=""color: rgb(31,35,40);"">: Any) -&gt; HandlerResponse:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;Receive raw query and act upon it somehow.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        query (Any): query in native format (str for sql databases,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            api's json etc)</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        HandlerResponse</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Implementing the <code>call_application_api()</code> method:</span>
<span>This method makes the API calls. It is <strong>not mandatory</strong> to implement this method, but it can help make the code more reliable and readable.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> call_application_api</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">self</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">method_name</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">str</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> None</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">params</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">dict</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> None</span><span style=""color: rgb(31,35,40);"">) -&gt; DataFrame:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;Receive query as AST (abstract syntax tree) and act upon it somehow.</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Args:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        query (ASTNode): sql query represented as AST. Can be any kind</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">            of query: SELECT, INSERT, DELETE, etc</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    Returns:</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        DataFrame</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;&quot;&quot;</span></span>
</code></pre></div></div></div>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exporting-the-connection-args-dictionary"">‚Äã</a></div><span class=""cursor-pointer"">Exporting the <code>connection_args</code> Dictionary</span></h3>
<span>The <code>connection_args</code> dictionary contains all of the arguments used to establish the connection along with their descriptions, types, labels, and whether they are required or not.</span>
<span>The <code>connection_args</code> dictionary should be stored in the <code>connection_args.py</code> file inside the handler folder.</span>
<div><div><span>The <code>connection_args</code> dictionary is stored in a separate file in order to be able to hide sensitive information such as passwords or API keys.</span><span>By default, when querying for <code>connection_data</code> from the <code>information_schema.databases</code> table, all sensitive information is hidden. To unhide it, use this command:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">set</span><span style=""color: rgb(31,35,40);""> show_secrets</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">true;</span></span>
</code></pre></div></div></div></div></div>
<span>Here is an example of the <code>connection_args.py</code> file from the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/github_handler"">GitHub handler</a> where the API key value is set to hidden with <code>&quot;secret&quot;: True</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> collections </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> OrderedDict</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> mindsdb.integrations.libs.const </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> HANDLER_CONNECTION_ARG_TYPE</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(5,80,174);""> ARG_TYPE</span></span>


<span class=""line""><span style=""color: rgb(31,35,40);"">connection_args </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> OrderedDict(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    repository</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;description&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot; GitHub repository name.&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;required&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;label&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Repository&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    api_key</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">PWD</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;description&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Optional GitHub API key to use for authentication.&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;required&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;label&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Api key&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">True</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    github_url</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;type&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">ARG_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">STR</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;description&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Optional GitHub URL to connect to a GitHub Enterprise instance.&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;required&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;label&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;Github url&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">connection_args_example </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> OrderedDict(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    repository</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;mindsdb/mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    api_key</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;ghp_xxx&quot;</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    github_url</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;https://github.com/mindsdb/mindsdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#exporting-all-required-variables"">‚Äã</a></div><span class=""cursor-pointer"">Exporting All Required Variables</span></h3>
<span>The following should be exported in the <code>__init__.py</code> file of the handler:</span>
<ul>
<li>The <code>Handler</code> class.</li>
<li>The <code>version</code> of the handler.</li>
<li>The <code>name</code> of the handler.</li>
<li>The <code>type</code> of the handler, either <code>DATA</code> handler or <code>ML</code> handler.</li>
<li>The <code>icon_path</code> to the file with the database icon.</li>
<li>The <code>title</code> of the handler or a short description.</li>
<li>The <code>description</code> of the handler.</li>
<li>The <code>connection_args</code> dictionary with the connection arguments.</li>
<li>The <code>connection_args_example</code> dictionary with an example of the connection arguments.</li>
<li>The <code>import_error</code> message that is used if the import of the <code>Handler</code> class fails.</li>
</ul>
<span>A few of these variables are defined in another file called <code>__about__.py</code>. This file is imported into the <code>__init__.py</code> file.</span>
<span>Here is an example of the <code>__init__.py</code> file for the <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/github_handler"">GitHub handler</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> mindsdb.integrations.libs.const </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> HANDLER_TYPE</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> .__about__ </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(5,80,174);""> __version__</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> version, __description__ </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> description</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">from</span><span style=""color: rgb(31,35,40);""> .connection_args </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> connection_args, connection_args_example</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">try</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    from</span><span style=""color: rgb(31,35,40);""> .github_handler </span><span style=""color: rgb(207,34,46);"">import</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        GithubHandler </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> Handler,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        connection_args_example,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">        connection_args,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    )</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">    import_error </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> None</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">except</span><span style=""color: rgb(5,80,174);""> Exception</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> e:</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    Handler </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> None</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    import_error </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> e</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">title </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;GitHub&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">name </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;github&quot;</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(5,80,174);""> HANDLER_TYPE</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">DATA</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">icon_path </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;icon.svg&quot;</span></span>

<span class=""line""><span style=""color: rgb(5,80,174);"">__all__</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> [</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;Handler&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;version&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;name&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;type&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;title&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;description&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;import_error&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;icon_path&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;connection_args_example&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;connection_args&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">]</span></span>
</code></pre></div></div></div>
<span>The <code>__about__.py</code> file for the same <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/github_handler"">GitHub handler</a> contains the following variables:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">__title__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;MindsDB GitHub handler&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__package_name__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;mindsdb_github_handler&quot;</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">__version__</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;0.0.1&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__description__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;MindsDB handler for GitHub&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__author__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;Artem Veremey&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__github__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;https://github.com/mindsdb/mindsdb&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__pypi__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;https://pypi.org/project/mindsdb/&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__license__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;MIT&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">__copyright__ </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;Copyright 2023 - mindsdb&quot;</span></span>

</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#check-out-our-application-handlers"">‚Äã</a></div><span class=""cursor-pointer"">Check out our Application Handlers!</span></h2>
<span>To see some integration handlers that are currently in use, we encourage you to check out the following handlers inside the MindsDB repository:</span>
<ul>
<li><a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/github_handler"">GitHub handler</a></li>
<li><a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/twitter_handler"">TwitterHandler</a></li>
</ul>
<span>And here are <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers"">all the handlers available in the MindsDB repository</a>.</span></div>","/spaces/SOP/pages/2031636/Build+an+Application+Handler+-+MindsDB","/pages/resumedraft.action?draftId=2031636","/x/FAAf"
"2031675","current","Missing required CPU features - MindsDB","491527","491782","page","17262","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:48.806Z","2025-10-24T13:59:48.806Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Depending on the operating system and its setup, you may encounter this runtime warning when starting MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">RuntimeWarning:</span><span style=""color: rgb(10,48,105);""> Missing</span><span style=""color: rgb(10,48,105);""> required</span><span style=""color: rgb(10,48,105);""> CPU</span><span style=""color: rgb(10,48,105);""> features.</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">The</span><span style=""color: rgb(10,48,105);""> following</span><span style=""color: rgb(10,48,105);""> required</span><span style=""color: rgb(10,48,105);""> CPU</span><span style=""color: rgb(10,48,105);""> features</span><span style=""color: rgb(10,48,105);""> were</span><span style=""color: rgb(10,48,105);""> not</span><span style=""color: rgb(10,48,105);""> detected:</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">avx2,</span><span style=""color: rgb(10,48,105);""> fma,</span><span style=""color: rgb(10,48,105);""> bmi1,</span><span style=""color: rgb(10,48,105);""> bmi2,</span><span style=""color: rgb(10,48,105);""> lzcnt</span></span>
</code></pre></div></div></div>
<span>The solution is to install the <code>polars-lts-cpu</code> package in the environment where MindsDB runs.</span>
<span>If you are on an Apple ARM machine (e.g. M1), this warning is likely due to running Python under Rosetta. To troubleshoot it, install a native version of Python that does not run under Rosetta x86-64 emulation.</span></div>","/spaces/SOP/pages/2031675/Missing+required+CPU+features+-+MindsDB","/pages/resumedraft.action?draftId=2031675","/x/OwAf"
"2031694","current","How to Persist Predictions - MindsDB","491527","491782","page","17592","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:51.728Z","2025-10-24T13:59:51.728Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides a range of options for persisting predictions and forecasts. Let&rsquo;s explore all possibilities to save the prediction results.</span>
<div><div><span><strong>Reasons to Save Predictions</strong></span><span>Every time you want to get predictions, you need to query the model, usually joined with an input data table, like this:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">product_name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">review</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">output</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">sentiment</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">amazon_reviews</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> input</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(31,35,40);""> sentiment_classifier </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> output</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>However, querying the model returns the result set that is not persistent by default. For future use, it is recommended to persist the result set instead of querying the model again with the same data.</span><span>MindsDB enables you to save predictions into a view or a table or download as a CSV file.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-a-view"">‚Äã</a></div><span class=""cursor-pointer"">Creating a View</span></h2>
<span>After creating the model, you can save the prediction results into a view.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> review_sentiment</span><span style=""color: rgb(31,35,40);""> (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    -- querying for predictions</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(5,80,174);""> input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">product_name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">review</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">output</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">sentiment</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">amazon_reviews</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> input</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> sentiment_classifier </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> output</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Now the <code>review_sentiment</code> view stores sentiment predictions made for all customer reviews.</span>
<div><div><span>Here is a <a class=""link"" href=""/nlp/sentiment-analysis-inside-mysql-with-openai"">comprehensive tutorial</a> on how to predict sentiment of customer reviews using OpenAI.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#creating-a-table"">‚Äã</a></div><span class=""cursor-pointer"">Creating a Table</span></h2>
<span>After creating the model, you can save predictions into a database table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> TABLE</span><span style=""color: rgb(130,80,223);""> local_postgres</span><span style=""color: rgb(31,35,40);"">.question_answers (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    -- querying for predictions</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(5,80,174);""> input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">article_title</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">input</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">question</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">output</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">answer</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">questions</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> input</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    JOIN</span><span style=""color: rgb(31,35,40);""> question_answering_model </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> output</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>Here, the <code>local_postgres</code> database is a PostgreSQL database connected to MindsDB with a user that has the write access.</span>
<span>Now the <code>question_answers</code> table stores all prediction results.</span>
<div><div><span>Here is a <a class=""link"" href=""/nlp/question-answering-inside-mysql-with-openai"">comprehensive tutorial</a> on how to answer questions using OpenAI.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#downloading-a-csv-file"">‚Äã</a></div><span class=""cursor-pointer"">Downloading a CSV File</span></h2>
<span>After executing the <code>SELECT</code> statement, you can download the output as a CSV file.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""206"" src=""https://mintcdn.com/mindsdb/U8_C23ppbMIBDBSs/assets/faqs_download.csv.png?fit=max&amp;auto=format&amp;n=U8_C23ppbMIBDBSs&amp;q=85&amp;s=14df4b723b94fabec86ebe03a2f8d59e"" style="""" width=""1131"" /></span></span></p>
<span>Click the <code>Export</code> button and choose the <code>CSV</code> option.</span></div>","/spaces/SOP/pages/2031694/How+to+Persist+Predictions+-+MindsDB","/pages/resumedraft.action?draftId=2031694","/x/TgAf"
"2031711","current","MindsDB and MLflow - MindsDB","491527","491782","page","18125","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:57.069Z","2025-10-24T13:59:57.069Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MLflow allows you to create, train, and serve machine learning models, apart from other features, such as organizing experiments, tracking metrics, and more.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-use-mlflow-models-in-mindsdb"">‚Äã</a></div><span class=""cursor-pointer"">How to Use MLflow Models in MindsDB</span></h2>
<span>Here are the prerequisites for using MLflow-served models in MindsDB:</span>
<ol>
<li>
<span>Train a model via a wrapper class that inherits from the <code>mlflow.pyfunc.PythonModel</code> class. It should expose the <code>predict()</code> method that returns the predicted output for some input data when called.</span>
<div><div><span>Please ensure that the Python version specified for Conda environment matches the one used to train the model.</span></div></div>
</li>
<li>
<span>Start the MLflow server:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">mlflow</span><span style=""color: rgb(10,48,105);""> server</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(5,80,174);""> 5001</span><span style=""color: rgb(5,80,174);""> --backend-store-uri</span><span style=""color: rgb(10,48,105);""> sqlite:////path/to/mlflow.db</span><span style=""color: rgb(5,80,174);""> --default-artifact-root</span><span style=""color: rgb(10,48,105);""> ./artifacts</span><span style=""color: rgb(5,80,174);""> --host</span><span style=""color: rgb(5,80,174);""> 0.0.0.0</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Serve the trained model:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">mlflow</span><span style=""color: rgb(10,48,105);""> models</span><span style=""color: rgb(10,48,105);""> serve</span><span style=""color: rgb(5,80,174);""> --model-uri</span><span style=""color: rgb(10,48,105);""> ./model_folder_name</span></span>
</code></pre></div></div></div>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>Let&rsquo;s create a model that registers an MLflow-served model as an AI Table:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">mlflow_model</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT </span><span style=""color: rgb(207,34,46);"">target</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'mlflow'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    model_name </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'model_folder_name'</span><span style=""color: rgb(31,35,40);"">,                     </span><span style=""color: rgb(110,119,129);"">-- replace the model_folder_name variable with a real value</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    mlflow_server_url </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'http://0.0.0.0:5001/'</span><span style=""color: rgb(31,35,40);"">,           </span><span style=""color: rgb(110,119,129);"">-- match the port number with the MLflow server (point 2 in the previous section)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    mlflow_server_path </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'sqlite:////path/to/mlflow.db'</span><span style=""color: rgb(31,35,40);"">,  </span><span style=""color: rgb(110,119,129);"">-- replace the path with a real value (here we use the sqlite database)</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    predict_url </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'http://localhost:5000/invocations'</span><span style=""color: rgb(31,35,40);"">;    </span><span style=""color: rgb(110,119,129);"">-- match the port number that serves the trained model (point 3 in the previous section)</span></span>
</code></pre></div></div></div>
<span>Here is how to check the models status:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">DESCRIBE mlflow_model;</span></span>
</code></pre></div></div></div>
<span>Once the status is <code>complete</code>, we can query for predictions.</span>
<span>One way is to query for a single prediction using synthetic data in the <code>WHERE</code> clause.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> target</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">mlflow_model</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> text</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'The tsunami is coming, seek high ground'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Another way is to query for batch predictions by joining the model with the data table.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> t</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">text</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">predict</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">mlflow_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> files</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">some_text</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> t;</span></span>
</code></pre></div></div></div>
<span>Here, the data table comes from the <code>files</code> integration. It is joined with the model and predictions are made for all the records at once.</span>
<div><div><span><strong>Get More Insights</strong></span><span>Check out the article on <a class=""link"" href=""https://medium.com/mindsdb/how-to-bring-your-own-machine-learning-model-to-databases-47a188d6db00"">How to bring your own machine learning model to databases</a> by <a class=""link"" href=""https://medium.com/@paxcema"">Patricio Cerda Mardini</a> to learn more.</span></div></div></div>","/spaces/SOP/pages/2031711/MindsDB+and+MLflow+-+MindsDB","/pages/resumedraft.action?draftId=2031711","/x/XwAf"
"2031734","current","Apache Solr - MindsDB","491527","491782","page","38802","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:20.554Z","2025-10-24T14:01:20.554Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Solr data handler for MindsDB.</span>
<span><a class=""link"" href=""https://solr.apache.org/"">Apache Solr</a> is a highly reliable, scalable and fault tolerant, providing distributed indexing, replication and load-balanced querying, automated failover and recovery, centralized configuration, and more.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Solr to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Apache Solr.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using the <code>sqlalchemy-solr</code> library, which provides a Python/SQLAlchemy interface.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>username</code> is the username used to authenticate with the Solr server. This parameter is optional.</li>
<li><code>password</code> is the password to authenticate the user with the Solr server. This parameter is optional.</li>
<li><code>host</code> is the host name or IP address of the Solr server.</li>
<li><code>port</code> is the port number of the Solr server.</li>
<li><code>server_path</code> defaults to <code>solr</code> if not provided.</li>
<li><code>collection</code> is the Solr Collection name.</li>
<li><code>use_ssl</code> defaults to <code>false</code> if not provided.</li>
</ul>
<div><div><span>Further reference: <a class=""link"" href=""https://pypi.org/project/sqlalchemy-solr/"">https://pypi.org/project/sqlalchemy-solr/</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Solr database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> solr_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'solr'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;8981&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;server_path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;solr&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;collection&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;gettingstarted&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;use_ssl&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;false&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> solr_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">gettingstarted</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10000</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span><strong>Requirements</strong></span><span>A Solr instance with a Parallel SQL supported up and running.</span><span>There are certain limitations that need to be taken into account when issuing queries to Solr. Refer to <a class=""link"" href=""https://solr.apache.org/guide/solr/latest/query-guide/sql-query.html#parallel-sql-queries"">https://solr.apache.org/guide/solr/latest/query-guide/sql-query.html#parallel-sql-queries</a>.</span></div></div>
<div><div><span>Don&rsquo;t forget to put limit in the end of the SQL statement</span></div></div></div>","/spaces/SOP/pages/2031734/Apache+Solr+-+MindsDB","/pages/resumedraft.action?draftId=2031734","/x/dgAf"
"2031759","current","Databricks - MindsDB","491527","491782","page","42809","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:35.111Z","2025-10-24T14:01:35.111Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.databricks.com/"">Databricks</a>, the world&rsquo;s first data intelligence platform powered by generative AI.
The integration allows MindsDB to access data stored in a Databricks workspace and enhance it with AI capabilities.</span>
<div><div><span>This data source integration is thread-safe, utilizing a connection pool where each thread is assigned its own connection. When handling requests in parallel, threads retrieve connections from the pool as needed.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Databricks to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<div><div><span>If the Databricks cluster you are attempting to connect to is terminated, executing the queries given below will attempt to start the cluster and therefore, the first query may take a few minutes to execute.</span><span>To avoid any delays, ensure that the Databricks cluster is running before executing the queries.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Databricks workspace from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> databricks_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'databricks'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;server_hostname&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;adb-1234567890123456.7.azuredatabricks.net&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;http_path&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sql/protocolv1/o/1234567890123456/1234-567890-test123&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;access_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;dapi1234567890ab1cde2f3ab456c7d89efa&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;schema&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>server_hostname</code>: The server hostname for the cluster or SQL warehouse.</li>
<li><code>http_path</code>: The HTTP path of the cluster or SQL warehouse.</li>
<li><code>access_token</code>: A Databricks personal access token for the workspace.</li>
</ul>
<div><div><span>Refer the instructions given <a class=""link"" href=""https://docs.databricks.com/en/integrations/compute-details.html"">https://docs.databricks.com/en/integrations/compute-details.html</a> and <a class=""link"" href=""https://docs.databricks.com/en/dev-tools/python-sql-connector.html#authentication"">https://docs.databricks.com/en/dev-tools/python-sql-connector.html#authentication</a> to find the connection parameters mentioned above for your compute resource.</span></div></div>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>session_configuration</code>: Additional (key, value) pairs to set as Spark session configuration parameters. This should be provided as a JSON string.</li>
<li><code>http_headers</code>: Additional (key, value) pairs to set in HTTP headers on every RPC request the client makes. This should be provided as <code>&quot;http_headers&quot;: [['Header-1', 'value1'],  ['Header-2', 'value2']]</code>.</li>
<li><code>catalog</code>: The catalog to use for the connection. Default is <code>hive_metastore</code>.</li>
<li><code>schema</code>: The schema (database) to use for the connection. Default is <code>default</code>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name, catalog, schema, and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> databricks_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">catalog_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">schema_name</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The catalog and schema names only need to be provided if the table to be queried is not in the specified (or default) catalog and schema.</span></div></div>
<span>Run Databricks SQL queries directly on the connected Databricks workspace:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> databricks_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      city,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      car_model,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">      RANK</span><span style=""color: rgb(31,35,40);"">() </span><span style=""color: rgb(207,34,46);"">OVER</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">PARTITION</span><span style=""color: rgb(207,34,46);""> BY</span><span style=""color: rgb(31,35,40);""> car_model </span><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> quantity) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> rank</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> dealer</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    QUALIFY rank </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>

</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>databricks_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Databricks workspace.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Databricks workspace is active.</li>
<li>Confirm that server hostname, HTTP path, access token are correctly provided. If the catalog and schema are provided, ensure they are correct as well.</li>
<li>Ensure a stable network between MindsDB and Databricks workspace.</li>
</ol>
</li>
</ul></div></div>
<div><div><span>SQL statements running against tables (of reasonable size) are taking longer than expected.</span><ul>
<li><strong>Symptoms</strong>: SQL queries taking longer than expected to execute.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure the Databricks cluster is running before executing the queries.</li>
<li>Check the network connection between MindsDB and Databricks workspace.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2031759/Databricks+-+MindsDB","/pages/resumedraft.action?draftId=2031759","/x/jwAf"
"2031782","current","Variables - MindsDB","491527","491782","page","80733","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:11.958Z","2025-10-24T14:04:11.958Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB supports the usage of variables. Users can save values of API keys or other frequently used values and pass them as variables when creating knowledge bases, agents, or other MindsDB object.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Here is how to create variables in MindsDB.</span>
<ul>
<li>Create variables using <code>SET</code> and save values either using the <a class=""link"" href=""/mindsdb_sql/functions/from_env""><code>from_env()</code> function</a> or directly.</li>
</ul>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> @my_env_var  </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> from_env(</span><span style=""color: rgb(10,48,105);"">&quot;MDB_MY_ENV_VAR&quot;</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> @my_value  </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;123456&quot;</span></span>
</code></pre></div></div></div>
<ul>
<li>Use variables to pass parameters when creating objects in MindsDB.</li>
</ul>
<span>Here is an example for <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    embedding_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">       &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">       &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;text-embedding-3-large&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">       &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: @my_env_var</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ...;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2031782/Variables+-+MindsDB","/pages/resumedraft.action?draftId=2031782","/x/pgAf"
"2031801","current","How to Evaluate Knowledge Bases - MindsDB","491527","491782","page","81436","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:17.088Z","2025-10-24T14:04:17.088Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Evaluating knowledge bases verifies how accurate and relevant is the data returned by the knowledge base.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#evaluate-knowledge-base-syntax"">‚Äã</a></div><span class=""cursor-pointer""><code>EVALUATE KNOWLEDGE_BASE</code> Syntax</span></h2>
<span>With the <code>EVALUATE KNOWLEDGE_BASE</code> command, users can evaluate the relevancy and accuracy of the documents and data returned by the knowledge base.</span>
<span>Below is the complete syntax that includes both required and optional parameters.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">EVALUATE KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    test_table </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> my_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_test_table</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    version</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'doc_id'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    generate_data </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'from_sql'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'SELECT id, content FROM my_datasource.my_table'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'count'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">100</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    evaluate </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> false,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    llm </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'api_key'</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">'sk-xxx'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'model_name'</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(10,48,105);"">'gpt-4'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    save_to </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> my_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">my_result_table</span><span style=""color: rgb(31,35,40);"">; </span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#test-table"">‚Äã</a></div><span class=""cursor-pointer""><code>test_table</code></span></h3>
<span>This is a required parameter that stores the name of the table from one of the data sources connected to MindsDB. For example, <code>test_table = my_datasource.my_test_table</code> defines a table named <code>my_test_table</code> from a data source named <code>my_datasource</code>.</span>
<span>This test table stores test data commonly in form of questions and answers. Its content depends on the <code>version</code> parameter defined below.</span>
<span>Users can provide their own test data or have the test data generated by the <code>EVALUATE KNOWLEDGE_BASE</code> command, which is performed when setting the <code>generate_data</code> parameter defined below.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#version"">‚Äã</a></div><span class=""cursor-pointer""><code>version</code></span></h3>
<span>This is an optional parameter that defines the version of the evaluator. If not defined, its default value is <code>doc_id</code>.</span>
<ul>
<li>
<span><code>version = 'doc_id'</code>
The evaluator checks whether the document ID returned by the knowledge base matched the expected document ID as defined in the test table.</span>
</li>
<li>
<span><code>version = 'llm_relevancy'</code>
The evaluator uses a language model to rank and evaluate responses from the knowledge base.</span>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#generate-data"">‚Äã</a></div><span class=""cursor-pointer""><code>generate_data</code></span></h3>
<span>This is an optional parameter used to configure the test data generation, which is saved into the table defined in the <code>test_table</code> parameter. If not defined, its default value is <code>false</code>, meaning that no test data is generated.</span>
<span>Available values are as follows:</span>
<ul>
<li>
<span>A dictionary containing the following values:</span>
<ul>
<li><code>from_sql</code> defines the SQL query that fetches the test data. For example, <code>'from_sql': 'SELECT id, content FROM my_datasource.my_table'</code>. If not defined, it fetches test data from the knowledge base on which the <code>EVALUATE</code> command is executed: <code>SELECT chunk_content, id FROM my_kb</code>.</li>
<li><code>count</code> defines the size of the test dataset. For example, <code>'count': 100</code>. Its default value is 20.</li>
</ul>
<div><div><span>When providing the <code>from_sql</code> parameter, it requires specific column names as follows:</span><ul>
<li>
<span>With <code>version = 'doc_id'</code>, the <code>from_sql</code> parameter should contain a query that returns the <code>id</code> and <code>content</code> columns, like this: <code>'from_sql': 'SELECT id_column_name AS id, content_column_names AS content FROM my_datasource.my_table'</code></span>
</li>
<li>
<span>With <code>version = 'llm_relevancy'</code>, the <code>from_sql</code> parameter should contain a query that returns the <code>content</code> column, like this: <code>'from_sql': 'SELECT content_column_names AS content FROM my_datasource.my_table'</code></span>
</li>
</ul></div></div>
</li>
<li>
<span>A value of <code>true</code>, such as <code>generate_data = true</code>, which implies that default values for <code>from_sql</code> and <code>count</code> will be used.</span>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#evaluate"">‚Äã</a></div><span class=""cursor-pointer""><code>evaluate</code></span></h3>
<span>This is an optional parameter that defines whether to evaluate the knowledge base. If not defined, its default value is <code>true</code>.</span>
<span>Users can opt for setting it to false, <code>evaluate = false</code>, in order to generate test data into the test table without running the evaluator.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#llm"">‚Äã</a></div><span class=""cursor-pointer""><code>llm</code></span></h3>
<span>This is an optional parameter that defines a language model to be used for evaluations, if <code>version</code> is set to <code>llm_relevancy</code>.</span>
<span>If not defined, its default value is the <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#reranking-model""><code>reranking_model</code> defined with the knowledge base</a>.</span>
<span>Users can define it with the <code>EVALUATE KNOWLEDGE_BASE</code> command in the same manner.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">EVALUATE KNOWLEDGE_BASE my_kb</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">USING</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    llm </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;azure_openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;base_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://ai-6689.openai.azure.com/&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_version&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;2024-02-01&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;method&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;multi-class&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    },</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ...</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#save-to"">‚Äã</a></div><span class=""cursor-pointer""><code>save_to</code></span></h3>
<span>This is an optional parameter that stores the name of the table from one of the data sources connected to MindsDB. For example, <code>save_to = my_datasource.my_result_table</code> defines a table named <code>my_result_table</code> from the data source named <code>my_datasource</code>. If not defined, the results are not saved into a table.</span>
<span>This table is used to save the evaluation results.</span>
<span>By default, evaluation results are returned after executing the <code>EVALUATE KNOWLEDGE_BASE</code> statement.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#evaluation-results"">‚Äã</a></div><span class=""cursor-pointer"">Evaluation Results</span></h3>
<span>When using <code>version = 'doc_id'</code>, the following columns are included in the evaluation results:</span>
<ul>
<li><code>total</code> stores the total number of questions.</li>
<li><code>total_found</code> stores the number of questions to which the knowledge bases provided correct answers.</li>
<li><code>retrieved_in_top_10</code> stores the number of top 10 questions to which the knowledge bases provided correct answers.</li>
<li><code>cumulative_recall</code> stores data that can be used to create a chart.</li>
<li><code>avg_query_time</code> stores the execution time of a search query of the knowledge base.</li>
<li><code>name</code> stores the knowledge base name.</li>
<li><code>created_at</code> stores the timestamp when the evaluation was created.</li>
</ul>
<span>When using <code>version = 'llm_relevancy'</code>, the following columns are included in the evaluation results:</span>
<ul>
<li><code>avg_relevancy</code> stores the average relevancy.</li>
<li><code>avg_relevance_score_by_k</code> stores the average relevancy at k.</li>
<li><code>avg_first_relevant_position</code> stores the average first relevant position.</li>
<li><code>mean_mrr</code> stores the Mean Reciprocal Rank (MRR).</li>
<li><code>hit_at_k</code> stores the Hit@k value.</li>
<li><code>bin_precision_at_k</code> stores the Binary Precision@k.</li>
<li><code>avg_entropy</code> stores the average relevance score entropy.</li>
<li><code>avg_ndcg</code> stores the average nDCG.</li>
<li><code>avg_query_time</code> stores the execution time of a search query of the knowledge base.</li>
<li><code>name</code> stores the knowledge base name.</li>
<li><code>created_at</code> stores the timestamp when the evaluation was created.</li>
</ul></div>","/spaces/SOP/pages/2031801/How+to+Evaluate+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=2031801","/x/uQAf"
"2031820","current","Create a Table - MindsDB","491527","491782","page","91889","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:12.132Z","2025-10-24T14:09:51.528Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_table()</code> and <code>create_table()</code> functions let you save either an existing table or a newly created table into a variable.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>get_table()</code> method to fetch a table from the <code>mysql_demo_db</code> database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_table </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> mysql_demo_db.get_table(</span><span style=""color: rgb(10,48,105);"">'my_table'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Or, the <code>create_table()</code> method to create a new table:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);""># option 1</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">my_table </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> mysql_demo_db.create_table(</span><span style=""color: rgb(10,48,105);"">'my_table'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'SELECT * FROM some_table WHERE key=value'</span><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);""># option 2</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">my_table </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> mysql_demo_db.create_table(</span><span style=""color: rgb(10,48,105);"">'my_table'</span><span style=""color: rgb(31,35,40);"">, base_table)</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);""># option 3</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">my_table </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> mysql_demo_db.create_table(</span><span style=""color: rgb(10,48,105);"">'my_table'</span><span style=""color: rgb(31,35,40);"">, base_table.filter(</span><span style=""color: rgb(149,56,0);"">key</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'value'</span><span style=""color: rgb(31,35,40);"">))</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2031820/Create+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=2031820","/x/zAAf"
"2031839","current","Remove a View - MindsDB","491527","491782","page","96663","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:35.925Z","2025-10-24T14:10:30.997Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>drop_view()</code> function removes a view from MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>drop_view()</code> method to remove a view:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.drop_view(</span><span style=""color: rgb(10,48,105);"">'view_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2031839/Remove+a+View+-+MindsDB","/pages/resumedraft.action?draftId=2031839","/x/3wAf"
"2031879","current","Environment Variables - MindsDB","491527","491782","page","119267","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:11:51.177Z","2025-10-24T14:11:51.177Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Most of the MindsDB functionality can be modified by extending the default configuration, but some of the configuration options
can be added as environment variables on the server where MindsDB is deployed.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-authentication"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Authentication</span></h2>
<span>MindsDB does not require authentication by default. If you want to enable authentication, you can set the <code>MINDSDB_USERNAME</code> and <code>MINDSDB_PASSWORD</code> environment variables.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_USERNAME='mindsdb_user'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_PASSWORD='mindsdb_password'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-configuration-file"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Configuration File</span></h2>
<span>In order to start MindsDB with a <a class=""link"" href=""/setup/custom-config"">custom configuration file</a>, the <code>MINDSDB_CONFIG_PATH</code> environment variable should store the file path.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-2"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_CONFIG_PATH=/Users/username/path/config.json</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-storage"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Storage</span></h2>
<span>By default, MindsDB stores the configuration files by determining appropriate platform-specific directories, e.g. a &ldquo;user data dir&rdquo;:</span>
<ul>
<li>On Linux <code>~/.local/share/mindsdb/var</code></li>
<li>On MacOS <code>~/Library/Application Support/mindsdb/var</code></li>
<li>On Windows <code>C:\Documents and Settings\&lt;User&gt;\Application Data\Local Settings\&lt;AppAuthor&gt;\mindsdb\var</code></li>
</ul>
<span>In the <code>MINDSDB_STORAGE_DIR</code> location, MindsDB stores users&rsquo; data, models and uploaded data files, the static assets for the frontend application and the
<code>sqlite.db</code> file.
You can change the default storage location using <code>MINDSDB_STORAGE_DIR</code> variable.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-3"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_STORAGE_DIR='~/home/mindsdb/var'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-configuration-storage"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Configuration Storage</span></h2>
<span>MindsDB uses <code>sqlite</code> database by default to store the required configuration as models, projects, files metadata etc.
The full list of the above schemas can be found <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/interfaces/storage/db.py#L69"">here</a>. You can change the
default storage option and use different database by adding the new connection string using <code>MINDSDB_DB_CON</code> variable.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-4"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_DB_CON='postgresql://user:secret@localhost'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-apis"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB APIs</span></h2>
<span>The <code>MINDSDB_APIS</code> environment variable lets users define which APIs to start. Learn more about the <a class=""link"" href=""/setup/mindsdb-apis"">available APIs here</a>.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-5"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-logs"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Logs</span></h2>
<span>This environment variable defines the level of logging generated by MindsDB. You can choose one of the values <a class=""link"" href=""https://docs.python.org/3/library/logging.html#logging-levels"">defined here</a>. The <code>INFO</code> level is used by default.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-6"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_LOG_LEVEL='DEBUG'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-default-project"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Default Project</span></h2>
<span>By default, MindsDB creates a project named <code>mindsdb</code> where all the models and other objects are stored. You can change the default project name by setting the <code>MINDSDB_DEFAULT_PROJECT</code> environment variable.</span>
<span>If this environment variable is set or modified after MindsDB has started, the default project will be <strong>renamed</strong> accordingly upon restart. To start using the new default project, a <code>USE</code> statement will also need to be executed.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-7"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_DEFAULT_PROJECT='my_project'</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb%E2%80%99s-pid-file"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB&rsquo;s PID File</span></h2>
<span>When running MindsDB via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Extension</a>, the PID file is not used by default. Users can opt for enabling the PID file by defining the <code>USE_PIDFILE</code> environment variable.</span>
<span>If used, the PID file is stored in the temp directory (<code>$TMPDIR</code> on MacOS and Linux, <code>%TEMP%</code> on Windows) under the <code>mindsdb</code> folder.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-8"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> USE_PIDFILE=</span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-gui-updates"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB GUI Updates</span></h2>
<span>In order to disable automatic GUI updates, the <code>MINDSDB_GUI_AUTOUPDATE</code> environment variable should be set to <code>false</code> (or <code>0</code>).</span>
<span>By default, the automatic GUI updates are enabled and the <code>MINDSDB_GUI_AUTOUPDATE</code> environment variable is set to <code>true</code> (or <code>1</code>).</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-9"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_GUI_AUTOUPDATE=</span><span style=""color: rgb(5,80,174);"">false</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-gui-startup-and-updates"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB GUI Startup and Updates</span></h2>
<span>In order to not open the MindsDB GUI automatically when starting the instance (and to disable automatic GUI updates), the <code>MINDSDB_NO_STUDIO</code> environment variable should be set to <code>true</code> (or <code>1</code>).</span>
<span>By default, the MindsDB GUI starts automatically when starting the instance (and the automatic GUI updates are enabled), that is, the <code>MINDSDB_NO_STUDIO</code> environment variable is set to <code>false</code> (or <code>0</code>).</span>
<span>Note that the <code>MINDSDB_NO_STUDIO</code> is not recommended for the MindsDB instance running in Docker. Instead, use the <code>MINDSDB_GUI_AUTOUPDATE</code> environment variable to disable automatic GUI updates.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-10"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h3>
<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre flex-none text-sm h-full leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">docker</span><span style=""color: rgb(10,48,105);""> run</span><span style=""color: rgb(5,80,174);""> --name</span><span style=""color: rgb(10,48,105);""> mindsdb_container</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_NO_STUDIO=</span><span style=""color: rgb(5,80,174);"">true</span><span style=""color: rgb(5,80,174);""> -e</span><span style=""color: rgb(10,48,105);""> MINDSDB_APIS=http,mysql</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47334:47334</span><span style=""color: rgb(5,80,174);""> -p</span><span style=""color: rgb(10,48,105);""> 47335:47335</span><span style=""color: rgb(10,48,105);""> mindsdb/mindsdb</span></span>
</code></pre></div></div></div></div></div></div>","/spaces/SOP/pages/2031879/Environment+Variables+-+MindsDB","/pages/resumedraft.action?draftId=2031879","/x/BwEf"
"2064385","current","Connect - MindsDB","491527","491782","page","4944","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:09.653Z","2025-10-24T14:09:39.260Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes how you can connect to your MindsDB server from Python code.</span>
<span>Here is how to connect to your local MindsDB server:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>import mindsdb_sdk</span></span>

<span class=""line""><span># connects to the default port (47334) on localhost </span></span>
<span class=""line""><span>server = mindsdb_sdk.connect()</span></span>

<span class=""line""><span># connects to the specified host and port</span></span>
<span class=""line""><span>server = mindsdb_sdk.connect('http://127.0.0.1:47334')</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2064385/Connect+-+MindsDB","/pages/resumedraft.action?draftId=2064385","/x/AYAf"
"2064398","current","Join our Community - MindsDB","491527","491782","page","11688","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:18.444Z","2025-10-24T13:59:18.444Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>If you have questions or you want to chat with the MindsDB core team or other community members, you can join our <a class=""link"" href=""https://mindsdb.com/joincommunity"">Slack workspace</a></span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#mindsdb-newsletter"">‚Äã</a></div><span class=""cursor-pointer"">MindsDB Newsletter</span></h2>
<span>To get updates on MindsDB&rsquo;s latest announcements, releases, and events, <a class=""link"" href=""https://mindsdb.com/newsletter/"">sign up for our newsletter</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#contact-us"">‚Äã</a></div><span class=""cursor-pointer"">Contact Us</span></h2>
<span>If you are interested in MindsDB for large-scale projects, contact us by submitting <a class=""link"" href=""https://mindsdb.com/contact-us/"">this form</a>.</span></div>","/spaces/SOP/pages/2064398/Join+our+Community+-+MindsDB","/pages/resumedraft.action?draftId=2064398","/x/DoAf"
"2064423","current","How to Write Handlers README - MindsDB","491527","491782","page","12936","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:29.971Z","2025-10-24T13:59:29.971Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>The README file is a crucial document that guides users in understanding, using, and contributing to the MindsDb integration. It serves as the first point of contact for anyone interacting with the integration, hence the need for it to be comprehensive, clear, and user-friendly.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#sections-to-include"">‚Äã</a></div><span class=""cursor-pointer"">Sections to Include</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#table-of-contents"">‚Äã</a></div><span class=""cursor-pointer"">Table of Contents</span></h3>
<span>A well-organized table of contents is provided for easy navigation through the document, allowing users to quickly find the information they need.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#about"">‚Äã</a></div><span class=""cursor-pointer"">About</span></h3>
<span>Explain what specific database, application, or framework the integration targets. Provide a concise overview of the integration&rsquo;s purpose, highlighting its key features and benefits.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#handler-implementation"">‚Äã</a></div><span class=""cursor-pointer"">Handler Implementation</span></h3>
<ul>
<li>Setup
<ul>
<li>Detail the installation and initial setup process, including any prerequisites.</li>
</ul>
</li>
<li>Connection
<ul>
<li>Describe the steps to establish and manage connections, with clear instructions.</li>
<li>Include SQL examples for better clarity.</li>
</ul>
</li>
<li>Required Parameters
<ul>
<li>List and describe all essential parameters necessary for the operation of the integration.</li>
</ul>
</li>
<li>Optional Parameters
<ul>
<li>Detail additional, non-mandatory parameters that can enhance the integration&rsquo;s functionality.</li>
</ul>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example-usage"">‚Äã</a></div><span class=""cursor-pointer"">Example Usage</span></h3>
<ul>
<li>Practical Examples: Offer detailed examples showing how to use the integration effectively.</li>
<li>Coverage: Ensure examples encompass a range of functionalities, from basic to advanced operations.</li>
<li>SQL Examples: Include SQL statements and their expected outputs to illustrate use cases.</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables%2Ftasks"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables/Tasks</span></h3>
<span>Clearly enumerate the tables, tasks, or operations that the integration supports, possibly in a list or table format.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#limitations"">‚Äã</a></div><span class=""cursor-pointer"">Limitations</span></h3>
<span>Transparently outline any limitations or constraints known in the integration.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#todo"">‚Äã</a></div><span class=""cursor-pointer"">TODO</span></h3>
<ul>
<li>Future Developments: Highlight areas for future enhancements or improvements.</li>
<li>GitHub Issues: Link to open GitHub issues tagged as enhancements, indicating ongoing or planned feature additions.</li>
</ul></div>","/spaces/SOP/pages/2064423/How+to+Write+Handlers+README+-+MindsDB","/pages/resumedraft.action?draftId=2064423","/x/J4Af"
"2064440","current","Binance - MindsDB","491527","491782","page","18227","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:59:58.794Z","2025-10-24T13:59:58.794Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Binance to MindsDB.</span>
<span><a class=""link"" href=""https://www.binance.com/en"">Binance</a> is one of the world&rsquo;s largest cryptocurrency exchanges. It&rsquo;s an online platform where you can buy, sell, and trade a wide variety of cryptocurrencies. Binance offers a range of services beyond just trading, including staking, lending, and various financial products related to cryptocurrencies.</span>
<span>Binance provides real-time trade data that can be utilized within MindsDB to make real-time forecasts.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler integrates with the <a class=""link"" href=""https://binance-docs.github.io/apidocs/spot/en/#change-log"">Binance API</a> to make aggregate trade (kline) data available to use for model training and predictions.</span>
<span>Since there are no parameters required to connect to Binance using MindsDB, you can use the below statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_binance</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'binance'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#select-data"">‚Äã</a></div><span class=""cursor-pointer"">Select Data</span></h3>
<span>By default, aggregate data (klines) from the latest 1000 trading intervals with a length of one minute (1m) each will be returned.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_binance</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">aggregated_trade_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> symbol </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'BTCUSDT'</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div class=""leading-tight text-left""><p>Response</p></div><div><span>Here is the sample output data:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>| symbol      | open_time    | open_price  | high_price  | low_price   | close_price | volume      | close_time    | quote_asset_volume | number_of_trades | taker_buy_base_asset_volume | taker_buy_quote_asset_volume |</span></span>
<span class=""line""><span>| ----------- | -----------  | ----------- | ----------- | ----------- | ----------- | ----------- | -----------   | ------------------ | ---------------- | --------------------------- | ---------------------------- |</span></span>
<span class=""line""><span>| BTCUSDT     | 1678338600   | 21752.65000 | 21761.33000 | 21751.53000 | 21756.7000  | 103.8614100 | 1678338659.999| 2259656.20520700   | 3655             | 55.25763000                 | 1202219.60971860             |</span></span>
</code></pre></div></div></div><span>where:</span><ul>
<li><code>symbol</code> - Trading pair (BTC to USDT in the above example)</li>
<li><code>open_time</code> - Start time of interval in seconds since the Unix epoch (default interval is 1m)</li>
<li><code>open_price</code> - Price of a base asset at the beginning of a trading interval</li>
<li><code>high_price</code> - The highest price of a base asset during trading interval</li>
<li><code>low_price</code> - Lowest price of a base asset during a trading interval</li>
<li><code>close_price</code> - Price of a base asset at the end of a trading interval</li>
<li><code>volume</code> - Total amount of base asset traded during an interval</li>
<li><code>close_time</code> - End time of interval in seconds since the Unix epoch</li>
<li><code>quote_asset_volume</code> - Total amount of quote asset (USDT in the above case) traded during an interval</li>
<li><code>number_of_trades</code> - Total number of trades made during an interval</li>
<li><code>taker_buy_base_asset_volume</code> - How much of the base asset volume is contributed by taker buy orders</li>
<li><code>taker_buy_quote_asset_volume</code> - How much of the quote asset volume is contributed by taker buy orders</li>
</ul></div>
<span>To get a customized response we can pass open_time, close_time, and interval:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_binance</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">aggregated_trade_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> symbol </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'BTCUSDT'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> open_time </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(10,48,105);""> '2023-01-01'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> close_time </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(10,48,105);""> '2023-01-03 08:00:00'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> interval </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '1s'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10000</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Supported intervals are <a class=""link"" href=""https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-data"">listed here</a></span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#train-a-model"">‚Äã</a></div><span class=""cursor-pointer"">Train a Model</span></h3>
<span>Here is how to create a time series model using 10000 trading intervals in the past with a duration of 1m.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(31,35,40);""> MODEL </span><span style=""color: rgb(5,80,174);"">mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">btc_forecast_model</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> my_binance</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">(</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> aggregated_trade_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  WHERE</span><span style=""color: rgb(31,35,40);""> symbol </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'BTCUSDT'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  AND</span><span style=""color: rgb(31,35,40);""> close_time </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(10,48,105);""> '2023-01-01'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  AND</span><span style=""color: rgb(31,35,40);""> interval </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '1m'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  LIMIT</span><span style=""color: rgb(5,80,174);""> 10000</span><span style=""color: rgb(31,35,40);"">;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">PREDICT open_price</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> open_time</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WINDOW</span><span style=""color: rgb(5,80,174);""> 100</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">HORIZON </span><span style=""color: rgb(5,80,174);"">10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>For more accuracy, the limit can be set to a higher value (e.g. 100,000)</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#making-predictions"">‚Äã</a></div><span class=""cursor-pointer"">Making Predictions</span></h3>
<span>First, let&rsquo;s create a view for the most recent BTCUSDT aggregate trade data:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> VIEW</span><span style=""color: rgb(130,80,223);""> recent_btcusdt_data</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> my_binance</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">aggregated_trade_data</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  WHERE</span><span style=""color: rgb(31,35,40);""> symbol </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'BTCUSDT'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Now let&rsquo;s predict the future price of BTC:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> m.</span><span style=""color: rgb(207,34,46);"">*</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> recent_btcusdt_data </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> t</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">JOIN</span><span style=""color: rgb(5,80,174);""> mindsdb</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">btc_forecast_model</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> m</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(5,80,174);""> m</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">open_time</span><span style=""color: rgb(207,34,46);""> &gt;</span><span style=""color: rgb(31,35,40);""> LATEST</span></span>
</code></pre></div></div></div>
<span>This will give the predicted BTC price for the next 10 minutes (as the horizon is set to 10) in terms of USDT.</span></div>","/spaces/SOP/pages/2064440/Binance+-+MindsDB","/pages/resumedraft.action?draftId=2064440","/x/OIAf"
"2064463","current","PayPal - MindsDB","491527","491782","page","25627","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:37.240Z","2025-10-24T14:00:37.240Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect PayPal to MindsDB.</span>
<span><a class=""link"" href=""https://www.bankrate.com/finance/credit-cards/guide-to-using-paypal/"">PayPal</a> is an online payment system that makes paying for things online and sending and receiving money safe and secure.</span>
<span>Data from PayPal can be utilized within MindsDB to train models and make predictions about your transactions.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using <a class=""link"" href=""https://github.com/paypal/PayPal-Python-SDK"">PayPal-Python-SDK</a>, the Python SDK for PayPal RESTful APIs.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>mode</code>: The mode of the PayPal API. Can be <code>sandbox</code> or <code>live</code>.</li>
<li><code>client_id</code>: The client ID of the PayPal API.</li>
<li><code>client_secret</code>: The client secret of the PayPal API.</li>
</ul>
<span>To connect to PayPal using MindsDB, the following CREATE DATABASE statement can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> paypal_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'paypal'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;mode&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-paypal-mode&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-paypal-client-id&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;client_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-paypal-client-secret&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<div><div><span>Check out <a class=""link"" href=""https://developer.paypal.com/api/rest/"">this guide</a> on how to create client credentials for PayPal.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can query PayPal as follows:</span>
<span>Payments:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">payments</span></span>
</code></pre></div></div></div>
<span>Invoices:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">invoices</span></span>
</code></pre></div></div></div>
<span>Subscriptions:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">subscriptions</span></span>
</code></pre></div></div></div>
<span>Orders:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span></span>
</code></pre></div></div></div>
<span>Payouts:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">payouts</span></span>
</code></pre></div></div></div>
<span>You can also run more advanced queries on your data:</span>
<span>Payments:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> intent, cart</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">payments</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'approved'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> id</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<span>Invoices:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> invoice_number, total_amount</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">invoices</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> status</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'PAID'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> total_amount </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<span>Subscriptions:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">name</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">subscriptions</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);"">&quot;CREATED&quot;</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<span>Orders:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">state</span><span style=""color: rgb(31,35,40);"">, amount </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> state</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'APPROVED'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> total_amount </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<span>Payouts:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> payout_batch_id, amount_currency, amount_value</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> paypal_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">payouts</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> amount_value </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables</span></h2>
<span>The following tables are supported by the PayPal handler:</span>
<ul>
<li><code>payments</code>: payments made.</li>
<li><code>invoices</code>: invoices created.</li>
<li><code>subscriptions</code>: subscriptions created.</li>
<li><code>orders</code>: orders created.</li>
<li><code>payouts</code>: payouts made.</li>
</ul></div>","/spaces/SOP/pages/2064463/PayPal+-+MindsDB","/pages/resumedraft.action?draftId=2064463","/x/T4Af"
"2064488","current","Salesforce - MindsDB","491527","491782","page","27585","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:43.842Z","2025-10-24T14:00:43.842Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.salesforce.com/"">Salesforce</a>, the world&rsquo;s most trusted customer relationship management (CRM) platform.
The integration allows MindsDB to access data from Salesforce and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Salesforce to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Salesforce from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/salesforce_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> salesforce_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'salesforce'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo@example.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;client_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;3MVG9lKcPoNINVBIPJjdw1J9LLM82HnZz9Yh7ZJnY&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;client_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;5A52C1A1E21DF9012IODC9ISNXXAADDA9&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>username</code>: The username for the Salesforce account.</li>
<li><code>password</code>: The password for the Salesforce account.</li>
<li><code>client_id</code>: The client ID (consumer key) from a connected app in Salesforce.</li>
<li><code>client_secret</code>: The client secret (consumer secret) from a connected app in Salesforce.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>is_sandbox</code>: The setting to indicate whether to connect to a Salesforce sandbox environment (<code>true</code>) or production environment (<code>false</code>). This parameter defaults to <code>false</code>.</li>
</ul>
<div><div><span>To create a connected app in Salesforce and obtain the client ID and client secret, follow the steps given below:</span><ol>
<li>Log in to your Salesforce account.</li>
<li>Go to <code>Settings</code> &gt; <code>Open Advanced Setup</code> &gt; <code>Apps</code> &gt; <code>App Manager</code>.</li>
<li>Click <code>New Connected App</code>, select <code>Create a Connected App</code> and click <code>Continue</code>.</li>
<li>Fill in the required details, i.e., <code>Connected App Name</code>, <code>API Name</code> and <code>Contact Phone</code>.</li>
<li>Select the <code>Enable OAuth Settings</code> checkbox, set the <code>Callback URL</code> to wherever MindsDB is deployed followed by <code>/verify-auth</code> (e.g., <code>http://localhost:47334/verify-auth</code>), and choose the following OAuth scopes:</li>
</ol><ul>
<li>Manage user data via APIs (api)</li>
<li>Perform requests at any time (refresh_token, offline_access)</li>
</ul><ol start=""6"">
<li>Click <code>Save</code> and then <code>Continue</code>.</li>
<li>Click on <code>Manage Consumer Details</code> under <code>API (Enable OAuth Settings)</code>, and copy the Consumer Key (client ID) and Consumer Secret (client secret).</li>
<li>Click on <code>Back to Manage Connected Apps</code> and then <code>Manage</code>.</li>
<li>Click <code>Edit Policies</code>.</li>
<li>Under <code>OAuth Policies</code>, configure the <code>Permitted Users</code> and <code>IP Relaxation</code> settings according to your security policies. For example, to enable all users to access the app without enforcing any IP restrictions, select <code>All users may self-authorize</code> and <code>Relax IP restrictions</code> respectively. Leave the <code>Refresh Token Policy</code> set to <code>Refresh token is valid until revoked</code>.</li>
<li>Click <code>Save</code>.</li>
<li>Go to <code>Identity</code> &gt; <code>OAuth and OpenID Connect Settings</code>.</li>
<li>Ensure that the <code>Allow OAuth Username-Password Flows</code> checkbox is checked.</li>
</ol></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> salesforce_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run <a class=""link"" href=""https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql.htm"">SOQL</a> queries directly on the connected Salesforce account:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> salesforce_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(207,34,46);""> Name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">Account</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">Name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">Account</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">Industry</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> Contact</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    WHERE</span><span style=""color: rgb(5,80,174);""> Account</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">Industry</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'Technology'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>salesforce_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#salesforce-table-filtering"">‚Äã</a></div><span class=""cursor-pointer"">Salesforce Table Filtering</span></h2>
<span>We have implemented a filtering logic to exclude tables that are generally not useful for direct business queries, which fall into the following categories:</span>
<ul>
<li>System and Auditing Tables: We exclude tables that track field history, record sharing rules, and data change events (e.g., objects ending in History, Share, or ChangeEvent). These are important for system administration but not for typical business analysis.</li>
<li>Configuration and Metadata: We remove tables that define the structure and configuration of Salesforce itself. This includes objects related to user permissions, internal rules, platform settings, and data definitions (e.g., FieldDefinition, PermissionSet, AssignmentRule).</li>
<li>Feature-Specific Technical Objects: Tables that support specific backend Salesforce features are excluded. This includes objects related to:
<ul>
<li>AI and Einstein: (AI&hellip;)</li>
<li>Developer Components: (Apex&hellip;, Aura&hellip;)</li>
<li>Data Privacy and Consent: (objects ending in Consent or containing Policy)</li>
<li>Chatter and Collaboration Feeds: (&hellip;Feed, Collaboration&hellip;)</li>
</ul>
</li>
<li>Archived or Legacy Objects: Older objects that have been replaced by modern equivalents, such as ContentWorkspace, are also excluded to simplify the list.</li>
</ul></div>","/spaces/SOP/pages/2064488/Salesforce+-+MindsDB","/pages/resumedraft.action?draftId=2064488","/x/aIAf"
"2064517","current","Shopify - MindsDB","491527","491782","page","28115","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:47.366Z","2025-10-24T14:00:47.366Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Shopify to MindsDB.</span>
<span><a class=""link"" href=""https://www.shopify.com/"">Shopify</a> is an e-commerce platform that enables businesses to create and manage online stores. It is one of the leading e-commerce solutions, providing a wide range of tools and services to help entrepreneurs and businesses sell products and services online.</span>
<span>Data from Shopify can be utilized within MindsDB to train AI models and chatbots using Products, Customers and Orders data, and make predictions relevant for businesses.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>shop_url</code>: a required URL to your Shopify store.</li>
<li><code>access_token</code>: a required access token to use for authentication.</li>
</ul>
<div><div><span>Here is how you can <a class=""link"" href=""https://www.youtube.com/watch?v=4f_aiC5oTNc&amp;t=302s"">create a Shopify access token</a>.</span></div></div>
<span>Optionally, if you want to access customer reviews, provide the following parameters:</span>
<ul>
<li><code>yotpo_app_key</code>: a token needed to access customer reviews via the Yotpo Product Reviews app.</li>
<li><code>yotpo_access_token</code>: a token needed to access customer reviews via the Yotpo Product Reviews app.</li>
</ul>
<div><div><span>If you want to query customer reviews, use the <a class=""link"" href=""https://apps.shopify.com/yotpo-social-reviews"">Yotpo Product Reviews</a> app available in Shopify. Here are the steps to follow:</span><ol>
<li>Install the <a class=""link"" href=""https://apps.shopify.com/yotpo-social-reviews"">Yotpo Product Reviews</a> app for your Shopify store.</li>
<li>Generate <code>yotpo_app_key</code> following <a class=""link"" href=""https://support.yotpo.com/docs/finding-your-yotpo-app-key-and-secret-key"">this instruction</a> for retrieving your app key. Learn more about <a class=""link"" href=""https://apidocs.yotpo.com/reference/yotpo-authentication"">Yotpo authentication here</a>.</li>
<li>Generate <code>yotpo_access_token</code> following <a class=""link"" href=""https://develop.yotpo.com/reference/generate-a-token"">this instruction</a>.</li>
</ol></div></div>
<span>To connect your Shopify account to MindsDB, you must first create a new handler instance. You can do it by the following query:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> shopify_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'shopify'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;shop_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;your-shop-name.myshopify.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;access_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;shppa_...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Once you have created the database, you can query the following tables:</span>
<ul>
<li>Products table</li>
<li>Customers table</li>
<li>Orders table</li>
<li>CustomerReviews table (requires the <a class=""link"" href=""https://apps.shopify.com/yotpo-social-reviews"">Yotpo Product Reviews</a> app to be installed in your Shopify account)</li>
<li>InventoryLevel table</li>
<li>Location table</li>
<li>CarrierService table</li>
<li>ShippingZone table</li>
<li>SalesChannel table</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#products-table"">‚Äã</a></div><span class=""cursor-pointer"">Products table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">products</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Also, you can run more advanced queries and filter products by status, like this:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, title</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">products</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> status</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'active'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> id</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To insert new data, run the <code>INSERT INTO</code> statement, providing the following values: <code>title</code>, <code>body_html</code>, <code>vendor</code>, <code>product_type</code>, <code>tags</code>, <code>status</code>.</span>
<span>To update existing data, run the <code>UPDATE</code> statement.</span>
<span>To delete data, run the <code>DELETE</code> statement.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#customers-table"">‚Äã</a></div><span class=""cursor-pointer"">Customers table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customers</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To insert new data, run this statement:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customers</span><span style=""color: rgb(31,35,40);"">(first_name, last_name, email, phone)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(10,48,105);"">'John'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'Doe'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'john.doe@example.com'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'+10001112222'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<span>To update existing data, run the <code>UPDATE</code> statement.</span>
<span>To delete data, run the <code>DELETE</code> statement.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#orders-table"">‚Äã</a></div><span class=""cursor-pointer"">Orders table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To insert new data, run the <code>INSERT INTO</code> statement.</span>
<span>To update existing data, run the <code>UPDATE</code> statement.</span>
<span>To delete data, run the <code>DELETE</code> statement.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#customerreviews-table"">‚Äã</a></div><span class=""cursor-pointer"">CustomerReviews table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">customer_reviews</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#inventorylevel-table"">‚Äã</a></div><span class=""cursor-pointer"">InventoryLevel table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">inventory_level</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#location-table"">‚Äã</a></div><span class=""cursor-pointer"">Location table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">locations</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#carrierservice-table"">‚Äã</a></div><span class=""cursor-pointer"">CarrierService table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">carrier_service</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>To insert new data, run the <code>INSERT INTO</code> statement, providing the following values: <code>name</code>, <code>callback_url</code>, <code>service_discovery</code>.</span>
<span>To update existing data, run the <code>UPDATE</code> statement.</span>
<span>To delete data, run the <code>DELETE</code> statement.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#shippingzone-table"">‚Äã</a></div><span class=""cursor-pointer"">ShippingZone table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">shipping_zone</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#saleschannel-table"">‚Äã</a></div><span class=""cursor-pointer"">SalesChannel table</span></h3>
<span>You can query this table as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> shopify_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">sales_channel</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/shopify_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/2064517/Shopify+-+MindsDB","/pages/resumedraft.action?draftId=2064517","/x/hYAf"
"2064550","current","MatrixOne - MindsDB","491527","491782","page","49809","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:59.152Z","2025-10-24T14:01:59.152Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the MatrixOne data handler for MindsDB.</span>
<span><a class=""link"" href=""https://github.com/matrixorigin/matrixone"">MatrixOne</a> is a future-oriented hyper-converged cloud and edge native DBMS that supports transactional, analytical, and streaming workloads with a simplified and distributed database engine, across multiple data centers, clouds, edges, and other heterogeneous infrastructures.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect MatrixOne to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to MatrixOne.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented using <code>PyMySQL</code>, a Python library that allows you to use Python code to run SQL commands on the MatrixOne database.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the username associated with the database.</li>
<li><code>password</code> is the password to authenticate your access.</li>
<li><code>host</code> is the hostname or IP address of the database.</li>
<li><code>port</code> is the port through which TCP/IP connection is to be made.</li>
<li><code>database</code> is the database name to be connected.</li>
</ul>
<span>There are several optional arguments that can be used as well.</span>
<ul>
<li><code>ssl</code> indicates whether SSL is enabled (<code>True</code>) or disabled (<code>False</code>).</li>
<li><code>ssl_ca</code> is the SSL Certificate Authority.</li>
<li><code>ssl_cert</code> stores the SSL certificates.</li>
<li><code>ssl_key</code> stores the SSL keys.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the MatrixOne database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> matrixone_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'matrixone'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;dump&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;111&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">6001</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mo_catalog&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> Matrixone_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2064550/MatrixOne+-+MindsDB","/pages/resumedraft.action?draftId=2064550","/x/poAf"
"2064571","current","ScyllaDB - MindsDB","491527","491782","page","57885","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:22.468Z","2025-10-24T14:02:22.468Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the ScyllaDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.scylladb.com/"">ScyllaDB</a> is an open-source distributed NoSQL wide-column data store. It was purposefully designed to offer compatibility with Apache Cassandra while outperforming it with higher throughputs and reduced latencies. For a comprehensive understanding of ScyllaDB, visit ScyllaDB&rsquo;s official website.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect ScyllaDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to ScyllaDB.</li>
</ol>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h3>
<span>The ScyllaDB handler for MindsDB was developed using the scylla-driver library for Python.
The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>host</code>: Host name or IP address of ScyllaDB.</li>
<li><code>port</code>: Connection port.</li>
<li><code>user</code>: Authentication username. Optional; required only if authentication is enabled.</li>
<li><code>password</code>: Authentication password. Optional; required only if authentication is enabled.</li>
<li><code>keyspace</code>: The specific keyspace (top-level container for tables) to connect to.</li>
<li><code>protocol_version</code>: Optional. Defaults to 4.</li>
<li><code>secure_connect_bundle</code>: Optional. Needed only for connections to DataStax Astra.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>To set up a connection between MindsDB and a Scylla server, utilize the following SQL syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> scylladb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'scylladb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user@mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;pass&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;9042&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;keyspace&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_data&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<div><div><span>The protocol version is set to 4 by default. Should you wish to modify it,
simply include &ldquo;protocol_version&rdquo;: 5 within the PARAMETERS dictionary in the
query above.</span></div></div>
<span>With the connection established, you can execute queries on your keyspace as demonstrated below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> scylladb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">keystore</span><span style=""color: rgb(31,35,40);"">.example_table </span><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2064571/ScyllaDB+-+MindsDB","/pages/resumedraft.action?draftId=2064571","/x/u4Af"
"2064592","current","Supabase - MindsDB","491527","491782","page","60078","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:30.908Z","2025-10-24T14:02:30.908Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Supabase data handler for MindsDB.</span>
<span><a class=""link"" href=""https://supabase.com/"">Supabase</a> is an open-source Firebase alternative.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Supabase to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Supabase.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the PostgreSQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the Supabase server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> supabase_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'supabase'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">54321</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;supabase&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your database as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> supabase_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">public</span><span style=""color: rgb(31,35,40);"">.rentals</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2064592/Supabase+-+MindsDB","/pages/resumedraft.action?draftId=2064592","/x/0IAf"
"2064624","current","Remove a Table - MindsDB","491527","491782","page","95373","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:30.267Z","2025-10-24T14:10:09.343Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>tables.drop()</code> method enables you to delete a table from a connected data source.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tables</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(207,34,46);"">drop</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'table_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2064624/Remove+a+Table+-+MindsDB","/pages/resumedraft.action?draftId=2064624","/x/8IAf"
"2064647","current","Get a Project - MindsDB","491527","491782","page","112880","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:33.411Z","2025-10-24T14:07:33.411Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><span>Get a project by name.</span></div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> --request</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(207,34,46);""> \</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">  --url</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/{projectName}</span></span></code></pre></div></div></div></div></div>","/spaces/SOP/pages/2064647/Get+a+Project+-+MindsDB","/pages/resumedraft.action?draftId=2064647","/x/B4Ef"
"2097153","current","Respond - MindsDB","491527","491782","page","5103","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T13:53:11.060Z","2025-10-24T13:53:11.060Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enables generating insightful and accurate responses from unified data using natural language. Whether answering questions, powering applications, or enabling automations, responses are context-aware and grounded in real-time data.</span>
<ul>
<li>
<span><strong>Natural language data queries</strong> <br />
Ask questions in natural language and receive precise answers.</span>
</li>
<li>
<span><strong>AI-powered insights</strong> <br />
Leverage integrated models to analyze, predict, and explain data in context.</span>
</li>
<li>
<span><strong>Actionable responses</strong> <br />
Drive decisions and automations directly from query results.</span>
</li>
</ul>
<span>This documentation includes the following content.</span>
<div><a href=""/mindsdb_sql/agents/agent""><div class=""px-6 py-5 relative""><div><h2>Agents</h2><div>Deploy agents specialized in answering questions over connected and unified data.</div></div></div></a><a href=""/mcp/overview""><div class=""px-6 py-5 relative""><div><h2>MCP API</h2><div>Connect to MindsDB through MCP (Model Context Protocol) for seamless interaction.</div></div></div></a></div></div>","/spaces/SOP/pages/2097153/Respond+-+MindsDB","/pages/resumedraft.action?draftId=2097153","/x/AQAg"
"2097166","current","InfluxDB - MindsDB","491527","491782","page","48666","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:55.775Z","2025-10-24T14:01:55.775Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the InfluxDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.influxdata.com/"">InfluxDB</a> is a time series database that can be used to collect data and monitor the system and devices, especially Edge devices.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect InfluxDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to InfluxDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>influxdb_url</code> is the hosted URL of InfluxDB Cloud.</li>
<li><code>influxdb_token</code> is the authentication token for the hosted InfluxDB Cloud instance.</li>
<li><code>influxdb_db_name</code> is the database name of the InfluxDB Cloud instance.</li>
<li><code>influxdb_table_name</code> is the table name of the InfluxDB Cloud instance.</li>
</ul>
<div><div><span>Please follow <a class=""link"" href=""https://docs.influxdata.com/influxdb/cloud/security/tokens/create-token/#create-a-token-in-the-influxdb-ui"">this link</a> to generate token for accessing InfluxDB API.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the InfluxDB database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> influxdb_source</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'influxdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;influxdb_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;influxdb-hosted-url&gt;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;influxdb_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;api-key-token&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;influxdb_db_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;database-name&gt;&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;influxdb_table_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;&lt;table-name&gt;&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">time</span><span style=""color: rgb(31,35,40);"">, sensor_id, temperature</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> influxdb_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tables</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> temperature </span><span style=""color: rgb(207,34,46);"">DESC</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 65</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2097166/InfluxDB+-+MindsDB","/pages/resumedraft.action?draftId=2097166","/x/DgAg"
"2097189","current","QuestDB - MindsDB","491527","491782","page","56587","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:17.658Z","2025-10-24T14:02:17.658Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the QuestDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://questdb.io/"">QuestDB</a> is a columnar time-series database with high performance ingestion and SQL analytics. It is open-source and available on the cloud.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect QuestDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to QuestDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the PostgreSQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
<li><code>public</code> stores a value of <code>True</code> or <code>False</code>. Defaults to <code>True</code> if left blank.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the QuestDB server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> questdb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'questdb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">8812</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;qdb&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;admin&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> questdb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2097189/QuestDB+-+MindsDB","/pages/resumedraft.action?draftId=2097189","/x/JQAg"
"2097210","current","SingleStore - MindsDB","491527","491782","page","57964","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:24.106Z","2025-10-24T14:02:24.106Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the SingleStore data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.singlestore.com/"">SingleStore</a> is a proprietary, cloud-native database designed for data-intensive applications. A distributed, relational, SQL database management system that features ANSI SQL support. It is known for speed in data ingest, transaction processing, and query processing.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect SingleStore to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to SingleStore.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<span>There are several optional arguments that can be used as well.</span>
<ul>
<li><code>ssl</code> is the <code>ssl</code> parameter value that indicates whether SSL is enabled (<code>True</code>) or disabled (<code>False</code>).</li>
<li><code>ssl_ca</code> is the SSL Certificate Authority.</li>
<li><code>ssl_cert</code> stores SSL certificates.</li>
<li><code>ssl_key</code> stores SSL keys.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the SingleStore database in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> singlestore_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'singlestore'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">3306</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;singlestore&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> singlestore_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">example_table</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2097210/SingleStore+-+MindsDB","/pages/resumedraft.action?draftId=2097210","/x/OgAg"
"2097231","current","Join Tables On - MindsDB","491527","491782","page","87013","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:44.986Z","2025-10-24T14:10:45.028Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>query()</code> function is executed on a data source connected to MindsDB and saved into a variable. It performs a join operation between tables.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">my_data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM my_table t JOIN another_table a ON t&hellip;=a&hellip; LIMIT 100'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2097231/Join+Tables+On+-+MindsDB","/pages/resumedraft.action?draftId=2097231","/x/TwAg"
"2097250","current","Connect a Data Source - MindsDB","491527","491782","page","90179","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:02.280Z","2025-10-24T14:09:41.628Z","","4","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_database()</code> and <code>create_database()</code> functions enable you to use the existing data source or connect a new one.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>You can use the <code>get_database()</code> method to get an existing database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">mysql_demo_db </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.get_database(</span><span style=""color: rgb(10,48,105);"">'mysql_demo_db'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Or, the <code>create_database()</code> method to connect a new data source to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">mysql_demo_db </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.create_database(</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    engine</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;mysql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;mysql_demo_db&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    connection_args</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;MindsDBUser123!&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;3306&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;public&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2097250/Connect+a+Data+Source+-+MindsDB","/pages/resumedraft.action?draftId=2097250","/x/YgAg"
"2129921","current","Confluence - MindsDB","491527","491782","page","18975","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:00.452Z","2025-10-24T14:00:00.452Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.atlassian.com/software/confluence"">Confluence</a>, a popular collaboration and documentation tool developed by Atlassian.
The integration allows MindsDB to access data from Confluence and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Confluence from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/confluence_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> confluence_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'confluence'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;api_base&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://example.atlassian.net&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;john.doe@example.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>api_base</code>: The base URL for your Confluence instance/server.</li>
<li><code>username</code>: The email address associated with your Confluence account.</li>
<li><code>password</code>: The API token generated for your Confluence account.</li>
</ul>
<div><div><span>Refer this <a class=""link"" href=""https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/"">guide</a> for instructions on how to create API tokens for your account.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> confluence_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The above example utilize <code>confluence_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables</span></h2>
<ul>
<li><code>spaces</code>: The table containing information about the spaces in Confluence.</li>
<li><code>pages</code>: The table containing information about the pages in Confluence.</li>
<li><code>blogposts</code>: The table containing information about the blog posts in Confluence.</li>
<li><code>whiteboards</code>: The table containing information about the whiteboards in Confluence.</li>
<li><code>databases</code>: The table containing information about the databases in Confluence.</li>
<li><code>tasks</code>: The table containing information about the tasks in Confluence.</li>
</ul></div>","/spaces/SOP/pages/2129921/Confluence+-+MindsDB","/pages/resumedraft.action?draftId=2129921","/x/AYAg"
"2129950","current","Docker Hub - MindsDB","491527","491782","page","19938","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:02.154Z","2025-10-24T14:00:02.154Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Docker Hub repository to MindsDB.</span>
<span><a class=""link"" href=""https://hub.docker.com/"">Docker Hub</a> is the world&rsquo;s easiest way to create, manage, and deliver your team&rsquo;s container applications.</span>
<span>Data from Docker Hub can be utilized within MindsDB to train models and make predictions about Docker Hub repositories.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Docker Hub to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Docker Hub.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <code>requests</code> library that makes http calls to <a class=""link"" href=""https://docs.docker.com/docker-hub/api/latest/#tag/resources"">https://docs.docker.com/docker-hub/api/latest/#tag/resources</a>.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>username</code>: Username used to login to DockerHub.</li>
<li><code>password</code>: Password used to login to DockerHub.</li>
</ul>
<div><div><span>Read about creating an account <a class=""link"" href=""https://hub.docker.com/"">here</a>.</span></div></div>
<span>Here is how to connect to Docker Hub using MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> dockerhub_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'dockerhub'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;username&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Now, you can query Docker Hub as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> dockerhub_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">repo_images_summary</span><span style=""color: rgb(207,34,46);""> WHERE</span><span style=""color: rgb(207,34,46);""> namespace</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;docker&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> repository</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">&quot;trusted-registry-nginx&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Both the <code>namespace</code> and <code>repository</code> parameters are required in the WHERE clause.</span></div></div></div>","/spaces/SOP/pages/2129950/Docker+Hub+-+MindsDB","/pages/resumedraft.action?draftId=2129950","/x/HoAg"
"2129973","current","Twitter - MindsDB","491527","491782","page","31527","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:56.006Z","2025-10-24T14:00:56.006Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Twitter accounts to MindsDB.</span>
<span><a class=""link"" href=""https://twitter.com/"">Twitter</a> is a widely recognized social media platform and microblogging service that allows users to share short messages called tweets.</span>
<span>The Twitter handler enables you to fetch tweets and create replies utilizing AI models wthin MindsDB. Furthermore, you can automate the process of fetching tweets, preparing replies, and sending replies to Twitter.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Twitter to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Twitter.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>To connect a Twitter account to MindsDB, you need a Twitter developer account.</span>
<div><div><span>Please note that it requires a paid developer account.</span><span>We recommend you use the <a class=""link"" href=""https://developer.twitter.com/en/support/twitter-api/developer-account"">Elevated access</a> allowing you to pull 2m tweets and to avoid <em>parameters or authentication issue</em> error you might get sometimes. You can check <a class=""link"" href=""https://medium.com/@skillcate/set-up-twitter-api-to-pull-2m-tweets-month-44d004c6f7ce"">this step-by-step guide</a> describing how to apply for the Elevated access.</span></div></div>
<span>If you don&rsquo;t already have a Twitter developer account, follow the steps in the video below to apply for one.</span>
<div class=""leading-tight text-left""><p>How to Apply for a Twitter Developer Account</p></div><div><span><a class=""link"" href=""https://developer.twitter.com/apply-for-access"">Begin here to apply for a Twitter developer account</a></span><span>Watch this <a class=""link"" href=""https://www.youtube.com/watch?v=qVe7PeC0sUQ"">step-by-step video</a> explaining the process.</span><span>When presented with questions under <em>How will you use the Twitter API or Twitter Data?</em>, use answers similar to the ones below (tweak to fit your exact use case). The more thorough your answers are, the more likely it is your account will get approved.</span><span><strong>Intended Usage (In Your Words)</strong></span><span><em>I have a blog and want to educate users how to use the Twitter API with MindsDB.</em></span><span><em>I will read tweets that mention me and use them with MindsDB machine learning to generate responses. I plan to post tweets 2-3 times a day and keep using Twitter like I normally would.</em></span><span><strong>Are you planning to analyze Twitter data?</strong></span><span><em>I plan to build machine learning algorithms based on Twitter data. I am interested in doing sentiment analysis and topic analysis.</em></span><span><em>I will potentially extract:</em></span><ul>
<li><em>Tweet text</em></li>
<li><em>Favorite count and retweet count</em></li>
<li><em>Hashtags and mentions</em></li>
</ul><span><strong>Will your app use Tweet, Retweet, Like, Follow, or Direct Message functionality?</strong></span><span><em>I will use the Twitter API to post responses to tweets that mention me.</em></span><span><em>I will have word filters to make sure that I never share offensive or potentially controversial subjects.</em></span><span><strong>Do you plan to display Tweets or aggregate data about Twitter content outside Twitter?</strong></span><span><em>I plan to share aggregate data as examples for users of my upcoming blog. I don&rsquo;t intend to create an automated dashboard that consumes a lot of Twitter API calls.</em></span><span><em>Every API call will be done locally, or automated on a simple web server. Aggregate of data will be for educational purposes only.</em></span><span><strong>Will your product, service, or analysis make Twitter content or derived information available to a government entity?</strong></span><span>Answer NO to this one.</span></div>
<span>If you already have a Twitter developer account, you need to generate API keys following the instructions below or heading to the <a class=""link"" href=""https://developer.twitter.com/en"">Twitter developer website</a>.</span>
<div class=""leading-tight text-left""><p>How to Generate API Keys</p></div><div><ul>
<li>Create an application with Read/Write permissions activated:
<ul>
<li>Open <a class=""link"" href=""https://developer.twitter.com/en/portal/projects-and-apps"">developer portal</a>.</li>
<li>Select the <code>Add app</code> button to create a new app.</li>
<li>Select the <code>Create new</code> button.</li>
<li>Select <code>Production</code> and give it a name.</li>
<li>Copy and populate the following in the below <code>CREATE DATABASE</code> statement:
<ul>
<li><code>Bearer Token</code> as a value of the <code>bearer_token</code> parameter.</li>
<li><code>API Key</code> as a value of the <code>consumer_key</code> parameter.</li>
<li><code>API Key Secret</code> as a value of the <code>consumer_secret</code> parameter.</li>
</ul>
</li>
</ul>
</li>
<li>Setup user authentication settings:
<ul>
<li>Click <code>Setup</code> under <code>User authentication settings</code>:</li>
<li>On <code>Permissions</code>, select <code>Read and Write</code>.</li>
<li>On <code>Type of app</code>, select <code>Web App</code>, <code>Automated App or Bot</code>.</li>
<li>On <code>App info</code>, provide any URL for the callback URL and website URL (you can use the URL of this page).</li>
<li>Click <code>Save</code>.</li>
</ul>
</li>
<li>Generate access tokens:
<ul>
<li>Once you are back in the app settings, click <code>Keys and Tokens</code>:</li>
<li>Generate <code>Access Token</code> and <code>Access Token Secret</code> and populate it in the below <code>CREATE DATABASE</code> statement:
<ul>
<li><code>Access Token</code> as a value of the <code>access_token</code> parameter.</li>
<li><code>Access Token Secret</code> as a value of the <code>access_token_secret</code> parameter.</li>
</ul>
</li>
</ul>
</li>
</ul></div>
<span>Once you have all the tokens and keys, here is how to connect your Twitter account to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> my_twitter</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'twitter'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;bearer_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;twitter bearer token&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;consumer_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;twitter consumer key&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;consumer_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;twitter consumer key secret&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;access_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;twitter access token&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">	  &quot;access_token_secret&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;twitter access token secret&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The <code>my_twitter</code> database contains a table called <code>tweets</code> by default.</span>
<span>Here is how to search tweets containing <code>mindsdb</code> keyword:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> id, created_at, author_username, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> my_twitter</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tweets</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> query </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> '(mindsdb OR #mindsdb) -is:retweet -is:reply'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">AND</span><span style=""color: rgb(31,35,40);""> created_at </span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(10,48,105);""> '2023-02-16'</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 20</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>Please note that we can see only recent tweets from the past seven days. The <code>created_at</code> column condition is skipped if the provided date is earlier than seven days.</span></div></div>
<span>Alternatively, you can use a Twitter native query, as below:</span>

<div><div><span>To learn more about native queries in MindsDB, visit our docs <a class=""link"" href=""/sql/native-queries"">here</a>.</span></div></div>
<span>Here is how to write tweets:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> my_twitter</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">tweets</span><span style=""color: rgb(31,35,40);""> (reply_to_tweet_id, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    (</span><span style=""color: rgb(5,80,174);"">1626198053446369280</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'MindsDB is great! now its super simple to build ML powered apps'</span><span style=""color: rgb(31,35,40);"">),</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    (</span><span style=""color: rgb(5,80,174);"">1626198053446369280</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'Holy!! MindsDB is the best thing they have invented for developers doing ML'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/twitter_handler/README.md"">this page</a>.</span></div></div>
<div><div><span><strong>What&rsquo;s next?</strong></span><span>Check out the <a class=""link"" href=""/sql/tutorials/twitter-chatbot"">tutorial on how to create a Twitter chatbot</a> to see one of the interesting applications of this integration.</span></div></div></div>","/spaces/SOP/pages/2129973/Twitter+-+MindsDB","/pages/resumedraft.action?draftId=2129973","/x/NYAg"
"2130006","current","Apache Hive - MindsDB","491527","491782","page","37166","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:13.481Z","2025-10-24T14:01:13.481Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://hive.apache.org/"">Apache Hive</a>, a data warehouse software project built on top of Apache Hadoop for providing data query and analysis. Hive gives an SQL-like interface to query data stored in various databases and file systems that integrate with Hadoop.
The integration allows MindsDB to access data from Apache Hive and enhance Apache Hive with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Apache Hive to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Apache Hive from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/hive_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> hive_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'hive'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;username&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;default&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>host</code>: The hostname, IP address, or URL of the Apache Hive server.</li>
<li><code>database</code>: The name of the Apache Hive database to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>username</code>: The username for the Apache Hive database.</li>
<li><code>password</code>: The password for the Apache Hive database.</li>
<li><code>port</code>: The port number for connecting to the Apache Hive server. Default is <code>10000</code>.</li>
<li><code>auth</code>: The authentication mechanism to use. Default is <code>CUSTOM</code>. Other options are <code>NONE</code>, <code>NOSASL</code>, <code>KERBEROS</code> and <code>LDAP</code>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> hive_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run HiveQL queries directly on the connected Apache Hive database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> hive_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(31,35,40);""> src</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                SELECT</span><span style=""color: rgb(31,35,40);""> TRANSFORM(</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                USING</span><span style=""color: rgb(10,48,105);""> 'mapper'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                AS</span><span style=""color: rgb(207,34,46);""> value</span><span style=""color: rgb(31,35,40);"">, count) mapped</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">          SELECT</span><span style=""color: rgb(5,80,174);""> cast</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(207,34,46);""> as</span><span style=""color: rgb(31,35,40);""> double) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(207,34,46);""> value</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">cast</span><span style=""color: rgb(31,35,40);"">(count </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(207,34,46);""> int</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> count</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">          SORT </span><span style=""color: rgb(207,34,46);"">BY</span><span style=""color: rgb(207,34,46);""> value</span><span style=""color: rgb(31,35,40);"">, count) sorted</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(31,35,40);""> TRANSFORM(</span><span style=""color: rgb(207,34,46);"">value</span><span style=""color: rgb(31,35,40);"">, count)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    USING</span><span style=""color: rgb(10,48,105);""> 'reducer'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    AS</span><span style=""color: rgb(31,35,40);""> whatever</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>hive_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Apache Hive database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure that the Apache Hive server is running and accessible</li>
<li>Confirm that host, port, user, and password are correct. Try a direct Apache Hive connection using a client like DBeaver.</li>
<li>Test the network connection between the MindsDB host and the Apache Hive server.</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2130006/Apache+Hive+-+MindsDB","/pages/resumedraft.action?draftId=2130006","/x/VoAg"
"2130033","current","ClickHouse - MindsDB","491527","491782","page","39683","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:24.035Z","2025-10-24T14:01:24.035Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://clickhouse.com/docs/en/intro"">ClickHouse</a>, a high-performance, column-oriented SQL database management system (DBMS) for online analytical processing (OLAP).
The integration allows MindsDB to access data from ClickHouse and enhance ClickHouse with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect ClickHouse to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to ClickHouse from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/clickhouse_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> clickhouse_conn</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'clickhouse'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;8443&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;root&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mypass&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;test_data&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;protocol&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;https&quot;</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>host</code>: is the hostname or IP address of the ClickHouse server.</li>
<li><code>port</code>: is the TCP/IP port of the ClickHouse server.</li>
<li><code>user</code>: is the username used to authenticate with the ClickHouse server.</li>
<li><code>password</code>: is the password to authenticate the user with the ClickHouse server.</li>
<li><code>database</code>: defaults to <code>default</code>. It is the database name to use when connecting with the ClickHouse server.</li>
<li><code>protocol</code>: defaults to <code>native</code>. It is an optional parameter. Its supported values are <code>native</code>, <code>http</code> and <code>https</code>.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>The following usage examples utilize the connection to ClickHouse made via the <code>CREATE DATABASE</code> statement and named <code>clickhouse_conn</code>.</span>
<span>Retrieve data from a specified table by providing the integration and table name.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> clickhouse_conn</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the ClickHouse database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure that the ClickHouse server is running and accessible</li>
<li>Confirm that host, port, user, and password are correct. Try a direct MySQL connection.</li>
<li>Test the network connection between the MindsDB host and the ClickHouse server.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>Slow Connection Initialization</code></span><ul>
<li><strong>Symptoms</strong>: Connecting to the ClickHouse server takes an exceptionally long time, or connections hang without completing</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure that you are using the appropriate protocol (http, https, or native) for your ClickHouse setup. Misconfigurations here can lead to significant delays.</li>
<li>Ensure that firewalls or security groups (in cloud environments) are properly configured to allow traffic on the necessary ports (as 8123 for HTTP or 9000 for native).</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces, reserved words or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2130033/ClickHouse+-+MindsDB","/pages/resumedraft.action?draftId=2130033","/x/cYAg"
"2130054","current","OrioleDB - MindsDB","491527","491782","page","54368","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:12.913Z","2025-10-24T14:02:12.913Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the OrioleDB data handler for MindsDB.</span>
<span><a class=""link"" href=""https://www.orioledata.com/"">OrioleDB</a> is a new storage engine for PostgreSQL, bringing a modern approach to database capacity, capabilities, and performance to the world&rsquo;s most-loved database platform. It consists of an extension, building on the innovative table access method framework and other standard Postgres extension interfaces. By extending and enhancing the current table access methods, OrioleDB opens the door to a future of more powerful storage models that are optimized for cloud and modern hardware architectures.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect OrioleDB to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to OrioleDB.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the PostgreSQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>server</code> is the OrioleDB server.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the OrioleDB server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> orioledb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'orioledb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;orioledb_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">55505</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;server&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;server_name&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;oriole_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>You can use this established connection to query your table as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> orioledb_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2130054/OrioleDB+-+MindsDB","/pages/resumedraft.action?draftId=2130054","/x/hoAg"
"2130075","current","MindsDB and Grafana - MindsDB","491527","491782","page","73368","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:39.944Z","2025-10-24T14:03:39.944Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span><a class=""link"" href=""https://grafana.com/"">Grafana</a> is an open-source analytics and interactive visualization web application
that allows users to ingest data from various sources, query this data, and display it on customizable charts for easy analysis.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-to-connect"">‚Äã</a></div><span class=""cursor-pointer"">How to Connect</span></h2>
<span>To begin, set up Grafana by following one of the methods outlined in the <a class=""link"" href=""https://grafana.com/docs/grafana/latest/setup-grafana/installation/#supported-operating-systems"">Grafana Installation Documentation</a>.</span>
<span>Once Grafana is successfully set up in your environment, navigate to the Connections section, click on Add new connection, and select the MySQL plugin
, as shown below.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""742"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/grafana_1.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=67e876353cc5dd88fb7728d4e49d1fdc"" style="""" width=""1916"" /></span></span></p>
<span>Now it&rsquo;s time to fill in the connection details.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1397"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/grafana_2.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=b85cb3812d0dee1ba9e45dc1a123a8ac"" style="""" width=""1920"" /></span></span></p>
<span>There are three options, as below.</span>
<div class=""tabs tabs tab-container""><ul><li class=""cursor-pointer""><div> Local MindsDB</div></li></ul><div><span>You can connect to your local MindsDB. To do that, please use the connection details below:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>Host: `127.0.0.1:47335`</span></span>
<span class=""line""><span>Username: `mindsdb`</span></span>
<span class=""line""><span>Password: &lt;leave it empty&gt;</span></span>
<span class=""line""><span>Database: &lt;leave it empty&gt;</span></span>
</code></pre></div></div></div></div></div>
<span>Now we are ready to Save &amp; test the connection.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#testing-the-connection"">‚Äã</a></div><span class=""cursor-pointer"">Testing the Connection</span></h2>
<span>Click on the <code>Save &amp; test</code> button to check if all the provided data
allows you to connect to MindsDB.</span>
<span>On success, you should see the message, as below.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""247"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/grafana_3.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=885e29fc28c0a93e47cf52df0096fff7"" style="""" width=""1588"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#examples"">‚Äã</a></div><span class=""cursor-pointer"">Examples</span></h2>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#querying"">‚Äã</a></div><span class=""cursor-pointer"">Querying</span></h3>
<span>To verify the functionality of our MindsDB database connection,
you can query data in the Explore view. Use the text edit mode to compose your queries.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW FULL DATABASES;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""876"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/grafana_4.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=b3fec481737b5ff45341126faaaf78cf"" style="""" width=""1920"" /></span></span></p>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#visual-query-builder"">‚Äã</a></div><span class=""cursor-pointer"">Visual Query Builder</span></h3>
<span>Now you can build a dashboard with a MindsDB database connection.
Example query :</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> mysql_demo_db</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;mysql&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;MindsDBUser123!&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;samples.mindsdb.com&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;3306&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;public&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   };</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> mysql_demo_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">air_passengers</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""877"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/grafana_5.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=393653661bd733d5821f28505438914c"" style="""" width=""1913"" /></span></span></p>
<div><div><span>How to <a class=""link"" href=""/faqs/whitelist-ips"">whitelist MindsDB Cloud IP address</a>?</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you check out our <strong>Tutorials</strong> and
<strong>Community Tutorials</strong> sections, where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/2130075/MindsDB+and+Grafana+-+MindsDB","/pages/resumedraft.action?draftId=2130075","/x/m4Ag"
"2130096","current","Create a Project - MindsDB","491527","491782","page","91349","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:10.029Z","2025-10-24T14:09:47.514Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>get_project()</code> and <code>create_project()</code> functions fetch an existing project or create a new one.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Use the <code>get_project()</code> method to get the default <code>mindsdb</code> project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.get_project()</span></span>
</code></pre></div></div></div>
<span>Use the <code>get_project()</code> method to get other project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.get_project(</span><span style=""color: rgb(10,48,105);"">'project_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Use the <code>create_project()</code> method to create a new project:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.create_project(</span><span style=""color: rgb(10,48,105);"">'project_name'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2130096/Create+a+Project+-+MindsDB","/pages/resumedraft.action?draftId=2130096","/x/sIAg"
"2130115","current","Get a Data Source - MindsDB","491527","491782","page","106986","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:38.527Z","2025-10-24T14:08:48.260Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>You can save a data sources into a variable using the code below.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>const db = await MindsDB.Databases.getDatabase('mysql_datasource');</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2130115/Get+a+Data+Source+-+MindsDB","/pages/resumedraft.action?draftId=2130115","/x/w4Ag"
"2162689","current","Sendinblue - MindsDB","491527","491782","page","27946","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:45.475Z","2025-10-24T14:00:45.475Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>In this section, we present how to connect Sendinblue to MindsDB.</span>
<span><a class=""link"" href=""https://www.brevo.com/"">Brevo (formerly Sendinblue)</a> is an all-in-one platform to automate your marketing campaigns over Email, SMS, WhatsApp or chat.</span>
<span>Data from Sendinblue can be used to understand the impact of email marketing.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Sendinblue to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Sendinblue.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>This handler is implemented using the <a class=""link"" href=""https://github.com/sendinblue/APIv3-python-library"">sib-api-v3-sdk</a> library, a Python library that wraps Sendinblue APIs.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>api_key</code>: a required Sendinblue API key to use for authentication</li>
</ul>
<div><div><span>Check out <a class=""link"" href=""https://developers.brevo.com/docs"">this guide</a> on how to create the Sendinblue API key.</span><span>It is recommended to use the API key to avoid the <code>API rate limit exceeded</code> error.</span></div></div>
<span>Here is how to connect the SendinBlue to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> sib_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'sendinblue'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">  &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xkeysib-...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Use the established connection to query your database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> sib_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">email_campaigns</span></span>
</code></pre></div></div></div>
<span>Run more advanced queries:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);"">  id, </span><span style=""color: rgb(207,34,46);"">name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> sib_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">email_campaigns</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> status</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> 'sent'</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(207,34,46);""> name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 5</span></span>
</code></pre></div></div></div>
<div><div><span>For more information about available actions and development plans, visit <a class=""link"" href=""https://github.com/mindsdb/mindsdb/blob/main/mindsdb/integrations/handlers/sendinblue_handler/README.md"">this page</a>.</span></div></div></div>","/spaces/SOP/pages/2162689/Sendinblue+-+MindsDB","/pages/resumedraft.action?draftId=2162689","/x/AQAh"
"2162716","current","Amazon DynamoDB - MindsDB","491527","491782","page","34387","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:04.673Z","2025-10-24T14:01:04.673Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://aws.amazon.com/dynamodb/"">Amazon DynamoDB</a>, a serverless, NoSQL database service that enables you to develop modern applications at any scale.</span>
<div><div><span>This data source integration is thread-safe, utilizing a connection pool where each thread is assigned its own connection. When handling requests in parallel, threads retrieve connections from the pool as needed.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure that MindsDB is installed locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your Amazon DynamoDB from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> dynamodb_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'dynamodb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;aws_access_key_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;PCAQ2LJDOSWLNSQKOCPW&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;aws_secret_access_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;U/VjewPlNopsDmmwItl34r2neyC6WhZpUiip57i&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;region_name&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;us-east-1&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>aws_access_key_id</code>: The AWS access key that identifies the user or IAM role.</li>
<li><code>aws_secret_access_key</code>: The AWS secret access key that identifies the user or IAM role.</li>
<li><code>region_name</code>: The AWS region to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>aws_session_token</code>: The AWS session token that identifies the user or IAM role. This becomes necessary when using temporary security credentials.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration name and the table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> dynamodb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Indexes can also be queried by adding a third-level namespace:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> dynamodb_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span><span style=""color: rgb(31,35,40);"">.index_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>The queries issued to Amazon DynamoDB are in PartiQL, a SQL-compatible query language for Amazon DynamoDB. For more information, refer to the <a class=""link"" href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ql-reference.html"">PartiQL documentation</a>.</span><span>There are a few limitations to keep in mind when querying data from Amazon DynamoDB (some of which are specific to PartiQL):</span><ul>
<li>The <code>LIMIT</code>, <code>GROUP BY</code> and <code>HAVING</code> clauses are not supported in PartiQL <code>SELECT</code> statements. Furthermore, subqueries and joins are not supported either. Refer to the <a class=""link"" href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ql-reference.select.html"">PartiQL documentation for SELECT statements</a> for more information.</li>
<li><code>INSERT</code> statements are not supported by this integration. However, this can be overcome by issuing a &lsquo;native query&rsquo; via an established connection. An example of this is provided below.</li>
</ul></div></div>
<span>Run PartiQL queries directly on Amazon DynamoDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> dynamodb_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">    --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    INSERT INTO</span><span style=""color: rgb(10,48,105);""> &quot;Music&quot;</span><span style=""color: rgb(207,34,46);""> value</span><span style=""color: rgb(31,35,40);""> {</span><span style=""color: rgb(10,48,105);"">'Artist'</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">'Acme Band1'</span><span style=""color: rgb(31,35,40);"">,</span><span style=""color: rgb(10,48,105);"">'SongTitle'</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">'PartiQL Rocks'</span><span style=""color: rgb(31,35,40);"">}</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>dynamodb_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Amazon S3  DynamoDB.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Confirm that provided AWS credentials are correct. Try making a direct connection to the Amazon DynamoDB using the AWS CLI.</li>
<li>Ensure a stable network between MindsDB and AWS.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2162716/Amazon+DynamoDB+-+MindsDB","/pages/resumedraft.action?draftId=2162716","/x/HAAh"
"2162739","current","Google BigQuery - MindsDB","491527","491782","page","46012","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:01:44.972Z","2025-10-24T14:01:44.972Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://cloud.google.com/bigquery?hl=en"">Google BigQuery</a>, a fully managed, AI-ready data analytics platform that helps you maximize value from your data.
The integration allows MindsDB to access data stored in the BigQuery warehouse and enhance it with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect BigQuery to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to your BigQuery warehouse from MindsDB by executing the following SQL command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> bigquery_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   engine </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;bigquery&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   parameters </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;project_id&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;bgtest-1111&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;dataset&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;mydataset&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;service_account_keys&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;/tmp/keys.json&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>project_id</code>: The globally unique identifier for your project in Google Cloud where BigQuery is located.</li>
<li><code>dataset</code>: The default dataset to connect to.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>service_account_keys</code>: The full path to the service account key file.</li>
<li><code>service_account_json</code>: The content of a JSON file defined by the <code>service_account_keys</code> parameter.</li>
</ul>
<div><div><span>One of <code>service_account_keys</code> or <code>service_account_json</code> has to be provided to
establish a connection to BigQuery.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table in the default dataset by providing the integration name and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> bigquery_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Retrieve data from a specified table in a different dataset by providing the integration name, dataset name and table name:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> bigquery_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">dataset_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run SQL in any supported BigQuery dialect directly on the connected BigQuery database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> bigquery_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">   --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   FROM</span><span style=""color: rgb(31,35,40);""> t1</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   WHERE</span><span style=""color: rgb(5,80,174);""> t1</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">a</span><span style=""color: rgb(207,34,46);""> IN</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> t2</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">a</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">                  FROM</span><span style=""color: rgb(31,35,40);""> t2 </span><span style=""color: rgb(207,34,46);"">FOR</span><span style=""color: rgb(207,34,46);""> SYSTEM_TIME</span><span style=""color: rgb(207,34,46);""> AS</span><span style=""color: rgb(31,35,40);""> OF </span><span style=""color: rgb(5,80,174);"">t1</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">timestamp_column</span><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>bigquery_datasource</code> as the datasource name, which
is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting-guide"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting Guide</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the BigQuery warehouse.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure that the Google Cloud account is active and the Google BigQuery service is enabled.</li>
<li>Confirm that the project ID, dataset and service account credentials are correct. Try a direct BigQuery connection using a client like DBeaver.</li>
<li>Ensure a stable network between MindsDB and Google BigQuery.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.
Examples:
_ Incorrect: SELECT _ FROM integration.travel data
_ Incorrect: SELECT _ FROM integration.&lsquo;travel data&rsquo;
_ Correct: SELECT _ FROM integration.`travel data`</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2162739/Google+BigQuery+-+MindsDB","/pages/resumedraft.action?draftId=2162739","/x/MwAh"
"2162758","current","OceanBase - MindsDB","491527","491782","page","52617","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:07.900Z","2025-10-24T14:02:07.900Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the OceanBase data handler for MindsDB.</span>
<span>OceanBase is a distributed relational database. It is the only distributed database in the world that has broken both TPC-C and TPC-H records. OceanBase adopts an independently developed integrated architecture, which encompasses both the scalability of a distributed architecture and the performance advantage of a centralized architecture. It supports hybrid transaction/analytical processing (HTAP) with one engine. Its features include strong data consistency, high availability, high performance, online scalability, high compatibility with SQL and mainstream relational databases, transparency to applications, and a high cost/performance ratio.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect OceanBase to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to OceanBase.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#implementation"">‚Äã</a></div><span class=""cursor-pointer"">Implementation</span></h2>
<span>This handler is implemented by extending the MySQL data handler.</span>
<span>The required arguments to establish a connection are as follows:</span>
<ul>
<li><code>user</code> is the database user.</li>
<li><code>password</code> is the database password.</li>
<li><code>host</code> is the host name, IP address, or URL.</li>
<li><code>port</code> is the port used to make TCP/IP connection.</li>
<li><code>database</code> is the database name.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>In order to make use of this handler and connect to the OceanBase server in MindsDB, the following syntax can be used:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> oceanbase_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'oceanbase'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;127.0.0.1&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;oceanbase_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;port&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(5,80,174);"">2881</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;oceanbase_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  };</span></span>
</code></pre></div></div></div>
<span>Now, you can use this established connection to query your database as follows:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> oceanbase_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">demo_table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2162758/OceanBase+-+MindsDB","/pages/resumedraft.action?draftId=2162758","/x/RgAh"
"2162777","current","The FROM_ENV() Function - MindsDB","491527","491782","page","78642","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:00.534Z","2025-10-24T14:04:00.534Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides the <code>FROM_ENV()</code> function that lets users pull values from the environment variables into MindsDB.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Here is how to use the <code>FROM_ENV()</code> function.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">FROM_ENV(</span><span style=""color: rgb(10,48,105);"">&quot;MDB_MY_ENV_VAR&quot;</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Note that due to security concerns, <strong>only the environment variables with name starting with <code>MDB_</code> can be extracted with the <code>from_env()</code> function</strong>.</span>
<span>Learn more about <a class=""link"" href=""/mindsdb_sql/functions/variables"">MindsDB variables here</a>.</span></div>","/spaces/SOP/pages/2162777/The+FROM_ENV+Function+-+MindsDB","/pages/resumedraft.action?draftId=2162777","/x/WQAh"
"2162796","current","The TO_MARKDOWN() Function - MindsDB","491527","491782","page","79924","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:09.048Z","2025-10-24T14:04:09.048Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB provides the <code>TO_MARKDOWN()</code> function that lets users extract the content of their documents in markdown by simply specifying the document path or URL. This function is especially useful for passing the extracted content of documents through LLMs or for storing them in a <a class=""link"" href=""/mindsdb_sql/agents/knowledge-bases"">Knowledge Base</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#configuration"">‚Äã</a></div><span class=""cursor-pointer"">Configuration</span></h2>
<span>The <code>TO_MARKDOWN()</code> function supports different file formats and methods of passing documents into it, as well as an LLM required for processing documents.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-file-formats"">‚Äã</a></div><span class=""cursor-pointer"">Supported File Formats</span></h3>
<span>The <code>TO_MARKDOWN()</code> function supports PDF, XML, and Nessus file formats. The documents can be provided from URLs, file storage, or Amazon S3 storage.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-llms"">‚Äã</a></div><span class=""cursor-pointer"">Supported LLMs</span></h3>
<span>The <code>TO_MARKDOWN()</code> function requires an LLM to process the document content into the Markdown format.</span>
<span>The supported LLM providers include:</span>
<ul>
<li>OpenAI</li>
<li>Azure OpenAI</li>
<li>Google</li>
</ul>
<div><div><span>The model you select must support multi-modal inputs, that is, both images and text. For example, OpenAI&rsquo;s gpt-4o is a supported multi-modal model.</span></div></div>
<span>User can provide an LLM using one of the below methods:</span>
<ol>
<li>
<span>Set the default model in the Settings of MindsDB Editor.</span>
</li>
<li>
<span>Set the default model in the <a class=""link"" href=""/setup/custom-config#default-llm"">MindsDB configuration file</a>.</span>
</li>
<li>
<span>Use environment variables defined below to set an LLM specifically for the <code>TO_MARKDOWN()</code> function.</span>
<span>The <code>TO_MARKDOWN_FUNCTION_PROVIDER</code> environment variable defines the selected provider, which is one of <code>openai</code>, <code>azure_openai</code>, or <code>google</code>.</span>
<div><div class=""leading-tight text-left""><p>OpenAI</p></div><div><span>Here are the environment variables for the OpenAI provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>TO_MARKDOWN_FUNCTION_API_KEY (required)</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MAX_RETRIES</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_BASE_URL</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_API_ORGANIZATION</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_REQUEST_TIMEOUT</span></span>
</code></pre></div></div></div></div><div class=""leading-tight text-left""><p>Azure OpenAI</p></div><div><span>Here are the environment variables for the Azure OpenAI provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>TO_MARKDOWN_FUNCTION_API_KEY (required)</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_BASE_URL (required)</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_API_VERSION (required)</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MAX_RETRIES</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_API_ORGANIZATION</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_REQUEST_TIMEOUT</span></span>
</code></pre></div></div></div></div><div class=""leading-tight text-left""><p>Google</p></div><div><span>Here are the environment variables for the Google provider:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span>TO_MARKDOWN_FUNCTION_API_KEY</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MODEL_NAME</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_TEMPERATURE</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_MAX_TOKENS</span></span>
<span class=""line""><span>TO_MARKDOWN_FUNCTION_REQUEST_TIMEOUT</span></span>
</code></pre></div></div></div></div></div>
</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>You can use the <code>TO_MARKDOWN()</code> function to extract the content of your documents in markdown format. The arguments for this function are:</span>
<ul>
<li><code>file_path_or_url</code>: The path or URL of the document you want to extract content from.</li>
</ul>
<div><div class=""leading-tight text-left""><p>From Amazon S3</p></div><div><span>The following example shows how to use the <code>TO_MARKDOWN()</code> function with a PDF document from <a class=""link"" href=""/integrations/data-integrations/amazon-s3"">Amazon S3 storage connected to MindsDB</a>.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> TO_MARKDOWN(public_url) </span><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> s3_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">files</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div><span>Here are the steps for passing files from Amazon S3 into TO_MARKDOWN().</span><ol>
<li>Connect Amazon S3 to MindsDB following <a class=""link"" href=""/integrations/data-integrations/amazon-s3"">this instruction</a>.</li>
<li>The <code>public_url</code> of the file is generated in the <code>s3_datasource.files</code> table upon connecting the Amazon S3 data source to MindsDB.</li>
<li>Upon running the above query, the <code>public_url</code> of the file is selected from the <code>s3_datasource.files</code> table.</li>
</ol></div><div class=""leading-tight text-left""><p>From URL</p></div><div><span>The following example shows how to use the <code>TO_MARKDOWN()</code> function with a PDF document from URL.</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(31,35,40);""> TO_MARKDOWN(</span><span style=""color: rgb(10,48,105);"">'https://www.princexml.com/howcome/2016/samples/invoice/index.pdf'</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div><span>Here is the output:</span><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| to_markdown                                                                                                                                                                                                                                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(10,48,105);"">```markdown                                                                                                                                                                                                                                  |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| # Invoice                                                                                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| YesLogic Pty. Ltd.                                                                                                                                                                                                                           |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| 7 / 39 Bouverie St                                                                                                                                                                                                                           |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Carlton VIC 3053                                                                                                                                                                                                                             |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Australia                                                                                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| www.yeslogic.com                                                                                                                                                                                                                             |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| ABN 32 101 193 560                                                                                                                                                                                                                           |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Customer Name                                                                                                                                                                                                                                |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Street                                                                                                                                                                                                                                       |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Postcode City                                                                                                                                                                                                                                |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Country                                                                                                                                                                                                                                      |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Invoice date: | Nov 26, 2016                                                                                                                                                                                                                 |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| --- | ---                                                                                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Invoice number: | 161126                                                                                                                                                                                                                     |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Payment due: | 30 days after invoice date                                                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| | Description               | From        | Until       | Amount     |                                                                                                                                                                       |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| |---------------------------|-------------|-------------|------------|                                                                                                                                                                       |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| | Prince Upgrades &amp; Support | Nov 26, 2016 | Nov 26, 2017 | USD $950.00 |                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| | Total                     |             |             | USD $950.00 |                                                                                                                                                                      |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Please transfer amount to:                                                                                                                                                                                                                   |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank account name: | Yes Logic Pty Ltd                                                                                                                                                                                                       |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| --- | ---                                                                                                                                                                                                                                    |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Name of Bank: | Commonwealth Bank of Australia (CBA)                                                                                                                                                                                         |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank State Branch (BSB): | 063010                                                                                                                                                                                                            |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank State Branch (BSB): | 063010                                                                                                                                                                                                            |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank State Branch (BSB): | 063019                                                                                                                                                                                                            |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank account number: | 13201652                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank SWIFT code: | CTBAAU2S                                                                                                                                                                                                                  |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| Bank address: | 231 Swanston St, Melbourne, VIC 3000, Australia                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| The BSB number identifies a branch of a financial institution in Australia. When transferring money to Australia, the BSB number is used together with the bank account number and the SWIFT code. Australian banks do not use IBAN numbers. |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">|                                                                                                                                                                                                                                              |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| www.yeslogic.com                                                                                                                                                                                                                             |</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">| ```</span><span style=""color: rgb(31,35,40);"">                                                                                                                                                                                                                                          |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span>
</code></pre></div></div></div></div></div>
<span>The content of each PDF page is intelligently extracted by first assessing how visually complex the page is. Based on this assessment, the system decides whether traditional text parsing is sufficient or if the page should be processed using an LLM.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage-with-knowledge-bases"">‚Äã</a></div><span class=""cursor-pointer"">Usage with Knowledge Bases</span></h3>
<span>You can also use the <code>TO_MARKDOWN()</code> function to extract content from documents and store it in a <a class=""link"" href=""/mindsdb_sql/agents/knowledge-bases"">Knowledge Base</a>. This is particularly useful for creating a Knowledge Base from a collection of documents.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">  SELECT</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    HASH</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'https://www.princexml.com/howcome/2016/samples/invoice/index.pdf'</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> id,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    TO_MARKDOWN(</span><span style=""color: rgb(10,48,105);"">'https://www.princexml.com/howcome/2016/samples/invoice/index.pdf'</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">as</span><span style=""color: rgb(31,35,40);""> content</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2162796/The+TO_MARKDOWN+Function+-+MindsDB","/pages/resumedraft.action?draftId=2162796","/x/bAAh"
"2162813","current","How to Create Knowledge Bases - MindsDB","491527","491782","page","80904","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:14.164Z","2025-10-24T14:10:48.132Z","","2","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>A knowledge base is an advanced system that organizes information based on semantic meaning rather than simple keyword matching. It integrates embedding models, reranking models, and vector stores to enable context-aware data retrieval.</span>
<div><div><span>Learn more about features of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases available via SQL API</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#create-function"">‚Äã</a></div><span class=""cursor-pointer""><code>create()</code> Function</span></h2>
<span>Here is the syntax for creating a knowledge base:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    'my_kb'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    embedding_model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'text-embedding-3-small'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-...'</span><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    reranking_model</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'provider'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'openai'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'model_name'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'gpt-4'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        'api_key'</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">'sk-...'</span><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    storage</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">server.databases.my_db.tables.my_table,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    metadata_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'date'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'creator'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    content_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'review'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">'content'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(5,80,174);"">...</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    id_column</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'id'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Upon execution, it registers <code>my_kb</code> and associates the specified models and storage. <code>my_kb</code> is a unique identifier of the knowledge base within MindsDB.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-llms"">‚Äã</a></div><span class=""cursor-pointer"">Supported LLMs</span></h3>
<span>Below is the list of all language models supported for the <code>embedding_model</code> and <code>reranking_model</code> parameters.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-openai"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'openai'</code></span></h4>
<span>This provider is supported for both <code>embedding_model</code> and <code>reranking_model</code>.</span>
<div><div><span>Users can define the default embedding and reranking models from OpenAI in Settings of the MindsDB GUI.</span><span>Furthermore, users can select <code>Custom OpenAI API</code> from the dropdown and use models from any OpenAI-compatible API.</span></div></div>
<span>When choosing <code>openai</code> as the model provider, users should define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the OpenAI model to be used.</li>
<li><code>api_key</code> stores the OpenAI API key.</li>
</ul>
<span>Learn more about the <a class=""link"" href=""/integrations/ai-engines/openai"">OpenAI integration with MindsDB here</a>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-openai-azure"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'openai_azure'</code></span></h4>
<span>This provider is supported for both <code>embedding_model</code> and <code>reranking_model</code>.</span>
<div><div><span>Users can define the default embedding and reranking models from Azure OpenAI in Settings of the MindsDB GUI.</span></div></div>
<span>When choosing <code>openai_azure</code> as the model provider, users should define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the OpenAI model to be used.</li>
<li><code>api_key</code> stores the OpenAI API key.</li>
<li><code>base_url</code> stores the base URL of the Azure instance.</li>
<li><code>api_version</code> stores the version of the Azure instance.</li>
</ul>
<div><div><span>Users need to log in to their Azure OpenAI instance to retrieve all relevant parameter values. Next, click on <code>Explore Azure AI Foundry portal</code> and go to <code>Models + endpoints</code>. Select the model and copy the parameter values.</span></div></div>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-google"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'google'</code></span></h4>
<span>This provider is supported for both <code>embedding_model</code> and <code>reranking_model</code>.</span>
<div><div><span>Users can define the default embedding and reranking models from Google in Settings of the MindsDB GUI.</span></div></div>
<span>When choosing <code>google</code> as the model provider, users should define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the Google model to be used.</li>
<li><code>api_key</code> stores the Google API key.</li>
</ul>
<span>Learn more about the <a class=""link"" href=""/integrations/ai-engines/google_gemini"">Google Gemini integration with MindsDB here</a>.</span>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-bedrock"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'bedrock'</code></span></h4>
<span>This provider is supported for both <code>embedding_model</code> and <code>reranking_model</code>.</span>
<span>When choosing <code>bedrock</code> as the model provider, users should define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the model available via Amazon Bedrock.</li>
<li><code>aws_access_key_id</code> stores a unique identifier associated with your AWS account, used to identify the user or application making requests to AWS.</li>
<li><code>aws_region_name</code> stores the name of the AWS region you want to send your requests to (e.g., <code>&quot;us-west-2&quot;</code>).</li>
<li><code>aws_secret_access_key</code> stores the secret key associated with your AWS access key ID. It is used to sign your requests securely.</li>
<li><code>aws_session_token</code> is an optional parameter that stores a temporary token used for short-term security credentials when using AWS Identity and Access Management (IAM) roles or temporary credentials.</li>
</ul>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-snowflake"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'snowflake'</code></span></h4>
<span>This provider is supported for <code>reranking_model</code>. Note that Snowflake Cortex AI does not offer embedding models as of now.</span>
<span>When choosing <code>snowflake</code> as the model provider, users should choose one of the available models from <a class=""link"" href=""https://www.snowflake.com/en/product/features/cortex/"">Snowflake Cortex AI</a> and define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the model available via Snowflake Cortex AI.</li>
<li><code>api_key</code> stores the Snowflake Cortex AI API key.</li>
<li><code>snowflake_account_id</code> stores the Snowflake account ID.</li>
</ul>
<div class=""leading-tight text-left""><p>How to Generate the API key of Snowflake Cortex AI</p></div><div><span>Follow the below steps to generate the API key.</span><ol>
<li>
<span>Generate a key pair according to <a class=""link"" href=""https://docs.snowflake.com/en/user-guide/key-pair-auth"">this instruction</a> as below.</span>
<ul>
<li>
<span>Execute these commands in the console:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);""># generate private key</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">openssl</span><span style=""color: rgb(10,48,105);""> genrsa</span><span style=""color: rgb(5,80,174);""> 2048</span><span style=""color: rgb(207,34,46);""> |</span><span style=""color: rgb(149,56,0);""> openssl</span><span style=""color: rgb(10,48,105);""> pkcs8</span><span style=""color: rgb(5,80,174);""> -topk8</span><span style=""color: rgb(5,80,174);""> -inform</span><span style=""color: rgb(10,48,105);""> PEM</span><span style=""color: rgb(5,80,174);""> -out</span><span style=""color: rgb(10,48,105);""> rsa_key.p8</span><span style=""color: rgb(5,80,174);""> -nocrypt</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);""># generate public key</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">openssl</span><span style=""color: rgb(10,48,105);""> rsa</span><span style=""color: rgb(5,80,174);""> -in</span><span style=""color: rgb(10,48,105);""> rsa_key.p8</span><span style=""color: rgb(5,80,174);""> -pubout</span><span style=""color: rgb(5,80,174);""> -out</span><span style=""color: rgb(10,48,105);""> rsa_key.pub</span></span>
</code></pre></div></div></div>
</li>
<li>
<span>Save the public key, that is, the content of rsa_key.pub, into your database user:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">ALTER</span><span style=""color: rgb(207,34,46);""> USER</span><span style=""color: rgb(31,35,40);""> my_user </span><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(31,35,40);""> RSA_PUBLIC_KEY </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;content of rsa_key.pub&gt;&quot;</span></span>
</code></pre></div></div></div>
</li>
</ul>
</li>
<li>
<span>Verify the key pair with the database user.</span>
<ul>
<li>
<span>Install <code>snowsql</code> following <a class=""link"" href=""https://docs.snowflake.com/en/user-guide/snowsql-install-config"">this instruction</a>.</span>
</li>
<li>
<span>Execute this command in the console:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">snowsql</span><span style=""color: rgb(5,80,174);""> -a</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(10,48,105);"">snowflake-account-i</span><span style=""color: rgb(31,35,40);"">d</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> -u</span><span style=""color: rgb(10,48,105);""> my_user</span><span style=""color: rgb(5,80,174);""> --private-key-path</span><span style=""color: rgb(10,48,105);""> rsa_key.p8</span></span>
</code></pre></div></div></div>
</li>
</ul>
</li>
<li>
<span>Generate JWT token.</span>
<ul>
<li>
<span>Download the Python script from <a class=""link"" href=""https://docs.snowflake.com/en/developer-guide/sql-api/authenticating"">Snowflake&rsquo;s Developer Guide for Authentication</a>. Here is a <a class=""link"" href=""https://docs.snowflake.com/en/_downloads/aeb84cdfe91dcfbd889465403b875515/sql-api-generate-jwt.py"">direct download link</a>.</span>
</li>
<li>
<span>Ensure to have the PyJWT module installed that is required for running the script.</span>
</li>
<li>
<span>Run the script using this command:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">sql-api-generate-jwt.py</span><span style=""color: rgb(5,80,174);""> --account</span><span style=""color: rgb(207,34,46);""> &lt;</span><span style=""color: rgb(10,48,105);"">snowflake-account-i</span><span style=""color: rgb(31,35,40);"">d</span><span style=""color: rgb(207,34,46);"">&gt;</span><span style=""color: rgb(5,80,174);""> --user</span><span style=""color: rgb(10,48,105);""> my_user</span><span style=""color: rgb(5,80,174);""> --private_key_file_path</span><span style=""color: rgb(10,48,105);""> rsa_key.p8</span></span>
</code></pre></div></div></div>
<span>This command returns the JWT token, which is used in the <code>api_key</code> parameter for the <code>snowflake</code> provider.</span>
</li>
</ul>
</li>
</ol></div>
<h4 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#provider-%3D-ollama"">‚Äã</a></div><span class=""cursor-pointer""><code>provider = 'ollama'</code></span></h4>
<span>This provider is supported for both <code>embedding_model</code> and <code>reranking_model</code>.</span>
<div><div><span>Users can define the default embedding and reranking models from Ollama in Settings of the MindsDB GUI.</span></div></div>
<span>When choosing <code>ollama</code> as the model provider, users should define the following model parameters.</span>
<ul>
<li><code>model_name</code> stores the name of the model to be used.</li>
<li><code>base_url</code> stores the base URL of the Ollama instance.</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#embedding-model"">‚Äã</a></div><span class=""cursor-pointer""><code>embedding_model</code></span></h3>
<span>The embedding model is a required component of the knowledge base. It stores specifications of the embedding model to be used.</span>
<span>Users can define the embedding model choosing one of the following options.</span>
<span><strong>Option 1.</strong> Use the <code>embedding_model</code> parameter to define the specification.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">embedding_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>

<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;azure_openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;text-embedding-3-large&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;base_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://ai-6689.openai.azure.com/&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_version&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;2024-02-01&quot;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
</code></pre></div></div></div>
<span><strong>Option 2.</strong> Define the default embedding model in the <a class=""link"" href=""/setup/custom-config"">MindsDB configuration file</a>.</span>
<div><div><span>You can define the default models in the Settings of the MindsDB Editor GUI.</span></div></div>
<div><div><span>Note that if you define <code>default_embedding_model</code> in the configuration file, you do not need to provide the <code>embedding_model</code> parameter when creating a knowledge base. If provide both, then the values from the <code>embedding_model</code> parameter are used.</span></div></div>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">&quot;default_embedding_model&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;azure_openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;text-embedding-3-large&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://ai-6689.openai.azure.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">   &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>The embedding model specification includes:</span>
<ul>
<li>
<span><code>provider</code>
It is a required parameter. It defines the model provider.</span>
</li>
<li>
<span><code>model_name</code>
It is a required parameter. It defines the embedding model name as specified by the provider.</span>
</li>
<li>
<span><code>api_key</code>
The API key is required to access the embedding model assigned to a knowledge base. Users can provide it either in this <code>api_key</code> parameter, or in the <code>OPENAI_API_KEY</code> environment variable for <code>&quot;provider&quot;: &quot;openai&quot;</code> and <code>AZURE_OPENAI_API_KEY</code> environment variable for <code>&quot;provider&quot;: &quot;azure_openai&quot;</code>.</span>
</li>
<li>
<span><code>base_url</code>
It is an optional parameter, which defaults to <code>https://api.openai.com/v1/</code>. It is a required parameter when using the <code>azure_openai</code> provider. It is the root URL used to send API requests.</span>
</li>
<li>
<span><code>api_version</code>
It is an optional parameter. It is a required parameter when using the <code>azure_openai</code> provider. It defines the API version.</span>
</li>
</ul>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#reranking-model"">‚Äã</a></div><span class=""cursor-pointer""><code>reranking_model</code></span></h3>
<span>The reranking model is an optional component of the knowledge base. It stores specifications of the reranking model to be used.</span>
<span>Users can disable reranking features of knowledge bases by setting this parameter to <code>false</code>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">reranking_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(5,80,174);""> False</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
</code></pre></div></div></div>
<span>Users can enable reranking features of knowledge bases by defining the reranking model choosing one of the following options.</span>
<span><strong>Option 1.</strong> Use the <code>reranking_model</code> parameter to define the specification.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">reranking_model </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>

<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;provider&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;azure_openai&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;model_name&quot;</span><span style=""color: rgb(31,35,40);""> : </span><span style=""color: rgb(10,48,105);"">&quot;gpt-4o&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_key&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;sk-abc123&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;base_url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;https://ai-6689.openai.azure.com/&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;api_version&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;2024-02-01&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;method&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;multi-class&quot;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">},</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">...</span></span>
</code></pre></div></div></div>
<span><strong>Option 2.</strong> Define the default reranking model in the <a class=""link"" href=""/setup/custom-config"">MindsDB configuration file</a>.</span>
<div><div><span>You can define the default models in the Settings of the MindsDB Editor GUI.</span></div></div>
<div><div><span>Note that if you define <a class=""link"" href=""/setup/custom-config#default-reranking-model""><code>default_reranking_model</code> in the configuration file</a>, you do not need to provide the <code>reranking_model</code> parameter when creating a knowledge base. If provide both, then the values from the <code>reranking_model</code> parameter are used.</span></div></div>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">&quot;default_reranking_model&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> {</span></span>

<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;provider&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;azure_openai&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;model_name&quot;</span><span style=""color: rgb(10,48,105);""> :</span><span style=""color: rgb(10,48,105);""> &quot;gpt-4o&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;api_key&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;sk-abc123&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;base_url&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;https://ai-6689.openai.azure.com/&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;api_version&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;2024-02-01&quot;,</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">  &quot;method&quot;</span><span style=""color: rgb(5,80,174);"">:</span><span style=""color: rgb(10,48,105);""> &quot;multi-class&quot;</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<span>The reranking model specification includes:</span>
<ul>
<li>
<span><code>provider</code>
It is a required parameter. It defines the model provider as listed in <a class=""link"" href=""/mindsdb_sql/knowledge_bases/create#supported-llms"">supported LLMs</a>.</span>
</li>
<li>
<span><code>model_name</code>
It is a required parameter. It defines the embedding model name as specified by the provider.</span>
</li>
<li>
<span><code>api_key</code>
The API key is required to access the embedding model assigned to a knowledge base. Users can provide it either in this <code>api_key</code> parameter, or in the <code>OPENAI_API_KEY</code> environment variable for <code>&quot;provider&quot;: &quot;openai&quot;</code> and <code>AZURE_OPENAI_API_KEY</code> environment variable for <code>&quot;provider&quot;: &quot;azure_openai&quot;</code>.</span>
</li>
<li>
<span><code>base_url</code>
It is an optional parameter, which defaults to <code>https://api.openai.com/v1/</code>. It is a required parameter when using the <code>azure_openai</code> provider. It is the root URL used to send API requests.</span>
</li>
<li>
<span><code>api_version</code>
It is an optional parameter. It is a required parameter when using the <code>azure_openai</code> provider. It defines the API version.</span>
</li>
<li>
<span><code>method</code>
It is an optional parameter. It defines the method used to calculate the relevance of the output rows. The available options include <code>multi-class</code> and <code>binary</code>. It defaults to <code>multi-class</code>.</span>
</li>
</ul>
<div><div><span><strong>Reranking Method</strong></span><span>The <code>multi-class</code> reranking method classifies each document chunk (that meets any specified metadata filtering conditions) into one of four relevance classes:</span><ol>
<li>Not relevant with class weight of 0.25.</li>
<li>Slightly relevant with class weight of 0.5.</li>
<li>Moderately relevant with class weight of 0.75.</li>
<li>Highly relevant with class weight of 1.</li>
</ol><span>The overall <code>relevance_score</code> of a document is calculated as the sum of each chunk&rsquo;s class weight multiplied by its class probability (from model logprob output).</span><span>The <code>binary</code> reranking method simplifies classification by determining whether a document is relevant or not, without intermediate relevance levels. With this method, the overall <code>relevance_score</code> of a document is calculated based on the model log probability.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#storage"">‚Äã</a></div><span class=""cursor-pointer""><code>storage</code></span></h3>
<span>The vector store is a required component of the knowledge base. It stores data in the form of embeddings.</span>
<span>It is optional for users to provide the <code>storage</code> parameter. If not provided, the default ChromaDB is created when creating a knowledge base.</span>
<span>The available options include either <a class=""link"" href=""/integrations/vector-db-integrations/pgvector"">PGVector</a> or <a class=""link"" href=""/integrations/vector-db-integrations/chromadb"">ChromaDB</a>.</span>
<div><div><span>It is recommended to use PGVector version 0.8.0 or higher for a better performance.</span></div></div>
<span>If the <code>storage</code> parameter is not provided, the system creates the default ChromaDB vector database called <code>&lt;kb_name&gt;_chromadb</code> with the default table called <code>default_collection</code> that stores the embedded data. This default ChromaDB vector database is stored in MindsDB&rsquo;s storage.</span>
<span>In order to provide the storage vector database, it is required to connect it to MindsDB beforehand.</span>
<span>Here is an example for <a class=""link"" href=""/integrations/vector-db-integrations/pgvector"">PGVector</a>.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    storage</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">server.databases.my_pgvector.tables.my_table,</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<div><div><span>Note that you do not need to have the <code>storage_table</code> created as it is created when creating a knowledge base.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#metadata-columns"">‚Äã</a></div><span class=""cursor-pointer""><code>metadata_columns</code></span></h3>
<span>The data inserted into the knowledge base can be classified as metadata, which enables users to filter the search results using defined data fields.</span>
<div><div><span>Note that source data column(s) included in <code>metadata_columns</code> cannot be used in <code>content_columns</code>, and vice versa.</span></div></div>
<span>This parameter is an array of strings that lists column names from the source data to be used as metadata. If not provided, then all inserted columns (except for columns defined as <code>id_column</code> and <code>content_columns</code>) are considered metadata columns.</span>
<span>Here is an example of usage. A user wants to store the following data in a knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product           | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse    | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Laptop Stand      | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
</code></pre></div></div></div>
<div><div><span>Go to the <em>Complete Example</em> section below to find out how to access this sample data.</span></div></div>
<span>The <code>product</code> column can be used as metadata to enable metadata filtering.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    metadata_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'product'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#content-columns"">‚Äã</a></div><span class=""cursor-pointer""><code>content_columns</code></span></h3>
<span>The data inserted into the knowledge base can be classified as content, which is embedded by the embedding model and stored in the underlying vector store.</span>
<div><div><span>Note that source data column(s) included in <code>content_columns</code> cannot be used in <code>metadata_columns</code>, and vice versa.</span></div></div>
<span>This parameter is an array of strings that lists column names from the source data to be used as content and processed into embeddings. If not provided, the <code>content</code> column is expected by default when inserting data into the knowledge base.</span>
<span>Here is an example of usage. A user wants to store the following data in a knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product           | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse    | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Laptop Stand      | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
</code></pre></div></div></div>
<div><div><span>Go to the <em>Complete Example</em> section below to find out how to access this sample data.</span></div></div>
<span>The <code>notes</code> column can be used as content.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    content_columns</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);"">[</span><span style=""color: rgb(10,48,105);"">'notes'</span><span style=""color: rgb(31,35,40);"">],</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#id-column"">‚Äã</a></div><span class=""cursor-pointer""><code>id_column</code></span></h3>
<span>The ID column uniquely identifies each source data row in the knowledge base.</span>
<span>It is an optional parameter. If provided, this parameter is a string that contains the source data ID column name. If not provided, it is generated from the hash of the content columns.</span>
<span>Here is an example of usage. A user wants to store the following data in a knowledge base.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| order_id | product           | notes                  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| A1B      | Wireless Mouse    | Request color: black   |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| 3XZ      | Bluetooth Speaker | Gift wrap requested    |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| Q7P      | Laptop Stand      | Prefer aluminum finish |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------+-------------------+------------------------+</span></span>
</code></pre></div></div></div>
<div><div><span>Go to the <em>Complete Example</em> section below to find out how to access this sample data.</span></div></div>
<span>The <code>order_id</code> column can be used as ID.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> server.knowledge_bases.create(</span></span>
<span class=""line""><span style=""color: rgb(5,80,174);"">    ...</span></span>
<span class=""line""><span style=""color: rgb(149,56,0);"">    id_column</span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);"">'order_id'</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<div><div><span>Note that if the source data row is chunked into multiple chunks by the knowledge base (that is, to optimize the storage), then these rows in the knowledge base have the same ID value that identifies chunks from one source data row.</span></div></div>
<div><div><span><strong>Available options for the ID column values</strong></span><ul>
<li>
<span>User-Defined ID Column: <br />
When users defined the <code>id_column</code> parameter, the values from the provided source data column are used to identify source data rows within the knowledge base.</span>
</li>
<li>
<span>User-Generated ID Column: <br />
When users do not have a column that uniquely identifies each row in their source data, they can generate the ID column values when inserting data into the knowledge base using functions like <code>HASH()</code> or <code>ROW_NUMBER()</code>.</span>
</li>
</ul><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(31,35,40);""> my_kb (</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    SELECT</span><span style=""color: rgb(5,80,174);""> ROW_NUMBER</span><span style=""color: rgb(31,35,40);"">() </span><span style=""color: rgb(207,34,46);"">OVER</span><span style=""color: rgb(31,35,40);""> (</span><span style=""color: rgb(207,34,46);"">ORDER BY</span><span style=""color: rgb(31,35,40);""> order_id) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> id, </span><span style=""color: rgb(207,34,46);"">*</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    FROM</span><span style=""color: rgb(5,80,174);""> sample_data</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">orders</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div><ul>
<li>Default ID Column: <br />
If the <code>id_column</code> parameter is not defined, its default values are build from the hash of the content columns and follow the format: <code>&lt;first 16 char of md5 hash of row content&gt;</code>.</li>
</ul></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#list-and-get-functions"">‚Äã</a></div><span class=""cursor-pointer""><code>list()</code> and <code>get()</code> Functions</span></h2>
<span>Users can get details about the knowledge base using the <code>get()</code> function.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">my_kb </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.knowledge_bases.get(</span><span style=""color: rgb(10,48,105);"">'my_kb'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>And list all available knowledge bases using the <code>list()</code> function.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">kb_list </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> project.knowledge_bases.list()</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#drop-function"">‚Äã</a></div><span class=""cursor-pointer""><code>drop()</code> Function</span></h2>
<span>Here is the syntax for deleting a knowledge base:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">project.knowledge_bases.drop(</span><span style=""color: rgb(10,48,105);"">'my_kb'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div>
<span>Upon execution, it removes the knowledge base with its content.</span>
<div><div><span>See more examples of <a class=""link"" href=""/mindsdb_sql/knowledge_bases/overview"">knowledge bases via SQL here</a>.</span></div></div></div>","/spaces/SOP/pages/2162813/How+to+Create+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=2162813","/x/fQAh"
"2162840","current","Query a File - MindsDB","491527","491782","page","87748","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:52.090Z","2025-10-24T14:11:22.407Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>In MindsDB, files are treated as tables. These are stored in the default <code>files</code> database. To query a file, you must save this <code>files</code> database into a variable and then, run the <code>query()</code> function on it.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: transparent;color: rgb(31,35,40);""><code><span class=""line""><span>server.get_database('files').query('SELECT * FROM file_name')</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2162840/Query+a+File+-+MindsDB","/pages/resumedraft.action?draftId=2162840","/x/mAAh"
"2162859","current","Native Queries - MindsDB","491527","491782","page","97706","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:43.473Z","2025-10-24T14:11:16.483Z","","3","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>query()</code> function is executed on a data source connected to MindsDB and saved into a variable. This native query is executed directly on a data source.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(5,80,174);"">my_data_source</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">query</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">'SELECT * FROM datasource_name (&lt;native query here&gt;);'</span><span style=""color: rgb(31,35,40);"">)</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2162859/Native+Queries+-+MindsDB","/pages/resumedraft.action?draftId=2162859","/x/qwAh"
"2162878","current","Use a Project - MindsDB","491527","491782","page","99163","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:53.436Z","2025-10-24T14:05:53.436Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>The <code>USE</code> statement will change the context of MindsDB to the specified project. This allows you to run subsequent queries within the context of that project.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">USE</span><span style=""color: rgb(31,35,40);""> project_name;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">Query successfully completed</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2162878/Use+a+Project+-+MindsDB","/pages/resumedraft.action?draftId=2162878","/x/vgAh"
"2162897","current","MindsDB's MCP Server with Cursor's MCP Client - MindsDB","491527","491782","page","101229","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:06:01.755Z","2025-10-24T14:06:01.755Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This tutorial walks you through the usage of MindsDB&rsquo;s MCP Server with <a class=""link"" href=""https://www.cursor.com/"">Cursor</a> as an MCP Client.</span>
<div><div><span>See a <a class=""link"" href=""https://www.youtube.com/watch?v=f5VFd5LIuPg"">video tutorial here</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#setup"">‚Äã</a></div><span class=""cursor-pointer"">Setup</span></h2>
<span>Follow the steps below to connect MindsDB&rsquo;s MCP Server to Cursor.</span>
<ol>
<li>
<span>Start MindsDB&rsquo;s MCP Server following <a class=""link"" href=""/mcp/usage"">this guide</a>.</span>
</li>
<li>
<span>Open Cursor, go to the Cursor Settings, open the MCP tab, and click on <em>Add new global MCP server</em>. Alternatively, go to the Cursor settings -&gt; Features -&gt; MCP Servers.</span>
</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""560"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp_cursor_settings.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=b9a2d3c6c573cae9d708ac3d829bed51"" style="""" width=""2032"" /></span></span></p>
<ol start=""3"">
<li>Add the below content to the <code>mcp.json</code> file.</li>
</ol>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">{</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">    &quot;mcpServers&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;mindsdb&quot;</span><span style=""color: rgb(31,35,40);"">: {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">        &quot;url&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;http://127.0.0.1:47334/mcp/sse&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">      }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    }</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">}</span></span>
</code></pre></div></div></div>
<ol start=""4"">
<li>Ensure that MindsDB is listed as an MCP server.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""586"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp_cursor_mcp_server.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=91cdfac4dc748e136f095effa3bb5dcf"" style="""" width=""2048"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#chat-with-data"">‚Äã</a></div><span class=""cursor-pointer"">Chat with Data</span></h2>
<ol>
<li>Open the Cursor chat window and select the Agent mode from the dropdown.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""280"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp_cursor_chat_mode.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=ea2b7c87a03ba5e26e9291b8c6fb3e7c"" style="""" width=""1276"" /></span></span></p>
<ol start=""2"">
<li>Ask questions over your data. <em>Note that you need to approve each call of the MCP server&rsquo;s tools by clicking on Run tool.</em></li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1528"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp_cursor_chat_tool.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=332cb0f2a837b65189ab040caad5c05f"" style="""" width=""872"" /></span></span></p>
<ol start=""3"">
<li>The agent provides an answer with helpful suggestions of follow-up information that can be extracted from the available data.</li>
</ol>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1236"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mcp_cursor_chat.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=9423d20a3678ad7d6b0abbd88fb9be20"" style="""" width=""1120"" /></span></span></p></div>","/spaces/SOP/pages/2162897/MindsDB+s+MCP+Server+with+Cursor+s+MCP+Client+-+MindsDB","/pages/resumedraft.action?draftId=2162897","/x/0QAh"
"2195457","current","Slack - MindsDB","491527","491782","page","28516","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:00:49.242Z","2025-10-24T14:00:49.242Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://slack.com/"">Slack</a>, a cloud-based collaboration platform.
The integration allows MindsDB to access data from Slack and enhance Slack with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Slack to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
<li>Install or ensure access to Slack.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Slack from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/slack_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> slack_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span><span style=""color: rgb(31,35,40);""> ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'slack'</span><span style=""color: rgb(31,35,40);"">, </span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;values&quot;</span><span style=""color: rgb(31,35,40);"">,     </span><span style=""color: rgb(110,119,129);"">-- required parameter</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">   &quot;app_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;values&quot;</span><span style=""color: rgb(110,119,129);"">  -- optional parameter</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">};</span></span>
</code></pre></div></div></div>
<span>The Slack handler is initialized with the following parameters:</span>
<ul>
<li><code>token</code> is a Slack bot token to use for authentication.</li>
<li><code>app_token</code> is a Slack app token to use for authentication.</li>
</ul>
<div><div><span>Please note that <code>app_token</code> is an optional parameter. Without providing it, you need to integrate an app into a Slack channel.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#method-1%3A-chatbot-responds-in-direct-messages-to-a-slack-app"">‚Äã</a></div><span class=""cursor-pointer"">Method 1: Chatbot responds in direct messages to a Slack app</span></h3>
<span>One way to connect Slack is to use both bot and app tokens. By following the instructions below, you&rsquo;ll set up the Slack app and be able to message this Slack app directly to chat with the bot.</span>
<div><div><span>If you want to use Slack in the <a class=""link"" href=""/agents/chatbot""><code>CREATE CHATBOT</code></a> syntax, use this method of connecting Slack to MindsDB.</span></div></div>
<div class=""leading-tight text-left""><p>Set up a Slack app and generate tokens</p></div><div><span>Here is how to set up a Slack app and generate both a Slack bot token and a Slack app token:</span><ol>
<li>Follow <a class=""link"" href=""https://api.slack.com/apps"">this link</a> and sign in with your Slack account.</li>
<li>Create a new app <code>From scratch</code> or select an existing app.
<ul>
<li>Please note that the following instructions support apps created <code>From scratch</code>.</li>
<li>For apps created <code>From an app manifest</code>, please follow the <a class=""link"" href=""https://api.slack.com/reference/manifests"">Slack docs here</a>.</li>
</ul>
</li>
<li>Go to <em>Basic Information</em> under <em>Settings</em>.
<ul>
<li>Under <em>App-Level Tokens</em>, click on <em>Generate Token and Scopes</em>.</li>
<li>Name the token <code>socket</code> and add the <code>connections:write</code> scope.</li>
<li><strong>Copy and save the <code>xapp-...</code> token - you&rsquo;ll need it to publish the chatbot.</strong></li>
</ul>
</li>
<li>Go to <em>Socket Mode</em> under <em>Settings</em> and toggle the button to <em>Enable Socket Mode</em>.</li>
<li>Go to <em>OAuth &amp; Permissions</em> under <em>Features</em>.
<ul>
<li>Add the following <em>Bot Token Scopes</em>:
<ul>
<li>app_mentions:read</li>
<li>channels:history</li>
<li>channels:read</li>
<li>chat:write</li>
<li>groups:history</li>
<li>groups:read (optional)</li>
<li>im:history</li>
<li>im:read</li>
<li>im:write</li>
<li>mpim:read (optional)</li>
<li>users.profile:read</li>
<li>users:read (optional)</li>
</ul>
</li>
<li>In the <em>OAuth Tokens for Your Workspace</em> section, click on <em>Install to Workspace</em> and then <em>Allow</em>.</li>
<li><strong>Copy and save the <code>xoxb-...</code> token - you&rsquo;ll need it to publish the chatbot.</strong></li>
</ul>
</li>
<li>Go to <em>App Home</em> under <em>Features</em> and click on the checkbox to <em>Allow users to send Slash commands and messages from the messages tab</em>.</li>
<li>Go to <em>Event Subscriptions</em> under <em>Features</em>.
<ul>
<li>Toggle the button to <em>Enable Events</em>.</li>
<li>Under <em>Subscribe to bot events</em>, click on <em>Add Bot User Event</em> and add <code>app_mention</code> and <code>message.im</code>.</li>
<li>Click on <em>Save Changes</em>.</li>
</ul>
</li>
<li>Now you can use tokens from points 3 and 5 to initialize the Slack handler in MindsDB.</li>
</ol></div>
<div><div><span>This connection method enables you to chat directly with an app via Slack.</span><span>Alternatively, you can connect an app to the Slack channel:</span><ul>
<li>Go to the channel where you want to use the bot.</li>
<li>Right-click on the channel and select <em>View Channel Details</em>.</li>
<li>Select <em>Integrations</em>.</li>
<li>Click on <em>Add an App</em>.</li>
</ul></div></div>
<span>Here is how to connect Slack to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> slack_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'slack'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xoxb-...&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;app_token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xapp-...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<span>It comes with the <code>conversations</code> and <code>messages</code> tables.</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#method-2%3A-chatbot-responds-on-a-defined-slack-channel"">‚Äã</a></div><span class=""cursor-pointer"">Method 2: Chatbot responds on a defined Slack channel</span></h3>
<span>Another way to connect to Slack is to use the bot token only. By following the instructions below, you&rsquo;ll set up the Slack app and integrate it into one of the channels from which you can directly chat with the bot.</span>
<div class=""leading-tight text-left""><p>Set up a Slack app and generate tokens</p></div><div><span>Here is how to set up a Slack app and generate a Slack bot token:</span><ol>
<li>Follow <a class=""link"" href=""https://api.slack.com/apps"">this link</a> and sign in with your Slack account.</li>
<li>Create a new app <code>From scratch</code> or select an existing app.
<ul>
<li>Please note that the following instructions support apps created <code>From scratch</code>.</li>
<li>For apps created <code>From an app manifest</code>, please follow the <a class=""link"" href=""https://api.slack.com/reference/manifests"">Slack docs here</a>.</li>
</ul>
</li>
<li>Go to the <em>OAuth &amp; Permissions</em> section.</li>
<li>Under the <em>Scopes</em> section, add the <em>Bot Token Scopes</em> necessary for your application. You can add more later as well.
<ul>
<li>channels:history</li>
<li>channels:read</li>
<li>chat:write</li>
<li>groups:read</li>
<li>im:read</li>
<li>mpim:read</li>
<li>users:read</li>
</ul>
</li>
<li>Install the bot in your workspace.</li>
<li>Under the <em>OAuth Tokens for Your Workspace</em> section, copy the the <em>Bot User OAuth Token</em> value.</li>
<li>Open your Slack application and add the App/Bot to one of the channels:
<ul>
<li>Go to the channel where you want to use the bot.</li>
<li>Right-click on the channel and select <em>View Channel Details</em>.</li>
<li>Select <em>Integrations</em>.</li>
<li>Click on <em>Add an App</em>.</li>
</ul>
</li>
<li>Now you can use the token from step 6 to initialize the Slack handler in MindsDB and use the channel name to query and write messages.</li>
</ol></div>
<span>Here is how to connect Slack to MindsDB:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> slack_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'slack'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">  PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;token&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;xoxb-...&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">    };</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<div><div><span>The following usage applies when <strong>Connection Method 2</strong> was used to connect Slack.</span><span>See the usage for <strong>Connection Method 1</strong> <a class=""link"" href=""/sql/tutorials/create-chatbot"">via the <code>CREATE CHATBOT</code> syntax</a>.</span></div></div>
<span>Retrieve data from a specified table by providing the integration and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#supported-tables"">‚Äã</a></div><span class=""cursor-pointer"">Supported Tables</span></h2>
<span>The Slack integration supports the following tables:</span>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#conversations-table"">‚Äã</a></div><span class=""cursor-pointer""><code>conversations</code> Table</span></h3>
<span>The <code>conversations</code> virtual table is used to query conversations (channels, DMs, and groups) in the connected Slack workspace.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve all conversations in the workspace</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversations</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve a specific conversation using its ID</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversations</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve a specific conversation using its name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversations</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-name&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#messages-table"">‚Äã</a></div><span class=""cursor-pointer""><code>messages</code> Table</span></h3>
<span>The <code>messages</code> virtual table is used to query, post, update, and delete messages in specific conversations within the connected Slack workspace.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve all messages from a specific conversation</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- channel_id is a required parameter and can be found in the conversations table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Post a new message</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- channel_id and text are required parameters</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span><span style=""color: rgb(31,35,40);""> (channel_id, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">&quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;Hello from SQL!&quot;</span><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Update a bot-posted message</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- channel_id, ts, and text are required parameters</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">UPDATE</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SET</span><span style=""color: rgb(207,34,46);""> text</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;Updated message content&quot;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> ts </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;timestamp&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Delete a bot-posted message</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- channel_id and ts are required parameters</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">DELETE</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">messages</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> ts </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;timestamp&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<div><div><span>You can also find the channel ID by right-clicking on the conversation in Slack, selecting &lsquo;View conversation details&rsquo; or &lsquo;View channel details,&rsquo; and copying the channel ID from the bottom of the &lsquo;About&rsquo; tab.</span></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#threads-table"">‚Äã</a></div><span class=""cursor-pointer""><code>threads</code> Table</span></h3>
<span>The <code>threads</code> virtual table is used to query and post messages in threads within the connected Slack workspace.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve all messages in a specific thread</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- channel_id and thread_ts are required parameters</span></span>
<span class=""line""><span style=""color: rgb(110,119,129);"">-- thread_ts is the timestamp of the parent message and can be found in the messages table</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">threads</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(31,35,40);""> channel_id </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(207,34,46);""> AND</span><span style=""color: rgb(31,35,40);""> thread_ts </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> &quot;&lt;thread-ts&gt;&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Post a message to a thread</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">INSERT INTO</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">threads</span><span style=""color: rgb(31,35,40);""> (channel_id, thread_ts, </span><span style=""color: rgb(207,34,46);"">text</span><span style=""color: rgb(31,35,40);"">)</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">VALUES</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(10,48,105);"">&quot;&lt;channel-id&gt;&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;&lt;thread-ts&gt;&quot;</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(10,48,105);"">&quot;Replying to the thread!&quot;</span><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<h3 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#users-table"">‚Äã</a></div><span class=""cursor-pointer""><code>users</code> Table</span></h3>
<span>The <code>users</code> virtual table is used to query user information in the connected Slack workspace.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve all users in the workspace</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">users</span><span style=""color: rgb(31,35,40);"">;</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">-- Retrieve a specific user by name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">users</span><span style=""color: rgb(31,35,40);""> </span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WHERE</span><span style=""color: rgb(207,34,46);""> name</span><span style=""color: rgb(207,34,46);""> =</span><span style=""color: rgb(10,48,105);""> &quot;John Doe&quot;</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#rate-limit-considerations"">‚Äã</a></div><span class=""cursor-pointer"">Rate Limit Considerations</span></h2>
<span>The Slack API enforces rate limits on data retrieval. Therefore, when querying the above tables, by default, the first 1000 (999 for <code>messages</code>) records are returned.</span>
<span>To retrieve more records, use the <code>LIMIT</code> clause in your SQL queries. For example:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> slack_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">conversations</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 2000</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>When using the LIMIT clause to query additional records, you may encounter Slack API rate limits.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#next-steps"">‚Äã</a></div><span class=""cursor-pointer"">Next Steps</span></h2>
<span>Follow <a class=""link"" href=""/use-cases/ai_agents/build_ai_agents"">this tutorial</a> to build an AI agent with MindsDB.</span></div>","/spaces/SOP/pages/2195457/Slack+-+MindsDB","/pages/resumedraft.action?draftId=2195457","/x/AYAh"
"2195482","current","Teradata - MindsDB","491527","491782","page","61244","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:02:36.254Z","2025-10-24T14:02:36.254Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This documentation describes the integration of MindsDB with <a class=""link"" href=""https://www.teradata.com/why-teradata"">Teradata</a>, the complete cloud analytics and data platform for Trusted AI.
The integration allows MindsDB to access data from Teradata and enhance Teradata with AI capabilities.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Teradata to MindsDB, install the required dependencies following <a class=""link"" href=""https://docs.mindsdb.com/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection"">‚Äã</a></div><span class=""cursor-pointer"">Connection</span></h2>
<span>Establish a connection to Teradata from MindsDB by executing the following SQL command and providing its <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/teradata_handler"">handler name</a> as an engine.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">CREATE</span><span style=""color: rgb(207,34,46);""> DATABASE</span><span style=""color: rgb(130,80,223);""> teradata_datasource</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">WITH</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   ENGINE </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(10,48,105);""> 'teradata'</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   PARAMETERS </span><span style=""color: rgb(207,34,46);"">=</span><span style=""color: rgb(31,35,40);""> {</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;host&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;192.168.0.41&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;user&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_user&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;password&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;demo_password&quot;</span><span style=""color: rgb(31,35,40);"">,</span></span>
<span class=""line""><span style=""color: rgb(10,48,105);"">      &quot;database&quot;</span><span style=""color: rgb(31,35,40);"">: </span><span style=""color: rgb(10,48,105);"">&quot;example_db&quot;</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">   };</span></span>
</code></pre></div></div></div>
<span>Required connection parameters include the following:</span>
<ul>
<li><code>host</code>: The hostname, IP address, or URL of the Teradata server.</li>
<li><code>user</code>: The username for the Teradata database.</li>
<li><code>password</code>: The password for the Teradata database.</li>
</ul>
<span>Optional connection parameters include the following:</span>
<ul>
<li><code>database</code>: The name of the Teradata database to connect to. Defaults is the user&rsquo;s default database.</li>
</ul>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#usage"">‚Äã</a></div><span class=""cursor-pointer"">Usage</span></h2>
<span>Retrieve data from a specified table by providing the integration, database and table names:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> teradata_datasource</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">database_name</span><span style=""color: rgb(31,35,40);"">.table_name</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 10</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Run Teradata SQL queries directly on the connected Teradata database:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(207,34,46);""> *</span><span style=""color: rgb(207,34,46);""> FROM</span><span style=""color: rgb(31,35,40);""> teradata_datasource (</span></span>

<span class=""line""><span style=""color: rgb(110,119,129);"">   --Native Query Goes Here</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   SELECT</span><span style=""color: rgb(31,35,40);""> emp_id, emp_name, job_duration </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> tsp</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   FROM</span><span style=""color: rgb(31,35,40);""> employee</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">   EXPAND</span><span style=""color: rgb(207,34,46);""> ON</span><span style=""color: rgb(31,35,40);""> job_duration </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> tsp </span><span style=""color: rgb(207,34,46);"">BY</span><span style=""color: rgb(31,35,40);""> INTERVAL </span><span style=""color: rgb(10,48,105);"">'1'</span><span style=""color: rgb(207,34,46);""> YEAR</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">      FOR</span><span style=""color: rgb(207,34,46);""> PERIOD</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(207,34,46);"">DATE</span><span style=""color: rgb(10,48,105);""> '2006-01-01'</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(207,34,46);"">DATE</span><span style=""color: rgb(10,48,105);""> '2008-01-01'</span><span style=""color: rgb(31,35,40);"">);</span></span>

<span class=""line""><span style=""color: rgb(31,35,40);"">);</span></span>
</code></pre></div></div></div>
<div><div><span>The above examples utilize <code>teradata_datasource</code> as the datasource name, which is defined in the <code>CREATE DATABASE</code> command.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#troubleshooting"">‚Äã</a></div><span class=""cursor-pointer"">Troubleshooting</span></h2>
<div><div><span><code>Database Connection Error</code></span><ul>
<li><strong>Symptoms</strong>: Failure to connect MindsDB with the Teradata database.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Make sure the Teradata database is active.</li>
<li>Confirm that host, user and password are correct. Try a direct connection using a client like DBeaver.</li>
<li>Ensure a stable network between MindsDB and Teradata.</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>SQL statement cannot be parsed by mindsdb_sql</code></span><ul>
<li><strong>Symptoms</strong>: SQL queries failing or not recognizing table names containing spaces or special characters.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure table names with spaces or special characters are enclosed in backticks.</li>
<li>Examples:
<ul>
<li>Incorrect: SELECT * FROM integration.travel-data</li>
<li>Incorrect: SELECT * FROM integration.&lsquo;travel-data&rsquo;</li>
<li>Correct: SELECT * FROM integration.`travel-data`</li>
</ul>
</li>
</ol>
</li>
</ul></div></div>
<div><div><span><code>Connection Timeout Error</code></span><ul>
<li><strong>Symptoms</strong>: Connection to the Teradata database times out or queries take too long to execute.</li>
<li><strong>Checklist</strong>:
<ol>
<li>Ensure the Teradata server is running and accessible (if the server has been idle for a long time, it may have shut down automatically).</li>
</ol>
</li>
</ul></div></div></div>","/spaces/SOP/pages/2195482/Teradata+-+MindsDB","/pages/resumedraft.action?draftId=2195482","/x/GoAh"
"2195509","current","Milvus - MindsDB","491527","491782","page","68778","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:08.011Z","2025-10-24T14:03:08.011Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>This is the implementation of the Milvus handler for MindsDB.</span>
<span>Milvus is an open-source and blazing fast vector database built for scalable similarity search.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#prerequisites"">‚Äã</a></div><span class=""cursor-pointer"">Prerequisites</span></h2>
<span>Before proceeding, ensure the following prerequisites are met:</span>
<ol>
<li>Install MindsDB locally via <a class=""link"" href=""/setup/self-hosted/docker"">Docker</a> or <a class=""link"" href=""/setup/self-hosted/docker-desktop"">Docker Desktop</a>.</li>
<li>To connect Milvus to MindsDB, install the required dependencies following <a class=""link"" href=""/setup/self-hosted/docker#install-dependencies"">this instruction</a>.</li>
</ol>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#connection-and-usage"">‚Äã</a></div><span class=""cursor-pointer"">Connection and Usage</span></h2>
<span>Visit the <a class=""link"" href=""https://milvus.io/docs/integration_with_mindsdb.md"">Milvus page for details</a>.</span></div>","/spaces/SOP/pages/2195509/Milvus+-+MindsDB","/pages/resumedraft.action?draftId=2195509","/x/NYAh"
"2195530","current","MindsDB and DBeaver - MindsDB","491527","491782","page","72524","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:34.700Z","2025-10-24T14:03:34.700Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>DBeaver is a database tool that allows you to connect to and work with various database engines. You can download it <a class=""link"" href=""https://dbeaver.io/"">here</a>.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#data-setup"">‚Äã</a></div><span class=""cursor-pointer"">Data Setup</span></h2>
<span>First, create a new database connection in DBeaver by clicking the icon, as shown below.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""126"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/dbeaver_1.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=231bd333c657925a13f6dc529b8693ce"" style="""" width=""496"" /></span></span></p>
<span>Next, choose the MySQL database engine and click the <em>Next</em> button.</span>
<div><div><span>If you have multiple <code>MySQL</code> options, choose the <code>Driver for MySQL8 and later</code>.</span></div></div>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1394"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/dbeaver_2.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=55850f95f87e182a6c3d52f547b631c9"" style="""" width=""1614"" /></span></span></p>
<span>Now it&rsquo;s time to fill in the connection details.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1396"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/dbeaver_3.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=927da4a5495439a51194a2e3f87ad640"" style="""" width=""1616"" /></span></span></p>
<span>Use the following parameters:</span>
<ul>
<li>
<span><code>127.0.0.1</code> or <code>localhost</code> for the host name. If you run MindsDB in cloud, specify the host name accordingly.</span>
</li>
<li>
<span><code>47335</code> for the port, which is the port of the MySQL API exposed by MindsDB. Learn more about <a class=""link"" href=""/setup/environment-vars#mindsdb-apis"">available APIs here</a>.</span>
</li>
<li>
<span><code>mindsdb</code> for the database name.</span>
</li>
<li>
<span><code>mindsdb</code> for the user name, unless specified differently in the <a class=""link"" href=""/setup/custom-config#auth""><code>config.json</code> file</a>.</span>
</li>
<li>
<span><code>&lt;empty&gt;</code> for the password, unless specified differently in the <a class=""link"" href=""/setup/custom-config#auth""><code>config.json</code> file</a>.</span>
</li>
</ul>
<span>Now we are ready to test the connection.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#testing-the-connection"">‚Äã</a></div><span class=""cursor-pointer"">Testing the Connection</span></h2>
<span>Click on the <code>Test Connection...</code> button to check if all the provided data allows you to connect to MindsDB.</span>
<span>On success, you should see the message, as below.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1312"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/dbeaver_4.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=b9cc99b317eec5063ad0f9047763d53f"" style="""" width=""2084"" /></span></span></p>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#let%E2%80%99s-run-some-queries"">‚Äã</a></div><span class=""cursor-pointer"">Let&rsquo;s Run Some Queries</span></h2>
<span>To finally make sure that our MindsDB database connection works, let&rsquo;s run some queries.</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">SHOW FULL DATABASES;</span></span>
</code></pre></div></div></div>
<span>On execution, we get:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(207,34,46);"">Database</span><span style=""color: rgb(31,35,40);"">             | </span><span style=""color: rgb(207,34,46);"">TYPE</span><span style=""color: rgb(31,35,40);"">    | ENGINE |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| information_schema   | </span><span style=""color: rgb(207,34,46);"">system</span><span style=""color: rgb(31,35,40);"">  | [NULL] |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| mindsdb              | project | [NULL] |</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| files                | </span><span style=""color: rgb(207,34,46);"">data</span><span style=""color: rgb(31,35,40);"">    | files  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">----------------------+---------+--------+</span></span>
</code></pre></div></div></div>
<span>Here is how it looks in DBeaver:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""498"" src=""https://mintcdn.com/mindsdb/qZ0qlWEqCb1K2Drt/assets/sql/dbeaver_5.png?fit=max&amp;auto=format&amp;n=qZ0qlWEqCb1K2Drt&amp;q=85&amp;s=fafa431ee811c2a8e00113b826638ae3"" style="""" width=""854"" /></span></span></p>
<div><div><span>How to <a class=""link"" href=""/faqs/whitelist-ips"">whitelist MindsDB Cloud IP address</a>?</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#what%E2%80%99s-next%3F"">‚Äã</a></div><span class=""cursor-pointer"">What&rsquo;s Next?</span></h2>
<span>Now that you are all set, we recommend you to check out our <a class=""link"" href=""/sql/tutorials/house-sales-forecasting"">Tutorials</a> section where you&rsquo;ll find various examples of
regression, classification, and time series predictions with MindsDB or <a class=""link"" href=""/tutorials"">Community Tutorials</a> list.</span>
<span>To learn more about MindsDB itself, follow the guide on
<a class=""link"" href=""/sql/table-structure"">MindsDB database structure</a>. Also, don&rsquo;t miss out on the
remaining pages from the <strong>SQL API</strong> section, as they explain a common SQL
syntax with examples.</span>
<span>Have fun!</span></div>","/spaces/SOP/pages/2195530/MindsDB+and+DBeaver+-+MindsDB","/pages/resumedraft.action?draftId=2195530","/x/SoAh"
"2195549","current","List Knowledge Bases - MindsDB","491527","491782","page","111970","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:07:23.984Z","2025-10-24T14:07:23.984Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div></div><div class=""flex flex-1 overflow-hidden""><div class=""w-full min-w-full max-w-full h-full max-h-full"" style=""""><div style=""height: 100.0%;background-color: rgb(255,255,255);""><div><span><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(149,56,0);"">curl</span><span style=""color: rgb(5,80,174);""> -X</span><span style=""color: rgb(10,48,105);""> GET</span><span style=""color: rgb(10,48,105);""> http://127.0.0.1:47334/api/projects/mindsdb/knowledge_bases</span></span>
</code></pre></span></div></div></div></div></div>","/spaces/SOP/pages/2195549/List+Knowledge+Bases+-+MindsDB","/pages/resumedraft.action?draftId=2195549","/x/XYAh"
"2228229","current","How to Chat with Agents - MindsDB","491527","491782","page","71121","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:27.859Z","2025-10-24T14:03:27.859Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Agents enable conversation with data, including structured and unstructured data connected to MindsDB.</span>
<span>MindsDB provides a chat interface that enables users to chat with their data.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1824"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_respond.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=e9142482dec6ea14c43fcab10e93b5c6"" style="""" width=""3438"" /></span></span></p>
<span>Select an agent from the list of existing agents, or create one if none exists yet.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""504"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_respond_agents.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=f3ab7f431b53ec11f68c8ee247c866a1"" style="""" width=""836"" /></span></span></p>
<span>Now the chat interface is connected to this agent via <a class=""link"" href=""https://google.github.io/A2A/"">Agent2Agent Protocol</a> and users can chat with the data connected to this agent.</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""1830"" src=""https://mintcdn.com/mindsdb/iK5MN5UH2_93kMSg/assets/mindsdb_gui_respond_chat.png?fit=max&amp;auto=format&amp;n=iK5MN5UH2_93kMSg&amp;q=85&amp;s=0b212061d59eba23d3da62a3b9df037f"" style="""" width=""3432"" /></span></span></p></div>","/spaces/SOP/pages/2228229/How+to+Chat+with+Agents+-+MindsDB","/pages/resumedraft.action?draftId=2228229","/x/BQAi"
"2228248","current","Bring Your Own Function - MindsDB","491527","491782","page","78034","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:03:58.906Z","2025-10-24T14:03:58.906Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>Custom functions provide advanced means of manipulating data. Users can upload custom functions written in Python to MindsDB and apply them to data.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#how-it-works"">‚Äã</a></div><span class=""cursor-pointer"">How It Works</span></h2>
<span>You can upload your custom functions via the MindsDB editor by clicking <code>Add</code> and <code>Upload custom functions</code>, like this:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""278"" src=""https://mintcdn.com/mindsdb/QF5BKvjknzzY0II3/assets/upload_custom_function.png?fit=max&amp;auto=format&amp;n=QF5BKvjknzzY0II3&amp;q=85&amp;s=2ccf18d04467026fca12c941e9e999e4"" style="""" width=""217"" /></span></span></p>
<span>Here is the form that needs to be filled out in order to bring your custom functions to MindsDB:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""592"" src=""https://mintcdn.com/mindsdb/QF5BKvjknzzY0II3/assets/upload_custom_function_empty_form.png?fit=max&amp;auto=format&amp;n=QF5BKvjknzzY0II3&amp;q=85&amp;s=6f519ffac0a3537f25823ab1250ae556"" style="""" width=""380"" /></span></span></p>
<span>Let&rsquo;s briefly go over the files that need to be uploaded:</span>
<ul>
<li>
<span>The Python file stores an implementation of your custom functions. Here is the sample format:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> function_name_1</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">a</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">b</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">) -&gt; </span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    &lt;</span><span style=""color: rgb(31,35,40);"">implementation goes here</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    return</span><span style=""color: rgb(31,35,40);""> x</span></span>

<span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> function_name_2</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">a</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">b</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">c</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">) -&gt; </span><span style=""color: rgb(5,80,174);"">type</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    &lt;</span><span style=""color: rgb(31,35,40);"">implementation goes here</span><span style=""color: rgb(207,34,46);"">&gt;</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    return</span><span style=""color: rgb(31,35,40);""> x</span></span>
</code></pre></div></div></div>
<div><div><span>Note that if the input and output types are not set, then <code>str</code> is used by default.</span></div></div>
</li>
</ul>
<div class=""leading-tight text-left""><p>Example</p></div><div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">def</span><span style=""color: rgb(130,80,223);""> add_integers</span><span style=""color: rgb(31,35,40);"">(</span><span style=""color: rgb(31,35,40);"">a</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">int</span><span style=""color: rgb(31,35,40);"">, </span><span style=""color: rgb(31,35,40);"">b</span><span style=""color: rgb(31,35,40);"">:</span><span style=""color: rgb(5,80,174);"">int</span><span style=""color: rgb(31,35,40);"">) -&gt; </span><span style=""color: rgb(5,80,174);"">int</span><span style=""color: rgb(31,35,40);"">:</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">    return</span><span style=""color: rgb(31,35,40);""> a</span><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(31,35,40);"">b</span></span>
</code></pre></div></div></div></div>
<ul>
<li>
<span>The optional requirements file, or <code>requirements.txt</code>, stores all dependencies along with their versions. Here is the sample format:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_1 </span><span style=""color: rgb(207,34,46);"">==</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_2 </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">dependency_package_3 </span><span style=""color: rgb(207,34,46);"">&gt;=</span><span style=""color: rgb(31,35,40);""> verion, </span><span style=""color: rgb(207,34,46);"">&lt;</span><span style=""color: rgb(207,34,46);""> version</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">...</span></span>
</code></pre></div></div></div>
</li>
</ul>
<div class=""leading-tight text-left""><p>Example</p></div><div><div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(31,35,40);"">pandas</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">scikit</span><span style=""color: rgb(207,34,46);"">-</span><span style=""color: rgb(31,35,40);"">learn</span></span>
</code></pre></div></div></div></div>
<span>Once you upload the above files, please provide the name for a storage collection.</span>
<span>Let&rsquo;s look at an example.</span>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#example"">‚Äã</a></div><span class=""cursor-pointer"">Example</span></h2>
<span>We upload the custom functions, as below:</span>
<p align=""center""><span><span style=""visibility: visible;""><img class=""object-contain"" height=""586"" src=""https://mintcdn.com/mindsdb/QF5BKvjknzzY0II3/assets/upload_custom_function2.png?fit=max&amp;auto=format&amp;n=QF5BKvjknzzY0II3&amp;q=85&amp;s=fe7a7d53017ee716612d4139893c37cd"" style="""" width=""374"" /></span></span></p>
<span>Here we upload the <code>functions.py</code> file that stores an implementation of the functions and the <code>requirements.txt</code> file that stores all the dependencies. We named the storage collection as <code>custom_functions</code>.</span>
<span>Now we can use the functions as below:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">SELECT</span><span style=""color: rgb(5,80,174);""> functions</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">add_integers</span><span style=""color: rgb(31,35,40);"">(sqft, </span><span style=""color: rgb(5,80,174);"">1</span><span style=""color: rgb(31,35,40);"">) </span><span style=""color: rgb(207,34,46);"">AS</span><span style=""color: rgb(31,35,40);""> added_one, sqft</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">FROM</span><span style=""color: rgb(5,80,174);""> example_db</span><span style=""color: rgb(31,35,40);"">.</span><span style=""color: rgb(5,80,174);"">home_rentals</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">LIMIT</span><span style=""color: rgb(5,80,174);""> 1</span><span style=""color: rgb(31,35,40);"">;</span></span>
</code></pre></div></div></div>
<span>Here is the output:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----------+------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| added_one | sqft |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----------+------+</span></span>
<span class=""line""><span style=""color: rgb(31,35,40);"">| </span><span style=""color: rgb(5,80,174);"">918</span><span style=""color: rgb(31,35,40);"">       | </span><span style=""color: rgb(5,80,174);"">917</span><span style=""color: rgb(31,35,40);"">  |</span></span>
<span class=""line""><span style=""color: rgb(207,34,46);"">+</span><span style=""color: rgb(110,119,129);"">-----------+------+</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2228248/Bring+Your+Own+Function+-+MindsDB","/pages/resumedraft.action?draftId=2228248","/x/GAAi"
"2228265","current","SQL API - MindsDB","491527","491782","page","85393","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:04:32.009Z","2025-10-24T14:04:32.009Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><span>MindsDB enhances standard SQL by providing AI building blocks.</span>
<span>This section introduces custom SQL syntax provided by MindsDB to bring data and AI together.</span>
<span>Follow these steps to get started:</span>
<div><div class=""step relative flex items-start pb-5""><div><div>1</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Connect a data source</p><div><span>Use <a class=""link"" href=""/mindsdb_sql/sql/create/database"">CREATE DATABASE</a> to connect your data source to MindsDB.<br />
Explore all available <a class=""link"" href=""/integrations/data-overview"">data sources here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>2</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Configure an AI engine</p><div><span>Use <a class=""link"" href=""/mindsdb_sql/sql/create/ml-engine"">CREATE ML_ENGINE</a> to configure an engine of your choice.<br />
Explore all available <a class=""link"" href=""/integrations/ai-overview"">AI engines here</a>.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>3</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Create and deploy an AI/ML model</p><div><span>Use <a class=""link"" href=""/mindsdb_sql/sql/create/model"">CREATE MODEL</a> to create, train, and deploy AI/ML models within MindsDB.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>4</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Query for predictions</p><div><span>Query for a <a class=""link"" href=""/mindsdb_sql/sql/get-single-prediction"">single prediction</a> or <a class=""link"" href=""/mindsdb_sql/sql/get-batch-predictions"">batch predictions</a> by joining data with models.</span></div></div></div><div class=""step relative flex items-start pb-5""><div><div>5</div></div><div class=""w-full overflow-hidden pl-8 pr-px""><p>Automate customized workflows</p><div><span>Use <a class=""link"" href=""/mindsdb_sql/sql/create/jobs"">JOB</a>, <a class=""link"" href=""/mindsdb_sql/sql/create/trigger"">TRIGGER</a>, or <a class=""link"" href=""/mindsdb_sql/agents/agent"">AGENT</a> to automate workflows.</span></div></div></div></div></div>","/spaces/SOP/pages/2228265/SQL+API+-+MindsDB","/pages/resumedraft.action?draftId=2228265","/x/KQAi"
"2228284","current","Remove a Trigger - MindsDB","491527","491782","page","96349","712020:3330dc8a-ef82-4275-824d-60b669928fc2","712020:3330dc8a-ef82-4275-824d-60b669928fc2","[NULL]","2025-10-24T14:05:32.861Z","2025-10-24T14:05:32.861Z","","1","false","712020:3330dc8a-ef82-4275-824d-60b669928fc2","storage","<div><h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#description"">‚Äã</a></div><span class=""cursor-pointer"">Description</span></h2>
<span>Triggers enable users to define event-based actions. For example, if a table is updated, then run a query to update predictions.</span>
<div><div><span>Currently, you can create triggers on the following data sources: <a class=""link"" href=""https://docs.mindsdb.com/integrations/data-integrations/mongodb"">MongoDB</a>, <a class=""link"" href=""https://docs.mindsdb.com/integrations/app-integrations/slack"">Slack</a>, <a class=""link"" href=""https://github.com/mindsdb/mindsdb/tree/main/mindsdb/integrations/handlers/solace_handler"">Solace</a>.</span></div></div>
<h2 class=""flex whitespace-pre-wrap group font-semibold""><div class=""absolute""><a href=""#syntax"">‚Äã</a></div><span class=""cursor-pointer"">Syntax</span></h2>
<span>Here is the syntax for removing a trigger:</span>
<div><div><div class=""z-10 relative""><div>Copy</div></div><div class=""z-10 relative""><div>Ask AI</div></div></div><div style=""height: auto;background-color: rgb(255,255,255);""><div class=""font-mono whitespace-pre leading-6""><pre class=""shiki shiki-themes github-light-default dark-plus"" style=""background-color: rgb(255,255,255);color: rgb(31,35,40);""><code><span class=""line""><span style=""color: rgb(207,34,46);"">DROP</span><span style=""color: rgb(207,34,46);""> TRIGGER</span><span style=""color: rgb(31,35,40);""> trigger_name;</span></span>
</code></pre></div></div></div></div>","/spaces/SOP/pages/2228284/Remove+a+Trigger+-+MindsDB","/pages/resumedraft.action?draftId=2228284","/x/PAAi"
"2556155","current","Overview","2555916","[NULL]","[NULL]","634","712020:a22f41a4-9145-476c-b8b0-e7d97dd68f05","712020:a22f41a4-9145-476c-b8b0-e7d97dd68f05","[NULL]","2025-10-25T06:40:41.973Z","2025-10-25T06:40:41.973Z","","1","false","712020:a22f41a4-9145-476c-b8b0-e7d97dd68f05","storage","<ac:layout><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">Say hello to your colleagues who want to know your name, pronouns, role, team and location (or if you're remote).</span></p>
        </ac:layout-cell><ac:layout-cell>

            <p />
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üìÑ Recent content that I've worked on</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <ac:structured-macro ac:name=""recently-updated"" ac:schema-version=""1"" ac:macro-id=""f9d6b4ce776b6df2ba84df23c64944e6""><ac:parameter ac:name=""max"">5</ac:parameter></ac:structured-macro>
        </ac:layout-cell><ac:layout-cell>

            <ac:structured-macro ac:name=""blog-posts"" ac:schema-version=""1"" ac:macro-id=""45110fb0-b1a0-433b-a707-39944dddecb0""><ac:parameter ac:name=""max"">5</ac:parameter><ac:parameter ac:name=""content"">titles</ac:parameter></ac:structured-macro>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <h2>üñê Get in touch</h2>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""two_equal""><ac:layout-cell>

            <p>‚úâÔ∏è <ac:placeholder>Insert your email here</ac:placeholder></p>
            <p>üíº <ac:placeholder>Insert your LinkedIn URL here</ac:placeholder></p>
        </ac:layout-cell><ac:layout-cell>

            <p>üîó <ac:placeholder>Insert your Twitter handle here</ac:placeholder></p>
            <p>üë§ <ac:placeholder>Insert your Medium profile here</ac:placeholder></p>
        </ac:layout-cell></ac:layout-section><ac:layout-section ac:type=""fixed-width""><ac:layout-cell>

            <p><span style=""color: rgb(151,160,175);"">End with a bang! Some options are: </span>&quot;I am so grateful to be here at <span style=""color: rgb(0,184,217);"">&lt;Insert company name&gt;</span> and very excited to get started!&quot; or &quot;Looking forward to meeting all of you!&quot; or &quot;Can't wait to get to know all of you!&quot;</p>
        </ac:layout-cell></ac:layout-section></ac:layout>","/spaces/~712020a22f41a49145476cb8b0e7d97dd68f05/overview","/pages/resumedraft.action?draftId=2556155","/x/_wAn"